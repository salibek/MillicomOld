 CapsManager.IndexVectCreate=40000
 CapsManager.IpIcIdOutMk=MainBus.IpIcIdSet
 CapsManager.IpIcIdOutMk=VariableManager.IpIcIdSet
 CapsManager.IpIcIdOutMk=ListSyntez.IpIcIdSet
 MainBus.ModeSet=1
\\ -------------------------------------- \\
NewFU={Mnemo="Console" FUType=FUConsole}
NewFU={Mnemo="LogCon" FUType=FUCon}
NewFU={Mnemo="ProgPanel" FUType=FUConsole}
NewFU={Mnemo="StrSource" FUType=FUStringsSource} \\5
NewFU={Mnemo="MnemoTable" FUType=FUList}
NewFU={Mnemo="MnemoServiceTable" FUType=FUList}
NewFU={Mnemo="CreateNewFU" FUType=FUList}
NewFU={Mnemo="ListSintezator" FUType=FUList}
NewFU={Mnemo="CapsuleManager" FUType=FUMemManager} \\ 10
NewFU={Mnemo="VarManager" FUType=FUVar}
NewFU={Mnemo="FUPanel" FUType=FUOAToolsTree}
NewFU={Mnemo="AtrList" FUType=FUListBox}
NewFU={Mnemo="ConstList" FUType=FUListBox}
NewFU={Mnemo="PointersList" FUType=FUListBox} \\ 15
NewFU={Mnemo="Lexica" FUType=FULex}
NewFU={Mnemo="PanelsRestore" FUType=FUProgExec}
NewFU={Mnemo="NewMkList" FUType=FUList}
NewFU={Mnemo="VarList" FUType=FUListBox}

NewFU={Mnemo="ToolsPanelMaker" FUType=FUOATreeAnalyzer} \\20
NewFU={Mnemo="AtrCounter" FUType=FUCounter}
NewFU={Mnemo="FuTypeIndexes" FUType=FUConstMatr}
NewFU={Mnemo="FuTypeMkTrees" FUType=FUPointMatr}
NewFU={Mnemo="FuTypeMkList" FUType=FUPointMatr}
NewFU={Mnemo="MkMaker" FUType=FUOATreeAnalyzer} \\25
NewFU={Mnemo="MainMenu" FUType=FUMainMenu}
NewFU={Mnemo="GatewayFile" FUType=FUGatewayFile}
NewFU={Mnemo="OATreeViewer" FUType=FUOATreeViewer}
NewFU={Mnemo="ALU" FUType=FUALU Hint="Последовательное АЛУ по умолчанию"}
NewFU={Mnemo="AtrMnemoTableMaker" FUType=FUOATreeAnalyzer} \\30

NewFU={Mnemo="ToolsPanelsDisable" FUType=FUProgExec Hint="Подпрограмма для выключения обновленя панелей инструментов"}
NewFU={Mnemo="ToolsPanelsEnable" FUType=FUProgExec Hint="Подпрограмма для ключения обновленя панелей инструментов"}

\\ ФУ для подбора варинатов ввода лексем
NewFU={Mnemo="RootMnemoTableMaker" FUType=FUOATreeAnalyzer Hint="ФУ для формирования списка вариантов ввода"}
NewFU={Mnemo="PopupMenuList" FUType=FUList Hint="ФУ для формирования списка вариантов ввода"}
NewFU={Mnemo="PopupMnemoFind" FUType=FUList Hint="ФУ для формирования списка вариантов ввода"}
NewFU={Mnemo="PopupMkListFind" FUType=FUFind Hint="ФУ для формирования списка вариантов ввода"}
NewFU={Mnemo="PopupOutMkSeter" FUType=FUVar Hint="ФУ для формирования списка вариантов ввода"}

\\ ФУ для поиска подсказок (Hint)
NewFU={Mnemo="HintLex" FUType=FULex}
NewFU={Mnemo="HintRootFind" FUType=FUList}
NewFU={Mnemo="HintRootServiceFind" FUType=FUList}
NewFU={Mnemo="HintRootServiceMkFind" FUType=FUFind}
NewFU={Mnemo="HintDotFind" FUType=FUList}
NewFU={Mnemo="HintMkFind" FUType=FUConstMatr}

NewFU={Mnemo="MkAlu" FUType=FUIntALU}
NewFU={Mnemo="MkMnemoAnalizator" FUType=FUConstMatr}
NewFU={Mnemo="MkListFind" FUType=FUFind}
NewFU={Mnemo="MkBegRangeFind" FUType=FUFind}
NewFU={Mnemo="MkMnemoDotWait" FUType=FUList}
NewFU={Mnemo="MkFuTypeDotWait" FUType=FUFind Hint="Поиск точки после мнемоники типа ФУ"}
NewFU={Mnemo="MkFuTypeWait" FUType=FUFind Hint="Поиск типа ФУ в капсуле описания типа ФУ"}
NewFU={Mnemo="MkMnemoWait" FUType=FUFind}
NewFU={Mnemo="MkEquality2Wait" FUType=FUList Hint="Ожидание второго и последующего знака ""="" "}
NewFU={Mnemo="MkEquality3Wait" FUType=FUFind Hint="Ожидание второго и последующего знака ""="" после ""!"" "}

NewFU={Mnemo="MnemoAnalysis" FUType=FUList}
NewFU={Mnemo="AtrWait" FUType=FUFind}
NewFU={Mnemo="SyntaxRoot" FUType=FUList}
NewFU={Mnemo="MnemoDelCheck" FUType=FUFind Hint="Проверка того, что лексема является мнемоникой перед ее удалением"}
NewFU={Mnemo="MnemoDelPlingFund" FUType=FUList Hint="Поиск ! после мнемоники для ее удаления"}
NewFU={Mnemo="RootMnemoCapsAdd" FUType=FUList Hint="Добавление комментария к мнемонике"}
NewFU={Mnemo="RootMnemoWait" FUType=FUList Hint="Ожидание комментария к мнемонике"}
NewFU={Mnemo="MnemoTableManager" FUType=FUMemManager}
NewFU={Mnemo="ObjManager" FUType=FUMemManager}
NewFU={Mnemo="MkWaitEquality" FUType=FUList}
NewFU={Mnemo="WaitMnemoDel" FUType=FUFind}
NewFU={Mnemo="MnemoDel" FUType=FUFind}
NewFU={Mnemo="MkLoadAnalysis" FUType=FUList}
NewFU={Mnemo="BackRecAnalysis" FUType=FUList}
NewFU={Mnemo="MnemoWaitVar" FUType=FUList}
NewFU={Mnemo="MnemoWaitConst" FUType=FUFind}
NewFU={Mnemo="IcLoadMnemoAnalysis" FUType=FUList}
NewFU={Mnemo="SyntaxStack" FUType=FUList}
NewFU={Mnemo="IcAnalysis" FUType=FUList}
NewFU={Mnemo="AtrAnalysis" FUType=FUList}
NewFU={Mnemo="AtrAnalysis2" FUType=FUFind}
NewFU={Mnemo="AtrAnalysis3" FUType=FUFind}
NewFU={Mnemo="IcMnemoAnalysis" FUType=FUList}
NewFU={Mnemo="AfterAtrBracket" FUType=FUFind}
NewFU={Mnemo="IcWaitEquality" FUType=FUList}
NewFU={Mnemo="IcAfterEquality" FUType=FUList}
NewFU={Mnemo="IcAfterLoadPointer" FUType=FUFind}

NewFU={Mnemo="LoadAfterBracket" FUType=FUList}
NewFU={Mnemo="LoadBracket" FUType=FUList}

NewFU={Mnemo="AfterIc" FUType=FUList}
NewFU={Mnemo="AfterCapsule" FUType=FUList}
NewFU={Mnemo="BackRecRealizer" FUType=FUFind}
NewFU={Mnemo="IcPlus" FUType=FUList}
NewFU={Mnemo="MkLoadMnemo" FUType=FUList}
NewFU={Mnemo="ListAfterIcPointer" FUType=FUList}
NewFU={Mnemo="ListLineWait" FUType=FUList}
NewFU={Mnemo="AfterList" FUType=FUList}
NewFU={Mnemo="ListLineMnemo" FUType=FUList}
NewFU={Mnemo="ListSubAnaLysis" FUType=FUFind}
NewFU={Mnemo="ServiceComp" FUType=FUList Hint="Обработка директив компилятора"}

NewFU={Mnemo="TreeCopyWait" FUType=FUFind Mnemo="Ожидание ОА-графа для копирования"}
NewFU={Mnemo="MkBack" FUType=FUPointMatr Hint="Формирование последовательности Мк"}
NewFU={Mnemo="MkAgainWait" FUType=FUFind}
NewFU={Mnemo="IcMkAgainWait" FUType=FUList}

\\ Арифметические выражения
NewFU={Mnemo="ARoot" FUType=FUList Hint="Root для распознания арифметических выражений"}
NewFU={Mnemo="AEqualWait" FUType=FUList}
NewFU={Mnemo="AStart" FUType=FUList}
NewFU={Mnemo="APlusAfter" FUType=FUList}
NewFU={Mnemo="AMinusAfter" FUType=FUList}
NewFU={Mnemo="AOperatWait" FUType=FUList}
NewFU={Mnemo="AWait" FUType=FUList}
NewFU={Mnemo="MulDivAfter" FUType=FUFind}
NewFU={Mnemo="ARootCheck" FUType=FUList}
NewFU={Mnemo="BrecketLift" FUType=FUList}
NewFU={Mnemo="ALogLift" FUType=FUList}
NewFU={Mnemo="BiggerCheck" FUType=FUList}
NewFU={Mnemo="AFuncBracket" FUType=FUFind}
NewFU={Mnemo="AFuncLift" FUType=FUFind}
NewFU={Mnemo="AStack" FUType=FUList Hint="Арифметический стек"}
NewFU={Mnemo="AOperationAnalysis" FUType=FUList Hint="Анализ арифметической операции"}
NewFU={Mnemo="ACmp" FUType=FUCmp Hint="Сравнение приоритетов во время разбора арифметических выражений"}
NewFU={Mnemo="AFinProg" FUType=FUProgExec Hint="Программа, запускаемая по завершению разбора арифметического выражения"}
NewFU={Mnemo="AFinAct" FUType=FUList Hint="Завершение разбора арифметического выражения"}

BackRec
BackRecIc
StackBottom
ListMark
ListLineMark
ListName
ListRestore \\ Восстановиление списка при обреботке вложенных списков
Separator*-4
CType
AriphmAtr \"Атриубут арифметических выражений"

// ALUCurrent=0 \"Милликоманда для текущего АЛУ (формат: Текущее АЛУ.ProgExec по умолчанию ALU.ProgExec)"

\\\ Распознание арифметич. выражений
LexReceiverMkAtr \"Атрибут милликоманды для приемника лекскем"
LexReceiverContextAtr \"Атрибут контекста для приемника лекскем"
BracketAtr \"Атрибут скобки"

\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

FUNew#CreateNewFU.FindCapsIc

//ListSyntez.IndexModeSet=true
//CapsManager.IndexModeSet=true
//VariableManager.IndexModeSet=true
MainBus.ModeSet=2

MainBus.PartialResetSet \\ Запомнить число созданных ФУ
CreateNewFU.BusModeSet=2
FUPanel.StopAtrAdd=FUTypeDef \\ Задать атрибут прекращения построения дерева ФУ
MkMnemoAnalizator.HashIndexSet=-1
ProgPanel.ConsMkSet=StrSource.StartStr

// Отключение/включение инструментальных панелей
ToolsPanelsDisable.Set={
  FUPanel.ActiveSet=false   AtrList.ActiveSet=false
  ConstList.ActiveSet=false PointersList.ActiveSet=false
}

ToolsPanelsEnable.Set={
  FUPanel.ActiveSet    AtrList.ActiveSet
  ConstList.ActiveSet  PointersList.ActiveSet
}

MnemoTable.HashAtrSet=Mnemo
MnemoTable.HashAtrNBitSet=8
MnemoServiceTable.HashAtrSet=Mnemo
MnemoServiceTable.HashAtrNBitSet=8

MkBack.RowSet=30 // Инициализация массива для обработки нескольких Мк через запятую
MkBack.ColSet=1
MkBack.Create

\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\ Разбор арифметических выражений \\
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

AВracketAtr \"Атрибут скобки"
AFuncAtr\"Атрибут функции"
ARootAtr\"Атрибут корневого арифметического выражения"
ArgAtr\"Аргумент функции"

ALogLift.BusModeSet=1
\**\ALogLift.Set=
>{AВracketAtr AFuncAtr ARootAtr ArgAtr  Obj={SyntaxStack.LineLastOutMk=CapsuleManager.CapsIcSet}}
>{1 2  Obj={SyntaxStack.LineLastDelMk SyntaxStack.LineLastOutMk=ALogLift.FindIp}}
>{Obj={Lexica.Stop LogCon.VarOut="Wrong expression !!!"} 0}

\**\AFuncBracket.Set=
>{Separator="("}
>{Lexica.ReceiverMkSet=AStart.FindIp}
>{Lexica.Stop LogCon.VarOut="'(' is not found !!!"}

ARootCheck.BusModeSet=2
ARootCheck.Set=
>{1=nil SyntaxStack.MarkLastExcludeMk=ARootCheck.FindIp}
>{2=nil SyntaxStack.MarkLastExcludeMk=ARootCheck.FindIp}
>{ARootAtr
  SyntaxStack.MarkLastExcludeMk=AFinAct.FindIp}
>{0 Lexica.Stop LogCon.VarOut="Wrong expression !!!"}

AOperationAnalysis.BusModeSet=1
\**\AOperationAnalysis.Set=
>{AВracketAtr AFuncAtr ARootAtr ArgAtr
  Obj=tempCmp{
   CapsuleManager.IpAdd CapsuleManager.IpPop=temp 
   SyntaxStack.MarkCopyAdd={0=temp(nil)!}
   ACmp.PopMk=SyntaxStack.MarkLastAtrSet
   Lexica.ReceiverMkSet=AWait.FindIp}}
>{1 2 Obj={AOperationAnalysis.InObjAtrPopMk=ACmp.Cmp
  ACmp.PopMk=SyntaxStack.MarkLastAtrSet //!!!!!!!
  Lexica.ReceiverMkSet=AWait.FindIp}}
>{Obj={Lexica.Stop LogCon.VarOut="Wrong expression !!! 4"} 0}

BiggerCheck.BusModeSet=2
BiggerCheck.Set=
>{1 SyntaxStack.LineLastPop
  SyntaxStack.LineLastOutMk=CapsuleManager.CapsSet CapsuleManager.IpAdd Lexica.ReceiverMkSet=AWait.FindIp}
>{ArgAtr=nil ACmp.PopMk=SyntaxRoot.MarkLastAtrSet CapsuleManager.IpAdd Lexica.ReceiverMkSet=AWait.FindIp}
>{AВracketAtr=nil temp[ACmp.PopMk=SyntaxRoot.MarkLastAtrSet CapsuleManager.IpAdd Lexica.ReceiverMkSet=AWait.FindIp}
>{ARootAtr + temp!}
>{0 Lexica.Stop LogCon.VarOut="Wrong expression !!! B"}

Bus={ACmp.EqProgSet=tempCmp!}
ACmp.GreaterProgSet={
  SyntaxStack.MarkLastButOnePopMk=BiggerCheck.FindIp
}

ACmp.LessProgSet={
  CapsuleManager.IpPop=temp
  CapsuleManager.IpToTail
  CapsuleManager.PointOut=temp2
  CapsuleManager.PointPointerOut=temp3
  CapsuleManager.CapsCopyIpSet={FUALU.Set=0}
  CapsuleManager.PointSet=temp2(nil)!
  CapsuleManager.CapsOut=temp3(nil)!
  CapsuleManager.IpCopyAdd=temp(nil)!
  CapsuleManager.IpPop=temp SyntaxStack.MarkCopyAdd={0=temp(nil)!}
  ACmp.PopMk=SyntaxStack.MarkLastAtrSet
}
BrecketLift.BusModeSet=2
\**\BrecketLift.Set=
>{1 temp[SyntaxStack.MarkLastExcludeMk=BrecketLift.FindIp} 
>{2 + temp!}
>{ArgAtr
SyntaxStack.MarkLastExcludeMk=BrecketLift.FindIp
//SyntaxStack.LineLastOutMk=CapsuleManager.CapsIcSet
//	Lexica.ReceiverMkSet=AOperatWait.FindIp
}
>{AВracketAtr temp[SyntaxStack.LineLastOutMk=CapsuleManager.CapsIcSet
	Lexica.ReceiverMkSet=AOperatWait.FindIp
}
>{AFuncAtr+ temp!}
>{0 Lexica.Stop LogCon.VarOut="')' is not finded !!!"}

AFuncLift.Set=
>{1 2 Obj={SyntaxStack.LineLastDelMk SyntaxStack.LineLastOutMk=FUList.FindIp}}
>{AFuncAtr}
>{Obj={Lexica.Stop LogCon.VarOut="Wrong expression !!! 7"} 0}

AOperatWait.BusModeSet=2
\**\AOperatWait.Set=
>{Separator="<" SyntaxStack.LineLastOutMk=ALogLift.FindIp CapsuleManager.IpCopyAdd={FUALU.Big}
  CapsuleManager.PointOut=temp
  CapsuleManager.CapsCopyIpSet={FUALU.Set=0}
  CapsuleManager.CapsOut=temp(nil)!
}
>{Separator="+" ACmp.Set=1 CapsuleManager.IcCopy={FUALU.Add=0} 
    SyntaxStack.MarkLastPopMk=AOperationAnalysis.FindIp}
>{Separator="-" ACmp.Set=1 CapsuleManager.IcCopy={FUALU.Sub=0}
  SyntaxStack.MarkLastPopMk=AOperationAnalysis.FindIp}
>{Separator="*" ACmp.Set=2 CapsuleManager.IcCopy={FUALU.Mul=0}
  SyntaxStack.MarkLastPopMk=AOperationAnalysis.FindIp}
>{Separator="/" ACmp.Set=2 CapsuleManager.IcCopy={FUALU.Div=0}
 SyntaxStack.MarkLastPopMk=AOperationAnalysis.FindIp}
>{Separator=")" SyntaxStack.MarkLastExcludeMk=BrecketLift.FindIp}
>{Separator="," SyntaxStack.MarkLastPopMk=AFuncLift.FindIp 
//  SyntaxStack.LineLastDelMk
  SyntaxStack.LineLastButOnePopMk=CapsuleManager.CapsIcSet 
  CapsuleManager.IpPopMk=CapsuleManager.IpCopyAdd
  CapsuleManager.PointPointerOut=temp
  CapsuleManager.CapsCopyIpSet={FUALU.Set=0}
  CapsuleManager.CapsOut=temp(nil)!
  CapsuleManager.CapsOut=temp SyntaxStack.MarkAdd={ArgAtr=temp(nil)!}
  Lexica.ReceiverMkSet=AStart.FindIp}

>{0 SyntaxStack.MarkLastDelPopMk=ARootCheck.FindIp}

AStart.BusModeSet=1
\**\AStart.Set=
>{VarPointer AtrPointer Const ConstInt  Obj={ 
  FUList.InObjPointPopMk=CapsuleManager.PointSet
  Lexica.ReceiverMkSet=AOperatWait.FindIp}}
>{Separator="(" 
   Obj={
  CapsuleManager.PointPointerOut=temp
  CapsuleManager.CapsCopyIpSet={FUALU.Set=0}
  CapsuleManager.CapsOut=temp(nil)!
  CapsuleManager.CapsOut=temp SyntaxStack.MarkCopyAdd={AВracketAtr=temp(nil)!}}
}
>FuncLine{Func Obj={
  CapsuleManager.PointPointerOut=temp
  CapsuleManager.CapsCopyIpSet={0=0}
  FUList.InObjPointPopMk=CapsuleManager.AtrSet
  CapsuleManager.CapsOut=temp(nil)!

  CapsuleManager.PointPointerOut=temp
  CapsuleManager.CapsCopyIpSet={FUALU.Set=0}
  CapsuleManager.CapsOut=temp(nil)!
  CapsuleManager.CapsOut=temp SyntaxStack.MarkCopyAdd={AFuncAtr=temp(nil)!}

  CapsuleManager.PointPointerOut=temp
  CapsuleManager.CapsCopyIpSet={FUALU.Set=0}
  CapsuleManager.CapsOut=temp(nil)!
  CapsuleManager.CapsOut=temp SyntaxStack.MarkCopyAdd={ArgAtr=temp(nil)!}
  Lexica.ReceiverMkSet=AFuncBracket.FindIp
 }}
>{Obj={Lexica.Stop LogCon.VarOut="Wrong expression !!! 3"} 0}

AWait.BusModeSet=1
\**\AWait.Set=
>{Const ConstInt Obj={Lexica.ReceiverMkSet=AOperatWait.FindIp
 FUList.InObjPointPopMk=CapsuleManager.DataSet}}
>{VarPointer AtrPointer Obj={FUList.InObjPointPopMk=CapsuleManager.PointSet
   Lexica.ReceiverMkSet=AOperatWait.FindIp}}
>{Separator="("  Obj={ACmp.PopMk=SyntaxStack.MarkLastAtrSet
	CapsuleManager.IpAdd
	CapsuleManager.PointPointerOut=temp
	CapsuleManager.CapsCopyIpSet={FUALU.Set=0}
	CapsuleManager.CapsOut=temp(nil)!
	CapsuleManager.CapsOut=temp SyntaxStack.MarkAdd={AВracketAtr=temp(nil)!}
	Lexica.ReceiverMkSet=AStart.FindIp}
}
>FuncLine
>{Obj={SyntaxStack.LineLastPopMk=ARootCheck.FindIp} 0}

MulDivAfter.Set={Separator="="}
MulDivAfter.SuccessProgSet={Lexica.ReceiverMkSet=AStart.FindIp}
MulDivAfter.FailProgSet={Lexica.Stop LogCon.VarOut="Wrong expression !!!"}

AEqualWait.BusModeSet=2
\**\AEqualWait.Set=
>{Separator="=" Lexica.ReceiverMkSet=AStart.FindIp}
>{Separator="-" Lexica.ReceiverMkSet=AMinusAfter.FindIp}
>{Separator="+" Lexica.ReceiverMkSet=APlusAfter.FindIp}
>{Separator="*" 
  CapsuleManager.PointOut=temp CapsuleManager.IpCopyAdd={FUALU.Set=temp(nil)!}
  CapsuleManager.IpCopyAdd={FUALU.Mul}
 
tempProg[CapsuleManager.PointPointerOut=temp
  CapsuleManager.CapsCopyIpSet={FUALU.Set=0}
  CapsuleManager.CapsOut=temp(nil)!
  Lexica.ReceiverMkSet=MulDivAfter.FindIp}
>{Separator="/"
  CapsuleManager.PointOut=temp CapsuleManager.IpCopyAdd={FUALU.Set=temp(nil)!}
  CapsuleManager.IpCopyAdd={FUALU.Div}
  + tempProg!}
>{0 Lexica.Stop LogCon.VarOut="Wrong expression !!!"}

AFinAct.BusModeSet=2
\**\AFinAct.Set=
>{Mk AFinAct.InObjPointPopMk=MainBus.ProgExec CapsuleManager.IpMarkHold=false
  Lexica.ReceiverMkSet=SyntaxRoot.FindIp
  AOperatWait.InObjPopMk=SyntaxRoot.FindIp
}
>{IcPointer AFinAct.InObjPointPopMk=CapsuleManager.CapsIcSet
  Lexica.ReceiverMkSet=AfterIc.FindIp AOperatWait.InObjPopMk=AfterIc.FindIp}
>{0 Lexica.Stop LogCon.VarOut="Wrong expression !!!"}

AMinusAfter.BusModeSet=2
\**\AMinusAfter.Set=
>{Separator="=" 
  CapsuleManager.PointOut=temp CapsuleManager.IpCopyAdd={FUALU.Set=temp(nil)!}
  CapsuleManager.IpCopyAdd={FUALU.Sub}
 
 tempProg[CapsuleManager.PointPointerOut=temp
  CapsuleManager.CapsCopyIpSet={FUALU.Set=0}
  CapsuleManager.CapsOut=temp(nil)!
  Lexica.ReceiverMkSet=AStart.FindIp
}
>{Separator="-" CapsuleManager.AtrSet=FUALU.Dec SyntaxStack.LineLastPopMk=AFinAct.FindIp}
>{0 Lexica.Stop LogCon.VarOut="Wrong expression !!!"}

APlusAfter.BusModeSet=2
\**\APlusAfter.Set=
>{Separator="="
  CapsuleManager.PointOut=temp CapsuleManager.IpCopyAdd={FUALU.Set=temp(nil)!}
  CapsuleManager.IpCopyAdd={FUALU.Add}
  +tempProg!
}
>{Separator="+" CapsuleManager.AtrSet=FUALU.Inc SyntaxStack.LineLastPopMk=AFinAct.FindIp}
>{0 Lexica.Stop LogCon.VarOut="Wrong expression !!!"}

ARoot.BusModeSet=2
\**\ARoot.Set=
>{VarPointer temp2[Lexica.ReceiverMkSet=AEqualWait.FindIp 
   FUList.InObjPointPop=temp  CapsuleManager.IpCopyAdd={FUALU.OutSet=temp(nil)!}}
>{AtrPointer + temp2!}
>{Const temp2[Lexica.ReceiverMkSet=AEqualWait.FindIp
   FUList.InObjDataPop=temp CapsuleManager.IpCopyAdd={FUALU.OutSet=temp(0)!}}
>{ConstInt + temp2!}
>{0 Lexica.Stop LogCon.VarOut="Wrong expression !!!"}

///////////////

CreateNewFU.Set=
>{Mnemo MnemoTableManager.CapsReset  CreateNewFU.InObjPopMk=MnemoTableManager.IpCopyAdd
	MnemoTableManager.CapsOutMk=MnemoServiceTable.LineAdd
	MnemoTableManager.IpCopyAdd={TreeParentLevelAtr=1}
	CreateNewFU.InObjPointPop=temp1
}
>{MkBegRange CreateNewFU.InObjPopMk=MnemoTableManager.IpCopyAdd}
>{MkList  CreateNewFU.InObjPopMk=MnemoTableManager.IpCopyAdd}
>{FUType
	CreateNewFU.InObjPointPopMk=MainBus.Create
	MainBus.LastFuNameSet=temp1(nil)!
	MainBus.LastMkRangePop=temp MnemoTableManager.IpCopyAdd={MkBegRange=temp(0)!}

	MainBus.LastFuTypePopMk=FuTypeIndexes.SearchInCol
	FuTypeIndexes.RowPopMk=FuTypeMkList.RowSet
	FuTypeIndexes.RowPopMk=FuTypeMkTrees.RowSet
	FuTypeMkList.CellPop=temp  MnemoTableManager.IpCopyAdd={MkList=temp(nil)!}
	FuTypeMkTrees.CellPop=temp MnemoTableManager.IpCopyAdd={MkTree=temp(nil)!}
	MainBus.LastFuTypePop=temp MnemoTableManager.IpCopyAdd={FUType=temp(0)!}
}
>{MkBegRangeByFUType=nil
	MnemoTableManager.IpCopyAdd={MkList}
	CreateNewFU.InObjDataPopMk=FuTypeIndexes.SearchInCol
	FuTypeIndexes.RowPopMk=FuTypeMkList.RowSet
	FuTypeMkList.CellPop=temp  MnemoTableManager.PointSet=temp(nil)!
}
>{Hint CreateNewFU.InObjPopMk=MnemoTableManager.IpCopyAdd}
>{IniProg CreateNewFU.InObjPointPopMk=MainBus.LastFUProgExec}
\\ Милликоманды
\\ Описание работы с милликомандами
Bus={FuTypeIndexes.RowSet=300 FuTypeIndexes.ColSet=1 FuTypeIndexes.Create=10000 FuTypeIndexes.SearchModeSet=0 FuTypeIndexes.IndexModeSet=2
	FuTypeMkTrees.RowSet=300 FuTypeMkTrees.ColSet=1 FuTypeMkTrees.Create=nil FuTypeMkTrees.IndexModeSet=2
	FuTypeMkList.RowSet=300 FuTypeMkList.ColSet=1 FuTypeMkList.Create=nil FuTypeMkList.IndexModeSet=2
}
// Дырки: 958-...
CommonMkList{
 	Mnemo="Common Mk" Hint="Общие милликоманды для всех типов ФУ" Comment

	Obj={Mnemo="Reset" Mk=0 Hint="Установить указатель на ячейку памяти"}
	Obj={Mnemo="SubProg" Mk=900 Hint="Вызов подпрограммы во время выполнения ProgExec"}
	Obj={Mnemo="RepeatProg" Mk=901 Hint="Повторение подпрограммы"}
	Obj={Mnemo="HalfReset" Mk=971 Hint="Установить значение в ячейку памяти"}
	Obj={Mnemo="ActiveSet" Mk=902 Hint="Выдать знечение из ячейки памяти"}
 
	Obj={Mnemo="ValPointerSet" Mk=955 Hint="Сброс ФУ"}
	Obj={Mnemo="ValSet" Mk=956 Hint="Полусброс ФУ (не сбрасываются основные настройки)"}
	Obj={Mnemo="ValOutMk" Mk=957 Hint="Установить флаг активного поведения ФУ (если load=nil, то устанавливается активный режим)"}
 
	Obj={Mnemo="Prog execution" Comment Hint="Запуск миллипрограмм"
		Obj={Mnemo="ProgStop" Mk=989 Hint="Остановка запущенной на выполнение миллипрограммы для данного ФУ"}
		Obj={Mnemo="ProgStopAll" Mk=988 Hint="Остановка всех запущенных на выполнение миллипрограммы для данного ФУ"}
		Obj={Mnemo="PrefixProgSet" Mk=924 Hint="Установить ссылку на подпрограмму, запускаемую до обработки пришедшей милликоманды"}
		Obj={Mnemo="PostfixProgSet" Mk=922 Hint="Установить ссылку на подпрограмму, запускаемую после обработки пришедшей милликоманды"}
		Obj={Mnemo="BusSet" Mk=926 Hint="Установить контекст Шины"}
		Obj={Mnemo="ProgExec" Mk=990 Hint="Выполнить миллипрограмму"}
		Obj={Mnemo="ProgSet" Mk=991 Hint="Установить указатель на миллипрограмму, выполняемую по милликоманде ProgExec, когда в нарузке nil"}
		Obj={Mnemo="ElseProgSet" Mk=953 Hint="Установить указатель на альтернативную миллипрограмму"}
		Obj={Mnemo="ProgSetExec" Mk=954 Hint="Установить указатель на программу и выполнить ее"}
		Obj={Mnemo="RepeatProg" Mk=901 Hint="Повторить программу"}
		Obj={Mnemo="IniProgSet" Mk=904 Hint="Установить подпрограмму инициализации ФУ"}
		Obj={Mnemo="IniProgExec" Mk=903 Hint="Выполнить подпрограмму инициализации ФУ"}
	}
	Obj={Mnemo="Modeling" Comment Hint="Моделирование вычислительного процеса"
		Obj={Mnemo="SchedulerContextSet" Mk=918 Hint="Установить ссылку на контекст ФУ-планировщика"}
		Obj={Mnemo="SchedulerSet" Mk=918 Hint="Установить ссылку на контекст ФУ-планировщика"}
		Obj={Mnemo="ManualModeSet" Mk=916 Hint="Установить режим ручного управления ФУ"}
		Obj={Mnemo="ModelingReset" Mk=907 Hint="Сбросить настройки моделирования у ФУ"}

		Obj={Mnemo="MkQueueCountPop" Mk=914 Hint="Выдать количество милликоманд в очереди на выполнение к ФУ"}
		Obj={Mnemo="MkQueueCountPopMk" Mk=913 Hint="Выдать милликоманду с количеством милликоманд в очереди на выполнение к ФУ"}
		Obj={Mnemo="MkQueueCapsPop" Mk=912 Hint="Выдать указатель на капсулу с милликомандами с очереди на выполнение к ФУ"}
		Obj={Mnemo="MkQueueCapsPopMk" Mk=911 Hint="Выдать милликоманду с указателем на капсулу с милликомандами с очереди на выполнение к ФУ"}

		Obj={Mnemo="MkQueueCountMaxPop" Mk=910 Hint="Выдать указатель максимальную длину очереди милликоманд к ФУ"}
		Obj={Mnemo="MkQueueCountMaxPopMk" Mk=909 Hint="Выдать милликоманду с максимальной длиной очереди милликоманд к ФУ"}
		Obj={Mnemo="MkQueueCountMaxSet" Mk=908 Hint="Установить максимальную длину очереди милликоманд (для инициализации)"}

		Obj={Mnemo="SourceMkCountSet" Mk=951 Hint="Задать счетчик МК исходных данных (при нагрузке = nil в счетчик записывается число Мк в очереди на данный момент)"}
	}
	Obj={Mnemo="Present Mks" Comment Hint="Заранее предустановленные милликоманды"
		Obj={Mnemo="Mk0Set" Mk=979 Hint="Установить нулевую предопределенную милликоманду"}
		Obj={Mnemo="Mk1Set" Mk=978 Hint="Установить первую предопределенную милликоманду"}
		Obj={Mnemo="Mk2Set" Mk=977 Hint="Установить вторую предопределенную милликоманду"}
		Obj={Mnemo="Mk3Set" Mk=976 Hint="Установить третью предопределенную милликоманду"}
		Obj={Mnemo="Mk4Set" Mk=975 Hint="Установить четвёртую предопределенную милликоманду"}
		Obj={Mnemo="Mk5Set" Mk=974 Hint="Установить пятую предопределенную милликоманду"}
		Obj={Mnemo="Mk6Set" Mk=973 Hint="Установить шестую предопределенную милликоманду"}
		Obj={Mnemo="Mk7Set" Mk=972 Hint="Установить седьмую предопределенную милликоманду"}

		Obj={Mnemo="Mk0" Mk=987 Hint="Установить седьмую предопределенную милликоманду"}
		Obj={Mnemo="Mk1" Mk=986 Hint="Установить седьмую предопределенную милликоманду"}
		Obj={Mnemo="Mk2" Mk=985 Hint="Установить седьмую предопределенную милликоманду"}
		Obj={Mnemo="Mk3" Mk=984 Hint="Установить седьмую предопределенную милликоманду"}
		Obj={Mnemo="Mk4" Mk=983 Hint="Установить седьмую предопределенную милликоманду"}
		Obj={Mnemo="Mk5" Mk=982 Hint="Установить седьмую предопределенную милликоманду"}
		Obj={Mnemo="Mk6" Mk=981 Hint="Установить седьмую предопределенную милликоманду"}
		Obj={Mnemo="Mk7" Mk=980 Hint="Установить седьмую предопределенную милликоманду"}
	}
	Obj={Mnemo="ContextPop" Mk=995 Hint="Выдать указатель на контекст ФУ"}
	Obj={Mnemo="ContextPopMk" Mk=999 Hint="Выдать милликоманду с указателем на контекст ФУ"}
	Obj={Mnemo="ContextOut" Mk=995 Hint="Выдать указатель на контекст ФУ"}
	Obj={Mnemo="ContextOutMk" Mk=999 Hint="Выдать милликоманду с указателем на контекст ФУ"}

 
	Obj={Mnemo="FUTypePop" Mk=906 Hint="Выдать тип ФУ"}
	Obj={Mnemo="FUTypePopMk" Mk=905 Hint="Выдать милликоманду с типом ФУ"}

	Obj={Mnemo="FUNameSet" Mk=998 Hint="Установить имя ФУ"}
	Obj={Mnemo="FUNamePop" Mk=997 Hint="Выдать имя ФУ"}
	Obj={Mnemo="FUNamePopMk" Mk=996 Hint="Выдать милликоманду с именем ФУ"}

	Obj={Mnemo="FUModeSet" Mk=950 Hint="Установить режим работы ФУ"}
	Obj={Mnemo="FUModeOut" Mk=951 Hint="Выдать режим работы ФУ"}
	Obj={Mnemo="FUModeOutMk" Mk=952 Hint="Выдать МК с режимом работы ФУ"}

	Obj={Mnemo="FUIndexPop" Mk=992 Hint="Выдать индекс ФУ"}
	Obj={Mnemo="FUIndexPopMk" Mk=993 Hint="Выдать милликоманду с индексом ФУ"}

	Obj={Mnemo="FUCommentAdd" Mk=994 Hint="Добавить строку комментария к ФУ"}
}

WindowMkList{
 	Mnemo="Window Mk" Comment Hint="Управление графическим окном"
	Obj={Mnemo="ParentSet" Mk=800 Hint="Установить родительский элемент"}
	Obj={Mnemo="Focus" Mk=801 Hint="Дать для ФУ фокус ввода"}
	Obj={Mnemo="VisibleSet" Mk=802 Hint="Установить видимость окна"}
	Obj={Mnemo="LeftSet" Mk=804 Hint="Установить верхний край компонента"}
	Obj={Mnemo="TopSet" Mk=807 Hint="Установить правый край компонента"}
	Obj={Mnemo="WidthSet" Mk=810 Hint="Установить ширину компонента"}
	Obj={Mnemo="HeightSet" Mk=813 Hint="Установить высоту компонента"}
	Obj={Mnemo="ColorSet" Mk=816 Hint="Установить цвет компонента"}
	Obj={Mnemo="CaptionSet" Mk=819 Hint="Установить заголовок компонента"}
	Obj={Mnemo="CaptionPop" Mk=820 Hint="Выдать заголовок"}
	Obj={Mnemo="CaptionPopMk" Mk=821 Hint="Выдать милликоманду с заголовком"}
	Obj={Mnemo="FormPop" Mk=824 Hint="Выдать ссылку на форму"}
	Obj={Mnemo="FormPopMk" Mk=825 Hint="Выдать милликоманду с ссылкой на форму"}

	Obj={Mnemo="WindowStateSet" Mk=829 Hint="Задать статус окна"}
	Obj={Mnemo="AlignSet" Mk=830 Hint="Задать свойство Align: 0 - alNone, 1 - alTop, 2 - alBottom, 3 - alLeft, 4 - alRight, 5 - alClient"}
//	Obj={Mnemo="" Mk= Hint=""}
}

ZeroFUMkList{Obj={Mnemo="Reset" Mk=0 Hint="Сброс ФУ"}} \\ Заглушка для типов ФУ, для которых еще не готов список милликоманд

BusMkList{
   Obj={Mnemo="FU Creation" Comment Hint="Создание новых ФУ"
   Obj={Mnemo="Create" Mk=1 Hint="Создание нового ФУ"}
   Obj={Mnemo="LastFuNumPop"Mk=2 Hint="Выдать номер последнего созданного ФУ"}
   Obj={Mnemo="LastMkRangePop" Mk=3  Hint="Выдать началао миллидиапазона последнего созданного ФУ"}
   Obj={Mnemo="LastFuNumPopMk" Mk=24  Hint="Выдать милликоманду с номером последнего созданного ФУ"}
   Obj={Mnemo="LastMkRangePopMk" Mk=33  Hint="Выдать милликоманду с началом миллидиапазона последнего созданного ФУ"}
   Obj={Mnemo="NewFuProgSet"Mk=25 Hint="Процедура, вызываемая при создании нового ФУ"}
   Obj={Mnemo="CloneFuProgSet" Mk=30  Hint="Процедура, вызываемая при клонировании ФУ"}
   Obj={Mnemo="LastFuTypePop" Mk=37  Hint="Выдать тип последнего созданного ФУ"}
   Obj={Mnemo="LastFuTypePopMk" Mk=39  Hint="Выдать милликоманду с типом последнего созданного ФУ"}
   Obj={Mnemo="LastFuNameSet" Mk=21  Hint="Установить имя последнего созданного ФУ"}
   Obj={Mnemo="LastFuContextPop" Mk=25  Hint="Выдать контекст последнего созданного ФУ"}
   Obj={Mnemo="LastFuContextPopMk" Mk=27  Hint="Выдать милликоманду с контекстом последнего созданного ФУ"}
   Obj={Mnemo="LastFUProgExec"Mk=23 Hint="Выполнить программу инициализации последнего созданного ФУ"}
   Obj={Mnemo="FUTypeCorrectSet"Mk=155 Hint="Установить коррекцию номера типа ФУ (для переноса ОА-программы на другую ОА-платформу)"}
 }
  Obj={Mnemo="Prog execution" Comment Hint="Запуск миллипрограмм"
    Obj={Mnemo="MkExec" Mk=112 Hint="Выполнить одну милликоманду"}
    Obj={Mnemo="ServiceProgExec"  Mk=212 Hint="Выполнить сервисную миллипрограмму (выполняется при включенном индексном режиме)"}
    Obj={Mnemo="FileExec" Mk=300 Hint="Загрузить и выполнить миллипрограмму из файла"}
}
Obj={Mnemo="IndexMode" Comment Hint="Работа в индексном режиме"
    Obj={Mnemo="NonIndexModeCountSet" Mk=11 Hint="Установить счетчик милликоманд для выполнения без индексного режима (режим 0), по умолчанию 1"}
    Obj={Mnemo="IndexVectCreate" Mk=40 Hint="Создать индексный вектор (на входе - размерность индексного массива)"}
    Obj={Mnemo="IndexVectSet" Mk=42 Hint="Установить указатель на индексный вектор"}
    Obj={Mnemo="IndexCounterPointerSet"Mk=44 Hint="Установить указатель на переменную индексного счетчика"}
    Obj={Mnemo="IndexVectPop" Mk=46 Hint="Выдать указатель на индексный вектор"}
    Obj={Mnemo="IndexCounterPointerPop" Mk=48 Hint="Выдать указатель на индексный счетчик"}
    Obj={Mnemo="MilliRangeIndexModeSet" Mk=60 Hint="Установить миллидиапазон для адресании ФУ в индексном режиме"}
    Obj={Mnemo="ModeSet" Mk=50 Hint="Установить индексный режим"}
    Obj={Mnemo="IpIcIdOutMk" Mk=51 Hint="Выдать милликоманду со ссылкой на запись со служебной информацией ОА-графа"}
    Obj={Mnemo="IpIcIdSet" Mk=52 Hint="Установить указатель на запись со служебной информацийе ОА-графа"}
}
Obj={Mnemo="FU Work" Comment Hint="Работа в индексном режиме"

    Obj={Mnemo="UnitNSet" Mk=5 Hint="Установить номер текущего ФУ"}
    Obj={Mnemo="UnitNOut" Mk=6 Hint="Выдать номер текущего ФУ"}
    Obj={Mnemo="UnitContextOut" Mk=7 Hint="Выдать номер текущего ФУ"}
    Obj={Mnemo="UnitContextSet" Mk=8 Hint="Установить номер текущего ФУ"}
    Obj={Mnemo="UnitMkSet" Mk=151 Hint="Установить номер текущего ФУ по милликоманде"}
    Obj={Mnemo="UnitModeSet" Mk=152 Hint="Установить режим текущего ФУ (по умолчанию false)"}
}
  Obj={Mnemo="BroadcastMk" Mk=22  Hint="Передать милликоманду нескольким ФУ"}
  Obj={Mnemo="PartialResetSet" Mk=100 Hint="Сброс ФУ"}
  Obj={Mnemo="PartialReset" Mk=105 Hint="Сброс ФУ"}
  Obj={Mnemo="Halt" Mk=68 Hint="Прекращение работы всей программы"}

  Obj={Mnemo="SelfMkRangeSet"Mk=80 Hint="Установить миллидиапазон для адресании ФУ самому себе"}
  Obj={Mnemo="MilliRangeSet"Mk=205 Hint="Установить миллидиапазон для адресании ФУ"}
  Obj={Mnemo="RouterSet" Mk=200 Hint="Установить контекст роутера"}
  Obj={Mnemo="TopRangeSet" Mk=14 Hint="Установить верхний диапазон адресов милликоманд"}
  Obj={Mnemo="BottomRangeSet" Mk=15 Hint="Установить верхний диапазон адресов милликоманд"}
  Obj=CommonMkList
}

OutLogConMkList{
		Obj={Mnemo="VarOut" Mk=4 Hint="Вывести символ или строку (переменную)"}
		Obj={Mnemo="IcOut" Mk=9 Hint="Вывести запись (атрибут и объект)"}
		Obj={Mnemo="CapsuleOut" Mk=10 Hint="Вывести капсулу"}
		Obj={Mnemo="SpaceOut" Mk=6 Hint="Вывести символ перевода строки "}
		Obj={Mnemo="ListOut" Mk=11 Hint="Вывести список "}
		Obj={Mnemo="ListSeparatorOut" Mk=12 Hint="Вывести список с разделителями линий "}
		Obj={Mnemo="VarBuf" Mk=17 Hint="Поместить переменную в строковой буфер "}
		Obj={Mnemo="FileSet" Mk=1 Hint="Открыть файл "}
		Obj={Mnemo="MemoSet" Mk=7 Hint="Задать ссылку на Мemo "}
		Obj={Mnemo="MemoClear" Mk=8 Hint="Очистить поле вывода "}
		Obj={Mnemo="MatrOut" Mk=40 Hint="Вывести матрицу"}
		Obj={Mk=45 Mnemo="PointMatrOut"}
		Obj={Mk=100 Mnemo="TextInsert" Hint="Вставить текстовую строку"}
		Obj={Mk=210 Mnemo="MemoPop" Hint="Выдать ссылку на компонент Memo"} 
		Obj={Mk=220 Mnemo="MemoPopMk" Hint="Выдать милликоманду со ссылкой на компонент Memo"} 
		Obj={Mk=230 Mnemo="StirngsPop"Hint="Выдать ссылку на компонент TStrings"}
		Obj={Mk=240 Mnemo="StringsPopMk" Hint="Выдать милликоманду со ссылкой на компонент TStrings"}
	}
ListMkList{
	Obj={Mnemo="List" Hint="Работа со списком капсул" Comment

		Obj={Mnemo="Set" Mk=162 Hint="Задать ссылку на список"}
		Obj={Mnemo="Del" Mk=1 Hint="Удалить список и входящие в него капсулы"}
		Obj={Mnemo="Pop" Mk=220 Hint="Выдать указатель на начало списка"}
		Obj={Mnemo="PopMk" Mk=43 Hint="Выдать милликоманду с указателем на начало списка"}
		Obj={Mnemo="LevelNext" Mk=20 Hint="Приступить к обработке нового списка - на входе ссылка на новый уровень списка (затем можно возвратиться к обработке старого списка с помощью Mk ListOld)"}
		Obj={Mnemo="LevelPrev" Mk=21 Hint="Возвратиться к обработке предыдущего уровня списка (старый список запоминается ранее с помощью Mk LevelNew)"}
		Obj={Mnemo="LevelPrevAdd" Mk=9 Hint="Добавить ссылку на новый уровень списка в предыдущей список (старый список запоминается ранее с помощью Mk LevelNew)"}
		Obj={Mnemo="ListReset" Mk=22 Hint="Сбросить запомненные контексты списков(списоки запоминается ранее с помощью Mk LevelNew)"}
		Obj={Mnemo="LineSearch" Mk=10 Hint="Поиск линии (линия ищется по ссылке на марку или ссылке на линию)"}
		Obj={Mnemo="FailObjSet" Mk=28 Hint="Назначить ссылку на объект, которая выдается в случае неудовлетворения условиям поиска "}
		Obj={Mnemo="MarkAtrSet" Mk=23 Hint="Установить текущую метку лиции добавляемой новой строки"}
		Obj={Mnemo="ListNumAdrSet" Mk=490 Hint="Установить адрес для записи номера ФУ (для реализации работы параллельных автоматов)"}
		Obj={Mnemo="ListNumSet" Mk=491 Hint="Установить номер ФУ (для реализации работы параллельных автоматов)"}
		Obj={Mnemo="LineInsNext" Mk=90 Hint="Вставить строку после текущей строки"}
		Obj={Mnemo="LineInsPrev" Mk=92 Hint="Вставить строку перед текущей строкой"}
		Obj={Mnemo="TemplSet" Mk=110 Hint="Установить указатель на шаблон списка"}
		Obj={Mnemo="TemplOut" Mk=111 Hint="Выдать указатель на шаблон списка"}
		Obj={Mnemo="TemplOutMk" Mk=117 Hint="Выдать МК с указателем на шаблон списка"}
		Obj={Mnemo="TemplDelMk" Mk=118 Hint="Выдать МК с указателем и удалить шаблон списка"}
		Obj={Mnemo="TemplPop" Mk=119 Hint="Выдать и обнулить шаблон списка"}
		Obj={Mnemo="TemplPopMk" Mk=127 Hint="Выдать и обнулить шаблон списка"}

		Obj={Mnemo="MarkAtr" Hint="Работа со строками списка" Comment
			Obj={Mnemo="MarkLineAtrSet" Mk=720 Hint="Установить атрибут марки линии"}
			Obj={Mnemo="MarkLineAtrPop" Mk=721 Hint="Выдать атрибут марки линии"}
			Obj={Mnemo="MarkLineAtrPopMk" Mk=722 Hint="Выдать милликоманду с атрибутом марки линии"}
			Obj={Mnemo="MarkLastAtrSet" Mk=723 Hint="Установить  атрибут марки последней линии"}
			Obj={Mnemo="MarkLastAtrPop" Mk=724 Hint="Выдать атрибут марки последнеий линии"}
			Obj={Mnemo="MarkLastAtPopMk" Mk=725 Hint="Выдать милликоманду с атрибутом последней линии"}
			Obj={Mnemo="MarkLastButOneAtrSet" Mk=726 Hint="Установить  атрибут марки предпоследней линии"}
			Obj={Mnemo="MarkLastButOneAtrPop" Mk=727 Hint="Выдать атрибут марки предпоследнеий линии"}
			Obj={Mnemo="MarkLastButOneAtPopMk" Mk=728 Hint="Выдать милликоманду с атрибутом предпоследней линии"}
		}

		Obj={Mnemo="Mark" Hint="Работа с маркерами списка" Comment
			Obj={Mnemo="MarkLastPop" Mk=223 Hint="Выдать указатель на метку последней строки списка"}
			Obj={Mnemo="MarkLastPopMk" Mk=233 Hint="Выдать милликоманду с указателем на метку последней строки списка"}
			Obj={Mnemo="MarkLastButOnePop" Mk=154 Hint="Выдать указатель на метку последней строки списка"}
			Obj={Mnemo="MarkLastButOnePopMk" Mk=155 Hint="Выдать милликоманду с указателем на метку последней строки списка"}
			Obj={Mnemo="MarkLastExclude" Mk=331 Hint="Выдать марку последней строки и удалить ее из списка"}
			Obj={Mnemo="MarkLastExcludeMk" Mk=332 Hint="Выдать милликоманду с маркой последней строки и удалить ее из списка"}
			Obj={Mnemo="MarkLastDelPopMk" Mk=333 Hint="Выдать марку последней строки и удалить строку из списка"}
			Obj={Mnemo="MarkLastDelTreePopMk" Mk=334 Hint="Выдать милликоманду с маркой последней строки и удалить строку вместе с ОА-деревом"}
		}
		Obj={Mnemo="Line" Hint="Работа со строками списка" Comment
			Obj={Mnemo="LineLastOut" Mk=31 Hint="Выдать указатель на конец списка"}
			Obj={Mnemo="LineLastOutMk" Mk=151 Hint="Выдать милликоманду с указателем на последнюю строку списка"}
			Obj={Mnemo="LineLastPop" Mk=226 Hint="Выдать последнюю строку и удалить её из списка "}
			Obj={Mnemo="LineLastPopMk" Mk=136 Hint="Выдать указатель на последнюю строку списка и исключить из списка "}
			Obj={Mnemo="LineLastOutMkDelCaps" Mk=200 Hint="Выдать указатель на последнюю строку списка и удалить ее"}
			Obj={Mnemo="LineLastOutMkDelTree" Mk=201 Hint="Выдать указатель на последнюю строку списка и удалитьстроку вместе с ОА-деревом"}

			Obj={Mnemo="LineLastButOnePop" Mk=152 Hint="Выдать указатель на предпослеюнюю строку списка "}
			Obj={Mnemo="LineLastButOnePopMk" Mk=153 Hint="Выдать милликоманду с указателем на предпоследнюю строку списка"}
			Obj={Mnemo="LineLastButOnePopExclude" Mk=236 Hint="Выдать предпоследнюю строку и удалить её из списка"}
			Obj={Mnemo="LineLastButOnePopMkExclude" Mk=336 Hint="Выдать милликоманду с указателем на предпоследнюю строку списка и исключить капсулу из списка"}
			Obj={Mnemo="LineLastButOnePopDelCaps" Mk=237 Hint="Выдать указателm на предпоследнюю строку списка и удалить капсулу"}
			Obj={Mnemo="LineLastButOnePopMkDelCaps" Mk=238 Hint="Выдать милликоманду с указателем на предпоследнюю строку списка и удалить капсулу"}

			Obj={Mnemo="LineNext" Mk=67 Hint="Перевести указатель на текущей строки на следующую строку списка"}
			Obj={Mnemo="LineNextMk" Mk=45 Hint="Перевести указатель на текущей строки на следующую строку списка и выдать милликоманду с указателем на строку"}
			Obj={Mnemo="LinePrev" Mk=68 Hint="Перевести указатель текущей строки на предыдущую строку"}
			Obj={Mnemo="LinePrevMk" Mk=46 Hint="Перевести указатель текущей строки на предыдущую строку и выдать милликоманду с указателем на строку"}
			Obj={Mnemo="LineSet" Mk=66 Hint="Установить указатель на текущую строку (указатель на текущую ИП устанавливается на первую ИП капсулы)"}
			Obj={Mnemo="DelFindIcLines" Mk=170 Hint="Удалить линии, где находится ИП, переданная в качестве нагрзуки"}
			Obj={Mnemo="ListSetModeSet" Mk=190 Hint="Установить режим установки ссылки на список (0 - проверять хвост списка, 1 - не проверять хвост списка)"}
			Obj={Mnemo="ListAttach" Mk=304 Hint="Добавить новый список к имеющемуся списку"}
		}

		Obj={Mnemo="Add" Hint="Добавление строк списка" Comment
			Obj={Mnemo="LineAdd" Mk=164 Hint="Добавить новую строку в список"}
			Obj={Mnemo="LineCopyAdd" Mk=144 Hint="Добавить копию капсулы в качестве новой строки в список"}
			Obj={Mnemo="LineTreeCopyAdd" Mk=146 Hint="Добавить копию ОА-дерева в качестве новой строки в список"}
			Obj={Mnemo="MarkAdd" Mk=166 Hint="Добавить новую марку в список"}
			Obj={Mnemo="MarkCopyAdd" Mk=167 Hint="Добавить копию марки в список"}
			Obj={Mnemo="MarkTreeCopyAdd" Mk=168 Hint="Добавить копию дерева марки в список"}
		}
		
		Obj={Mnemo="Exclude/Del" Hint="Исключение/добавление строк списка" Comment
			Obj={Mnemo="LineExclude" Mk=18 Hint="Исключить из списка строку, на которую указывает метка в Obj (или текущую строку)"}
			Obj={Mnemo="LineExcludeMk" Mk=17 Hint="Исключить из списка строку, на которую указывает метка в Obj (или текущую строку) и выдать милликоманду с указателем на исключенную строку"}
			Obj={Mnemo="LineDelMk" Mk=19 Hint="Удалить из списка строку, на которую указывает метка в Obj "}
			Obj={Mnemo="LineTreeDelMk" Mk=11 Hint="Удалить из списка строку с деревом, на которую указывает метка в Obj"}
			Obj={Mnemo="LineLastDelMk" Mk=65 Hint="Удалить из списка последнюю строку"}

			Obj={Mnemo="MarkExclude" Mk=94 Hint="Исключить из списка строку, метка которой хранится в нагрузке Мк"}
			Obj={Mnemo="MarkDel" Mk=95 Hint="Удалить из списка строку, метка которой хранится в нагрузке Мк"}
			Obj={Mnemo="MarkTreeDel" Mk=96 Hint="Удалить из списка строку вместе с ОА-деревом, метку которой хранится в нагрузке Мк"}

			Obj={Mnemo="LinePrevExclude" Mk=344 Hint="Исключить предыдущую строку и выдать ссылку на нее"}
			Obj={Mnemo="LinePrevExcludeMk" Mk=345 Hint="Исключить предыдущую строку и выдать милликоманду со ссылкой на нее"}
			Obj={Mnemo="LinePrevDelMk" Mk=346 Hint="Выдать милликоманду со ссылкой на предыдущую строку затем удалить линию и капсулу"}
			Obj={Mnemo="LinePrevDelTreeMk" Mk=347 Hint="Выдать милликоманду со ссылкой на предыдущую строку затем удалить линию и ОА-дерево"}

			Obj={Mnemo="LineNextExclude" Mk=364 Hint="Исключить следующую строку и выдать ссылку на нее"}
			Obj={Mnemo="LineNextExcludeMk" Mk=365 Hint="Исключить следующую строку и выдать милликоманду со ссылкой на нее"}
			Obj={Mnemo="LineNextDelMk" Mk=366 Hint="Выдать милликоманду со ссылкой на следующую строку затем удалить линию и капсулу"}
			Obj={Mnemo="LineNextTreeDelMk" Mk=367 Hint="Выдать милликоманду со ссылкой на следующую строку затем удалить линию и ОА-дерево"}
		}
		Obj={Mnemo="Line replace" Hint="Замена линий ОА-списка" Comment
			Obj={Mnemo="LineDelSet" Mk=613 Hint="Удалить текущую линию и заменить ее копией капсулы"}
			Obj={Mnemo="LineDelCopySet" Mk=614 Hint="Удалить текущую линию и заменить ее  копией ОА-дерева"}
			Obj={Mnemo="LineDelTreeCopySet" Mk=615 Hint="Удалить текущую линию и заменить ее копией ОА-дерева"}
			Obj={Mnemo="LineTreeDelSet" Mk=616 Hint="Удалить тещущую линию вместе с ОА-деревом и заменить ее копией ОА-дерева"}
			Obj={Mnemo="LineTreeDelCopySet" Mk=617 Hint="Удалить текущую линию вместе с ОА-деревом и заменить ее копией ОА-дерева"}
			Obj={Mnemo="LineTreeDelTreeCopySet" Mk=618 Hint="Удалить текущую линию вместе с ОА-деревом и заменить ее копией ОА-дерева"}

			Obj={Mnemo="LinePrevDeSet" Mk=622 Hint="Удалить предыдущую линию и заменить ее копией капсулы"}
			Obj={Mnemo="LinePrevDelCopySet" Mk=623 Hint="Удалить предыдущую линию и заменить ее  копией ОА-дерева"}
			Obj={Mnemo="LinePrevDelTreeCopySet" Mk=624 Hint="Удалить предыдущую линию и заменить ее копией ОА-дерева"}
			Obj={Mnemo="LinePrevTreeDelSet" Mk=625 Hint="Удалить предыдущую линию вместе с ОА-деревом и заменить ее копией ОА-дерева"}
			Obj={Mnemo="LinePrevTreeDelCopySet" Mk=626 Hint="Удалить предыдущую линию вместе с ОА-деревом и заменить ее копией ОА-дерева"}
			Obj={Mnemo="LinePrevTreeDelTreeCopySet" Mk=627 Hint="Удалить предыдущую линию вместе с ОА-деревом и заменить ее копией ОА-дерева"}

			Obj={Mnemo="LineNextDelSet" Mk=631 Hint="Удалить следующую линию и заменить ее копией капсулы"}
			Obj={Mnemo="LineNextDelCopySet" Mk=632 Hint="Удалить следующую линию и заменить ее  копией ОА-дерева"}
			Obj={Mnemo="LineNextDelTreeCopySet" Mk=633 Hint="Удалить следующую линию и заменить ее копией ОА-дерева"}
			Obj={Mnemo="LineNextTreeDelSet" Mk=634 Hint="Удалить следующую линию вместе с ОА-деревом и заменить ее копией ОА-дерева"}
			Obj={Mnemo="LineNextTreeDelCopySet" Mk=635 Hint="Удалить следующую линию вместе с ОА-деревом и заменить ее копией ОА-дерева"}
			Obj={Mnemo="LineNextTreeDelTreeCopySet" Mk=636 Hint="Удалить следующую линию вместе с ОА-деревом и заменить ее копией ОА-дерева"}
		}
		Obj={Mnemo="Obj replace" Hint="Замена линий ОА-списка" Comment
			Obj={Mnemo="ObjDelSet" Mk=628 Hint="Удалить текущий объект и заменить его копией капсулы"}
			Obj={Mnemo="ObjDelCopySet" Mk=629 Hint="Удалить текущий объект и заменить его  копией ОА-дерева"}
			Obj={Mnemo="ObjDelTreeCopySet" Mk=630 Hint="Удалить текущий объект и заменить его копией ОА-дерева"}
			Obj={Mnemo="ObjTreeDelSet" Mk=631 Hint="Удалить текущий объект вместе с ОА-деревом и заменить его копией ОА-дерева"}
			Obj={Mnemo="ObjTreeDelCopySet" Mk=632 Hint="Удалить текущий объект вместе с ОА-деревом и заменить его копией ОА-дерева"}
			Obj={Mnemo="ObjTreeDelTreeCopySet" Mk=633 Hint="Удалить текущий объект вместе с ОА-деревом и заменить его копией ОА-дерева"}

			Obj={Mnemo="ObjPrevDelSet" Mk=634 Hint="Удалить предыдущий объект и заменить его копией капсулы"}
			Obj={Mnemo="ObjPrevDelCopySet" Mk=635 Hint="Удалить предыдущий объект и заменить его  копией ОА-дерева"}
			Obj={Mnemo="ObjPrevDelTreeCopySet" Mk=636 Hint="Удалить предыдущий объект и заменить его копией ОА-дерева"}
			Obj={Mnemo="ObjPrevTreeDelSet" Mk=637 Hint="Удалить предыдущий объект вместе с ОА-деревом и заменить его копией ОА-дерева"}
			Obj={Mnemo="ObjPrevTreeDelCopySet" Mk=638 Hint="Удалить предыдущий объект вместе с ОА-деревом и заменить его копией ОА-дерева"}
			Obj={Mnemo="ObjPrevTreeDelTreeCopySet" Mk=639 Hint="Удалить предыдущий объект вместе с ОА-деревом и заменить ее копией ОА-дерева"}

			Obj={Mnemo="ObjNextDelSet" Mk=640 Hint="Удалить следующий объект и заменить его копией капсулы"}
			Obj={Mnemo="ObjNextDelCopySet" Mk=641 Hint="Удалить следующий объект и заменить его  копией ОА-дерева"}
			Obj={Mnemo="ObjNextDelTreeCopySet" Mk=642 Hint="Удалить следующий объект и заменить его копией ОА-дерева"}
			Obj={Mnemo="ObjNextTreeDelSet" Mk=643 Hint="Удалить следующий объект вместе с ОА-деревом и заменить его копией ОА-дерева"}
			Obj={Mnemo="ObjNextTreeDelCopySet" Mk=644 Hint="Удалить следующий объект вместе с ОА-деревом и заменить его копией ОА-дерева"}
			Obj={Mnemo="ObjNextTreeDelTreeCopySet" Mk=645 Hint="Удалить следующий объект вместе с ОА-деревом и заменить ее копией ОА-дерева"}
		}
	}
	Obj={Mnemo="Find" Hint="Поиск" Comment
		Obj={Mnemo="FindIp" Mk=2 Hint="Принять запись для сравнения"}
		Obj={Mnemo="FindIcObj" Mk=32 Hint="Принять запись для сравнения из Obj"}
		Obj={Mnemo="FindAnd" Mk=3 Hint="Поиск по правилу ""И"" "}
		Obj={Mnemo="FindAndObj" Mk=33 Hint="Поиск по правилу ""И"" в капсуле из Obj"}
		Obj={Mnemo="FindOr" Mk=4 Hint="Поиск по правилу ""ИЛИ"" "}
		Obj={Mnemo="FindOrObj" Mk=34 Hint="Поиск по правилу ""ИЛИ"" в капсуле из Obj"}
		Obj={Mnemo="FindAndAtr" Mk=5 Hint="Сравнение капсул по совпадающим атрибутам (если атрибуты не совпадают, то они не сравниваются; если ни один атрибут не совпадает, то считается, что капсулы равны)"}
		Obj={Mnemo="FindAndAtrObj" Mk=35 Hint="Сравнение капсул из Obj по совпадающим атрибутам (если атрибуты не совпадают, то они не сравниваются; если ни один атрибут не совпадает, то считается, что капсулы равны)"}
		Obj={Mnemo="FindTemplate" Mk=6 Hint="Произвести поиск по шаблону (сравниваются два ОА-дерева))"}
		Obj={Mnemo="FindTemplateObj" Mk=36 Hint="Произвести поиск по шаблону (сравниваются два ОА-дерева)) из Obj"}
		Obj={Mnemo="FindRange" Mk=7 Hint="Поиск интервалов"}
		Obj={Mnemo="FindRangeObj" Mk=37 Hint="Поиск интервалов"}
		Obj={Mnemo="IcCompare" Mk=8 Hint="Сравнить две записи"}
		Obj={Mnemo="IcCompareObj" Mk=38 Hint="Сравнить две записи, одна из них в ИК с Obj"}

		Obj={Mnemo="FindIpInLastLine" Mk=264 Hint="Поиск ИП в последней строке "}
		Obj={Mnemo="FindAndInLastLine" Mk=265 Hint="Поиск ""И"" в последней строке"}
		Obj={Mnemo="FindOrInLastLine" Mk=266 Hint="Поиск ""ИЛИ"" в последней строке"}
		Obj={Mnemo="FindIcInLastButOneLine" Mk=267 Hint="Поиск ИП в предпоследней строке "}
		Obj={Mnemo="FindAndInLastButOneLine" Mk=268 Hint="Поиск ""И"" в предпоследней строке"}
		Obj={Mnemo="FindOrInLastButOneLine" Mk=269 Hint="Поиск ""ИЛИ"" в предпоследней строке"}

		Obj={Mnemo="FindIcInLine"    Mk=73 Hint="Поиск ИП в текущей строке"}
		Obj={Mnemo="FindAndInLine"   Mk=74 Hint="Поиск""И"" в текущей строке"}
		Obj={Mnemo="FindOrInLine"    Mk=75 Hint="Поиск ""ИЛИ"" в текущей строке"}
		Obj={Mnemo="FindAndAtrInLine"   Mk=76 Hint="Поиск ""ИЛИ"" в текущей строке"}
		Obj={Mnemo="FindTemplateInLine" Mk=77 Hint="Поиск ""ИЛИ"" в текущей строке"}
		Obj={Mnemo="FindRangeInLine" Mk=78 Hint="Поиск интервалов в текущей строке"}

		Obj={Mnemo="FindIcInPrevLine"    Mk=79 Hint="Поиск ИП в предыдущей строке"}
		Obj={Mnemo="FindAndInPrevLine"   Mk=80 Hint="Поиск""И"" в предыдущей строке"}
		Obj={Mnemo="FindOrInPrevLine"    Mk=81 Hint="Поиск ""ИЛИ"" в предыдущей строке"}
		Obj={Mnemo="FindAndAtrInPrevLine"   Mk=82 Hint="Поиск ""ИЛИ"" в предыдущей строке"}
		Obj={Mnemo="FindTemplateInPrevLine" Mk=83 Hint="Поиск ""ИЛИ"" в предыдущей строке"}
		Obj={Mnemo="FindRangeInPrevLine" Mk=84 Hint="Поиск интервалов в предыдущей строке"}

		Obj={Mnemo="FindIcInNextLine"    Mk=85 Hint="Поиск ИП в следующей строке"}
		Obj={Mnemo="FindAndInNextLine"   Mk=86 Hint="Поиск""И"" в следующей строке"}
		Obj={Mnemo="FindOrInNextLine"    Mk=87 Hint="Поиск ""ИЛИ"" в следующей строке"}
		Obj={Mnemo="FindAndAtrInNextLine"   Mk=88 Hint="Поиск ""ИЛИ"" в следующей строке"}
		Obj={Mnemo="FindTemplateInNextLine" Mk=89 Hint="Поиск ""ИЛИ"" в следующей строке"}
		Obj={Mnemo="FindRangeInNextLine" Mk=58 Hint="Поиск интервалов в следующей строке"}

		Obj={Mnemo="FindCapsIc" Mk=180 Hint="Поиск в капсуле по нескольким ИП"}
	}
	Obj={Mnemo="FindResult" Hint="Результат поиска" Comment
		Obj={Mnemo="Result" Mk=500 Hint="Найдено ли (выдается ""true"", если найдено; ""false"", если ничего не найдено)"}
		Obj={Mnemo="ResultMk" Mk=502 Hint="Выдать милликоманду с результатом поиска (выдается ""true"", если найдено; ""false"", если ничего не найдено)"}
		Obj={Mnemo="ResultAnd" Mk=504 Hint="Выдать логический результат поиска по правилу ""И"" "}
		Obj={Mnemo="ResultOr" Mk=506 Hint="Выдать логический результат поиска по правилу ""ИЛИ"" "}
		Obj={Mnemo="IcPop" Mk=510 Hint="Выдать указатель на текущую ИП"}
		Obj={Mnemo="IcPopMk" Mk=512 Hint="Выдать милликоманду с указателем на текущую ИП"}

		Obj={Mnemo="IcLinePop" Mk=511 Hint="Выдать указатель на текущую ИП, найденную в строке"}
		Obj={Mnemo="IcLinePopMk" Mk=513 Hint="Выдать милликоманду с указателем на текущую ИП, найденную в строке"}

		Obj={Mnemo="IcLinePrevPop" Mk=505 Hint="Выдать указатель на текущую ИП, найденную в пердыдущей строке"}
		Obj={Mnemo="IcLinePrevPopMk" Mk=507 Hint="Выдать милликоманду с указателем на текущую ИП, найденную в предыдущей строке"}

		Obj={Mnemo="IcLineNextPop" Mk=508 Hint="Выдать указатель на текущую ИП, найденную в следующей строке"}
		Obj={Mnemo="IcLineNextPopMk" Mk=509 Hint="Выдать милликоманду с указателем на текущую ИП, найденную в следующей строке"}


		Obj={Mnemo="AtrPop" Mk=514 Hint="Выдать атрибут из первой найденной ИП"}
		Obj={Mnemo="AtrInLinePop" Mk=515 Hint="Выдать атрибут из первой найденной ИП в строке"}
		Obj={Mnemo="AtrPopMk" Mk=516 Hint="Выдать милликоманду с атрибутом из найденной ИП"}
		Obj={Mnemo="AtrInLinePopMk" Mk=517 Hint="Выдать милликоманду с атрибутом из найденной ИП в строке"}
		Obj={Mnemo="DataPop" Mk=518 Hint="Выдать данные из первой найденной ИП"}
		Obj={Mnemo="DataInLinePop" Mk=519 Hint="Выдать данные из первой найденной ИП в строке"}
		Obj={Mnemo="DataPopMk" Mk=520 Hint="Выдать милликоманду с данными из первой найденной ИП"}
		Obj={Mnemo="DataInLinePopMk" Mk=521 Hint="Выдать милликоманду с данными из первой найденной ИП в строке"}
		Obj={Mnemo="PointPop" Mk=522 Hint="Выдать поинтер из первой найденной ИП "}
		Obj={Mnemo="PointInLinePop" Mk=523 Hint="Выдать поинтер из первой найденной ИП в строке"}
		Obj={Mnemo="PointPopMk" Mk=524 Hint="Выдать милликоманду с данными из первой найденной ИП"}
		Obj={Mnemo="PointInLinePopMk" Mk=525 Hint="Выдать милликоманду с данными из первой найденной ИП в строке"}

		Obj={Mnemo="AtrPointerPop" Mk=530 Hint="Выдать указатель на атрибут найденной ИП"}
		Obj={Mnemo="AtrPointerInLinePop" Mk=531 Hint="Выдать указатель на атрибут найденной ИП в строке"}
		Obj={Mnemo="AtrPointerPopMk" Mk=532 Hint="Выдать милликоманду с указателем на атрибут найденной ИП"}
		Obj={Mnemo="AtrPointerInLinePopMk" Mk=533 Hint="Выдать милликоманду с указателем на атрибут найденной ИП в строке"}
		Obj={Mnemo="DataPointerPop" Mk=534 Hint="Выдать указатель на данные найденной ИП"}
		Obj={Mnemo="DataPointerInLinePop" Mk=535 Hint="Выдать указатель на данные найденной ИП в строке"}
		Obj={Mnemo="DataPointerPopMk" Mk=536 Hint="Выдать милликоманду с указателем на данные найденной ИП"}
		Obj={Mnemo="DataPointerInLinePopMk" Mk=537 Hint="Выдать милликоманду с указателем на данные найденной ИП в строке"}
		Obj={Mnemo="PointPointerOut" Mk=538 Hint="Выдать указатель на Point найденной ИП"}
		Obj={Mnemo="PointPointerInLinePop" Mk=539 Hint="Выдать указатель на Point найденной ИП в строке"}
		Obj={Mnemo="PointPointerOutMk" Mk=540 Hint="Выдать милликоманду с указателем на Point найденной ИП"}
		Obj={Mnemo="PointPointerInLinePopMk" Mk=541 Hint="Выдать милликоманду с указателем на Point найденной ИП в строке"}


		Obj={Mnemo="ObjPop" Mk=570 Hint="Выдать ссылку на объект из капсулы для поиска"}
		Obj={Mnemo="ObjPopMk" Mk=571 Hint="Выдать милликоманду со ссылкой на объект из капсулы для поиска"}

		Obj={Mnemo="ObjNextPop" Mk=600 Hint="Выдать ссылку на объект из следующей капсулы для поиска"}
		Obj={Mnemo="ObjNextPopMk" Mk=601 Hint="Выдать милликоманду со ссылкой на объект из следущей капсулы для поиска"}
		Obj={Mnemo="ObjPrevPop" Mk=602 Hint="Выдать ссылку на объект из предыдущей капсулы для поиска"}
		Obj={Mnemo="ObjPrevPopMk" Mk=603 Hint="Выдать милликоманду со ссылкой на объект из предыдущей капсулы для поиска"}

		Obj={Mnemo="ObjLastPop" Mk=101 Hint="Выдать ссылку на объект из последней линии"}
		Obj={Mnemo="ObjLastPopMk" Mk=102 Hint="Выдать милликоманду со ссылкой на объект из последней линии"}
		Obj={Mnemo="ObjLastButOnePop" Mk=103 Hint="Выдать ссылку на объект из предпоследней линии"}
		Obj={Mnemo="ObjLastButOnePopMk" Mk=104 Hint="Выдать милликоманду со ссылкой на объект из предпоследней линии"}

		Obj=SourceFindListMkList{Mnemo="Source" Comment Hint="Работа с источником данных (той капсулой, которая пришла для проверки"
			Obj={Mnemo="SourceIcPop" Mk=550 Hint="Выдать указатель на найденную ИП в источнике "}
			Obj={Mnemo="SourceIcPopMk" Mk=552 Hint="Выдать милликоманду с найденной ИП в источнике"}
			Obj={Mnemo="SourceAtrPop" Mk=554 Hint="Выдать атрибут из найденной ИП в источнике"}
			Obj={Mnemo="SourceAtrPointerPop" Mk=556 Hint="Выдать указатель на атрибут из найденной ИП в источнике"}
			Obj={Mnemo="SourceAtrPopMk" Mk=558 Hint="Выдать милликоманду с атрибутом из найденной ИП в источнике"}
			Obj={Mnemo="SourceDataPop" Mk=562 Hint="Выдать данные из найденной ИП в источнике"}
			Obj={Mnemo="SourceDataPointerPop" Mk=563 Hint="Выдать указатель на данные из найденной ИП в источнике"}
			Obj={Mnemo="SourceDataPopMk" Mk=564 Hint="Выдать милликоманду с указателем на данные из найденной ИП в источнике"}
			Obj={Mnemo="SourcePointPop" Mk=566 Hint="Выдать указатель из нагрузки найденной ИП"}
			Obj={Mnemo="SourcePointPointerOut" Mk=567 Hint="Выдать указатель на указатель из нагрузки найденной ИП"}
			Obj={Mnemo="SourcePointPopMk" Mk=568 Hint="Выдать милликоманду с указателем из нагрузки найденной ИП"}
			Obj={Mnemo="SourcePointPointerOutMk" Mk=569 Hint="Выдать милликоманду с указателем на указатель из нагрузки найденной ИП"}
		}
		Obj={Mnemo="LinePop" Mk=12 Hint="Выдать указатель на текущую строку"}
		Obj={Mnemo="MarkPop" Mk=340 Hint="Выдать Маркер текущей строки"}
		Obj={Mnemo="LinePopMk" Mk=312 Hint="Выдать милликоманду с указателем на текущую строку"}
		Obj={Mnemo="MarkPopMk" Mk=322 Hint="Выдать милликоманду с маркером текущей строки"}
		Obj={Mnemo="LineNextPop" Mk=13 Hint="Выдать указатель на текущую строку"}
		Obj={Mnemo="MarkNextPop" Mk=133 Hint="Выдать маркер следующей после текущей строки"}
		Obj={Mnemo="LineNextPopMk" Mk=313 Hint="Выдать милликоманду с указателем на следующую строку после текущей"}
		Obj={Mnemo="MarkNextPopMk" Mk=314 Hint="Выдать милликоманду с маркой следующей строки после текущей строки"}
		Obj={Mnemo="LinePrevPop" Mk=113 Hint="Выдать указатель строки текущей строкой"}
		Obj={Mnemo="MarkPrevPop" Mk=114 Hint="Выдать марку строки перед текущей строкой"}
		Obj={Mnemo="LinePrevPopMk" Mk=213 Hint="Выдать милликоманду с указателем на строку перед текущей строкой"}
		Obj={Mnemo="MarkPrevPopMk" Mk=214 Hint="Выдать милликоманду с маркой строки перед текущей строкой"}
		Obj={Mnemo="LineNumPop" Mk=14 Hint="Выдать номер первой найденной строки"}

		Obj={Mnemo="ResultQuantityPop" Mk=15 Hint="Выдать количество найденных записей "}
		Obj={Mnemo="ResultQuantityPopMk" Mk=215 Hint="Выдать милликоманду с количеством найденных ИП "}
		Obj={Mnemo="MarkPop" Mk=222 Hint="Выдать маркер найденной строки "}
		Obj={Mnemo="MarkNextPop" Mk=228 Hint="Выдать маркер следующей страки после найденной строки "}
		Obj={Mnemo="IcQuantiyPop" Mk=15 Hint="Выдать количество найденных совпадений ИП"}
		Obj={Mnemo="LineQuantityPop" Mk=16 Hint="Выдать количество найденных линий "}
	}
	Obj=InObjMkList{Mnemo="InObj" Comment Hint="Работа с входным объектом"
		Obj={Mnemo="InObjPop" Mk=576 Hint="Выдать входной объект"}
		Obj={Mnemo="InObjPopMk" Mk=578 Hint="Выдать милликоманду с указателем на входной объект"}
		Obj={Mnemo="InObjAtrPop" Mk=580 Hint="Выдать атрибут входного объекта"}
		Obj={Mnemo="InObjAtrPopMk" Mk=582 Hint="Выдать милликоманду с атрибутом входной ИП"}
		Obj={Mnemo="InObjDataPop" Mk=584 Hint="Выдать данные входного объекта"}
		Obj={Mnemo="InObjDataPopMk" Mk=586 Hint="Выдать милликоманду с указателем на данные входного объекта"}
		Obj={Mnemo="InObjPointPop" Mk=588 Hint="Выдать указатель на входной объект"}
		Obj={Mnemo="InObjPointPopMk" Mk=590 Hint="Выдать указатель из нагрузки входной ИП"}
		Obj={Mnemo="InObjObjPop" Mk=592 Hint="Выдать ссылку на объект во входной капсуле для анализа"}
		Obj={Mnemo="InObjObjPopMk" Mk=594 Hint="Выдать нагрузки из ИП с атрибутом Obj  из нагрузки пришедшей милликоманды"}
	}
	Obj={Mnemo="ProgExec" Comment Hint="Запуск миллипрограмм в зависимости от выполнения условий поиска"
		Obj={Mnemo="LineNoneProgExec" Mk=51 Hint="Выполнить миллипрограму, если список пуст"}
		Obj={Mnemo="LineExistsProgExec" Mk=52 Hint="Выполнить миллипрограму, если список не пуст"}
		Obj={Mnemo="LineOneProgExec" Mk=53 Hint="Выполнить миллпрограмму, если в списке присутствует только одна строка"}
		Obj={Mnemo="LineMoreOneProgExec" Mk=54 Hint="Выполнить миллпрограмму, если в списке присутствуют больше одной строки"}

		Obj={Mnemo="IcNilProgExec" Mk=270 Hint="Выполнить миллипрограмму, если найдена ИП"}
		Obj={Mnemo="IcNotNilProgExec" Mk=271 Hint="Выполнить программу, если не нейдена ИП"}
		Obj={Mnemo="PointNilProgExec" Mk=272 Hint="Выполнить программу, если поинтер текущей ИП равен nil"}
		Obj={Mnemo="PointNotNilProgExec" Mk=273 Hint="Выполнить программу, если поинтер текущей ИП равен nil"}

		Obj={Mnemo="SuccessProgExec" Mk=231 Hint="Выполнить программу, запускаемую при удачном поиске"}
		Obj={Mnemo="FailProgExec" Mk=239 Hint="Выполнить программу, запускаемую при удачном поиске"}
		Obj={Mnemo="SuccessLineProgExec" Mk=281 Hint="Выполнить программу, запускаемую при удачном поиске"}
		Obj={Mnemo="FailLineProgExec" Mk=286 Hint="Выполнить программу, запускаемую при удачном поиске"}
	}
	Obj={Mnemo="Switch" Comment Hint="Программирование автоматического ветвления программы"
		Obj={Mnemo="BusMkSet" Mk=400 Hint="Установить милликоманду, выдаваемую на шину"}
//		Obj={Mnemo="BusMkPointerSet" Mk=410 Hint="Установить указатель на милликоманду, выдаваемую на шину"}
		Obj={Mnemo="SuccessProgSet" Mk=230 Hint="Подпрограмма, запускаемая при удачном поиске"}
		Obj={Mnemo="YesProgSet" Mk=230 Hint="Подпрограмма, запускаемая при удачном поиске"}
		Obj={Mnemo="FailProgSet" Mk=235 Hint="Подпрограмма, запускаемая при неудачном поиске"}
		Obj={Mnemo="NoProgSet" Mk=235 Hint="Подпрограмма, запускаемая при неудачном поиске"}
		Obj={Mnemo="FailAllProgSet" Mk=234 Hint="Подпрограмма, запускаемая при неудачном поиске в списке при поиске по нескольким линиям"}
		Obj={Mnemo="SuccessCountPopMk" Mk=232 Hint="Выдать количество линий, удовлетворяющих условию поиска"}

		Obj={Mnemo="SuccessLineProgSet" Mk=280 Hint="Подпрограмма, запускаемая при удачном поиске в строке"}
		Obj={Mnemo="YesLineProgSet" Mk=280 Hint="Подпрограмма, запускаемая при удачном поиске в строке"}
		Obj={Mnemo="SuccessLinePrevProgSet" Mk=281 Hint="Подпрограмма, запускаемая при удачном поиске в предыдущей строке"}
		Obj={Mnemo="YesLinePrevProgSet" Mk=281 Hint="Подпрограмма, запускаемая при удачном поиске в предыдущей строке"}
		Obj={Mnemo="SuccessLineNextProgSet" Mk=282 Hint="Подпрограмма, запускаемая при удачном поиске в следующей строке"}
		Obj={Mnemo="YesLineNextProgSet" Mk=282 Hint="Подпрограмма, запускаемая при удачном поиске в следующей строке"}

		Obj={Mnemo="FailLineProgSet" Mk=285 Hint="Подпрограмма, запускаемая при неудачном поиске в строке"}
		Obj={Mnemo="FailLinePrevProgSet" Mk=286 Hint="Подпрограмма, запускаемая при неудачном поиске в предыдущей строке"}
		Obj={Mnemo="FailLinePrevAllProgSet" Mk=287 Hint="Подпрограмма, запускаемая при неудачном поиске во всех предыдущих строках"}
		Obj={Mnemo="FailLineNextProgSet" Mk=288 Hint="Подпрограмма, запускаемая при неудачном поиске в следующей строке"}
		Obj={Mnemo="FailLineNextAllProgSet" Mk=289 Hint="Подпрограмма, запускаемая при неудачном поиске во всех следующих строках"}

		Obj={Mnemo="ProgNextSet" Mk=350 Hint="Устанвоить программу, запускиемую при обходе списка с развилками на один узел вперед"}
		Obj={Mnemo="ProgPrevSet" Mk=351 Hint="Устанвоить программу, запускиемую при обходе списка с развилками на один узел назад"}

		Obj={Mnemo="ProgNextExec" Mk=352 Hint="Запустить обход на один узел вперед"}
		Obj={Mnemo="ProgPrevExec" Mk=353 Hint="Запустить обход на один узел назад"}

		Obj={Mnemo="SuccessLineCountPop" Mk=348 Hint="Выдать количество совпадений при обходе строк"}
		Obj={Mnemo="SuccessLineCountPopMk" Mk=349 Hint="Выдать милликоманду с количеством совпадений при обходе строк"}
	}

	Obj={Mnemo="Service" Comment
		Obj={Mnemo="HashAtrSet" Mk=156 Hint="Создать хеш-таблицу для атрибута"}
		Obj={Mnemo="HashAtrNBitSet" Mk=157 Hint="Установить число бит для ключа (по умолчанию -8)"}
		Obj={Mnemo="HashAtrReset" Mk=158 Hint="Сброс настроек хеша атрибутов"}


		Obj={Mnemo="MultiLineModeSet" Mk=70 Hint="Установить режим поиска (0 - поиск до первого сопадения)"}		
		Obj={Mnemo="MultiLineStepStop" Mk=59 Hint="Не переходить на следующую на текущем шаге во время многострочной обработки списка"}
		Obj={Mnemo="TraversalStop" Mk=363 Hint="Остановить обход ОА-дерево вперед и/или назад"}
		Obj={Mnemo="FindStop" Mk=71 Hint="Остановить поиск по нескольким строкам"}
		Obj={Mnemo="DirectSet" Mk=72 Hint="Установить направление поиска (false - сверху вниз; true - снизу вверх)"}
		Obj={Mnemo="SubAtrSet" Mk=163 Hint="Задать атрибут ссылки на подпрограмму"}
		Obj={Mnemo="ObjAtrSet" Mk=203 Hint="Задать атрибут ссылки на объект"}
		Obj={Mnemo="BusModeSet" Mk=106 Hint="Установить режим выдачи сообщения на шину"}
		Obj={Mnemo="ForkModeSet" Mk=69 Hint="Уставновить режим развилки (0 - без создания развилки, 1 - с созданием развилки)"}
		Obj={Mnemo="NextFUMkRangeSet" Mk=430 Hint="Установить миллидапазон для дублирования милликоманды для следующего ФУ "}
		Obj={Mnemo="NextFUSet" Mk=435 Hint="Установить контекст следующего ФУ"}
		Obj={Mnemo="Rout" Mk=112 Hint="Маршрутизация"}
		Obj={Mnemo="RoutMkPointPop" Mk=116 Hint="Выдать ссылку на милликоманду для маршрутизации"}
		Obj={Mnemo="PartialResetSet" Mk=240 Hint="Установить позицию для частичного сброса"}
		Obj={Mnemo="PartialReset" Mk=245 Hint="Частичный сброс (из списка удаляются все капсулы послед капсулы, установленной милликомандой ""PartialResetSet"" и до конца списка)"}
	}
	Obj={Mnemo="Ic work" Comment Hint="Работа с указателем на текущую ИП"
		Obj={Mnemo="IcNext" Mk=123 Hint="Переместить указатель на текущую ИП на следующую ИП в текущей капсуле и выдать указатель на текущую ИП"}
		Obj={Mnemo="IcNextMk" Mk=124 Hint="Переместить указатель на текущую ИП на следующую ИП в текущей капсуле и выдать милликоманду с указателем на текущую ИП"}
		Obj={Mnemo="IcPrev" Mk=125 Hint="Переместить указатель на текущую ИП на предыдущую ИП в текущей капсуле и выдать указатель на текущую ИП"}
		Obj={Mnemo="IcPrevMk" Mk=126 Hint="Переместить указатель на текущую ИП на предыдущую ИП в текущей капсуле и выдать милликоманду с указателем на текущую ИП"}

		Obj={Mnemo="CapsIns" Mk=108 Hint="Вставить капсулу после текущей ИП"}
		Obj={Mnemo="CapsTailCut" Mk=109 Hint="Исключить последнюю ИП из текущй капсулы"}
		Obj={Mnemo="CapsTailDel" Mk=107 Hint="Удалить последнюю ИП из текущй капсулы"}
		Obj={Mnemo="CapsTailDelTree" Mk=105 Hint="Удалить последнюю ИП с ОА-деревом из текущй капсулы"}
	}

	Obj={Mnemo="Caps work" Comment Hint="Работа с указателем на текущую ИП"
		Obj={Mnemo="LineCapsAdd" Mk=255 Hint="Прицепить капсулу к текущей строке списка"}
		Obj={Mnemo="LineCapsCopyAttach" Mk=256 Hint="Прицепить копию капсулы к текущей строке списка"}
		Obj={Mnemo="LineTreeCopyAttach" Mk=257 Hint="Прицепить копию ОА-дерева к текущей строке списка"}

		Obj={Mnemo="LinePrevCapsAttach" Mk=261 Hint="Прицепить капсулу к предыдущей строке списка"}
		Obj={Mnemo="LinePrevCapsCopyAttach" Mk=262 Hint="Прицепить копию капсулы к предыдущей строке списка"}
		Obj={Mnemo="LinePrevTreeCopyAttach" Mk=263 Hint="Прицепить копию ОА-дерева к предыдущей строке списка"}

		Obj={Mnemo="LineNextCapsAttach" Mk=274 Hint="Прицепить капсулу к следующей строке списка"}
		Obj={Mnemo="LineNextCapsCopyAttach" Mk=275 Hint="Прицепить копию капсулы к следующей строке списка"}
		Obj={Mnemo="LineNextTreeCopyAttach" Mk=276 Hint="Прицепить копию ОА-дерева к следующей строке списка"}

		Obj={Mnemo="ObjCapsAttach" Mk=258 Hint="Прицепить капсулу к ИП со ссылкой Obj в текущей строке списка"}
		Obj={Mnemo="ObjCapsCopyAttach" Mk=259 Hint="Прицепить капсулу копию капсулы к ИП со ссылкой Obj в текущей строке списка"}
		Obj={Mnemo="ObjTreeCopyAttach" Mk=260 Hint="Прицепить копию ОА-дерева к ИП со ссылкой Obj в текущей строке списка"}

		Obj={Mnemo="ObjNextCapsAttach" Mk=183 Hint="Прицепить капсулу к ИП со ссылкой Obj в следующей строке списка"}
		Obj={Mnemo="ObjNextCapsCopyAttach" Mk=184 Hint="Прицепить капсулу копию капсулы к ИП со ссылкой Obj в следующей строке списка"}
		Obj={Mnemo="ObjNextTreeCopyAttach" Mk=185 Hint="Прицепить копию ОА-дерева к ИП со ссылкой Obj в следующейстроке списка"}

		Obj={Mnemo="ObjPrevCapsAttach" Mk=186 Hint="Прицепить капсулу к ИП со ссылкой Obj в предыдущей строке списка"}
		Obj={Mnemo="ObjPrevCapsCopyAttach" Mk=187 Hint="Прицепить капсулу копию капсулы к ИП со ссылкой Obj в предыдущейстроке списка"}
		Obj={Mnemo="ObjPrevTreeCopyAttach" Mk=188 Hint="Прицепить копию ОА-дерева к ИП со ссылкой Obj в предыдущей строке списка"}

		Obj={Mnemo="ObjLastCapsAttach" Mk=177 Hint="Прицепить капсулу к ИП со ссылкой Obj в последней строке списка"}
		Obj={Mnemo="ObjLastCapsCopyAttach" Mk=178 Hint="Прицепить капсулу копию капсулы к ИП со ссылкой Obj в последней строке списка"}
		Obj={Mnemo="ObjLastTreeCopyAttach" Mk=179 Hint="Прицепить копию ОА-дерева к ИП со ссылкой Obj в предыдущей строке списка"}

		Obj={Mnemo="LineLastCapsAttach" Mk=250 Hint="Прицепить капсулу к последней строке списка"}
		Obj={Mnemo="LineLastCapsCopyAttach" Mk=251 Hint="Прицепить копию капсулы к последней строке списка"}
		Obj={Mnemo="LineLastTreeCopyAttach" Mk=254 Hint="Прицепить копию ОФ-дерева к ИП с атрибутом ""объект"" из последней строке списка"}

		Obj={Mnemo="LineLastButOneCapsAttach" Mk=252 Hint="Прицепить капсулу к предпоследней строке списка"}
		Obj={Mnemo="LineLastButOneCapsCopyAttach" Mk=253 Hint="Прицепить копию капсулы к предпоследней строке списка"}
		Obj={Mnemo="LineLastButOneTreeCopyAttach" Mk=249 Hint="Прицепить копию ОА-дерева к предпоследней строке списка"}

		Obj={Mnemo="LineCapsIcDel" Mk=670 Hint="Удалить ИП с заданными атрибутами в текущей строке"}
		Obj={Mnemo="ObjCapsIcDel" Mk=671 Hint="Удалить ИП с заданными атрибутами в объекте текущей строке"}
		Obj={Mnemo="LinePrevCapsIcDel" Mk=672 Hint="Удалить ИП с заданными атрибутами в предыдущей строке"}
		Obj={Mnemo="ObjPrecCapsIcDel" Mk=673 Hint="Удалить ИП с заданными атрибутами в объекте предыдущей строке"}
		Obj={Mnemo="LineNextCapsIcDel" Mk=674 Hint="Удалить ИП с заданными атрибутами в следующей строке"}
		Obj={Mnemo="ObjNextCapsIcDel" Mk=675 Hint="Удалить ИП с заданными атрибутами в объекте следующей строке"}
	}

	Obj={Mnemo="IndexMode" Comment Hint="Индексный режим"
//		Obj={Mnemo="IndexVectSet" Mk=130 Hint="Задать ссылку на индексный массив"}
//		Obj={Mnemo="IndexVectPop" Mk=132 Hint="Выдать ссылку на индексный массив"}
//		Obj={Mnemo="IndexVectPopMk" Mk=134 Hint="Выдать милликоманду со ссылкой на индексный массив"}
//		Obj={Mnemo="IndexCounterPointerSet" Mk=135 Hint="Задать ссылку на индексный счётчик"}
//		Obj={Mnemo="IndexVectPop" Mk=137 Hint="Выдать ссылку на индексный счётчик"}
//		Obj={Mnemo="IndexVectPopMk" Mk=138 Hint="Выдать милликоманду со ссылкой на индексный счётчик"}
//		Obj={Mnemo="IndexVectPopMk" Mk=138 Hint="Выдать милликоманду со ссылкой на индексный счётчик"}
		Obj={Mnemo="IndexVectCreate" Mk=140 Hint="Сформировать индексный массив"}
		Obj={Mnemo="IndexModeSet" Mk=145 Hint="Установить индексный режим"}

		Obj={Mnemo="IpIcIdOutMk" Mk=141 Hint="Выдать милликоманду со ссылкой на запись со служебной информацией ОА-графа"}
		Obj={Mnemo="IpIcIdSet" Mk=142 Hint="Установить указатель на запись со служебной информацийе ОА-графа"}
		}
	Obj={Mnemo="Id work" Comment Hint="Индексный режим"
		Obj={Mnemo="IdModeSet" Mk=290 Hint="Установить режим автоматической простановки идентификаторов информационных капсул (если в нагрузке nil, то режим устанавливается)"}
//		Obj={Mnemo="IdPointerSet" Mk=294 Hint="Установить ссылку на счетчик индексов капсул (если Load=nil, то указатель ставится на внутренний счетчик; автоматически устанавливается индексный режим)"}
		Obj={Mnemo="IdSet" Mk=291 Hint="Установить значение счетчика индексов капсул"}
//		Obj={Mnemo="IdPointerPop" Mk=292 Hint="Выдать указатель на счетчик идекаторов капсул"}
//		Obj={Mnemo="IdPointerPopMk" Mk=293 Hint="Выдать милликоманду с указателем на счетчик идекаторов капсул"}
	}
	Obj={Mnemo="Counters" Comment Hint="Работа со счётчиками"
		Obj={Mnemo="CountersReset" Mk=680 Hint="Сброс счетчиков"}
		Obj={Mnemo="CountLinesPop" Mk=681 Hint="Выдать количество просмотренных линий"}
		Obj={Mnemo="CountLinesPopMk" Mk=682 Hint="Выдать милликоманду с количеством просмотренных линий"}
		Obj={Mnemo="CountLinesAllPop" Mk=683 Hint="Выдать общее количество просмотренных линий"}
		Obj={Mnemo="CountLinesAllPopMk" Mk=684 Hint="Выдать милликоманду с общим количеством просмотренных линий"}
		Obj={Mnemo="CountLinesPrevPop" Mk=685 Hint="Выдать общее количество просмотренных предыдущих линий"}
		Obj={Mnemo="CountLinesPrevPopMk" Mk=686 Hint="Выдать милликоманду с общим количеством просмотренных предыдущих линий"}
		Obj={Mnemo="CountLinesNextPop" Mk=687 Hint="Выдать общее количество просмотренных следующих линий"}
		Obj={Mnemo="CountLinesNextPopMk" Mk=688 Hint="Выдать милликоманду с общим количеством просмотренных следующих линий"}
		Obj={Mnemo="CountLinesDelPop" Mk=689 Hint="Выдать общее количество просмотренных удаленных линий"}
		Obj={Mnemo="CountLinesDelPopMk" Mk=690 Hint="Выдать милликоманду с общим количеством просмотренных удаленных линий"}
		Obj={Mnemo="CountLinesAddPop" Mk=691 Hint="Выдать общее количество добавленных линий"}
		Obj={Mnemo="CountLinesAddPopMk" Mk=692 Hint="Выдать милликоманду с общим количеством добавленных линий"}

		Obj={Mnemo="CountAttachsPop" Mk=693 Hint="Выдать общее количество добавленных капсул"}
		Obj={Mnemo="CountAttachsPopMk" Mk=694 Hint="Выдать милликоманду с общим количеством добавленных капсул"}
		Obj={Mnemo="IcDelCountPop" Mk=695 Hint="Выдать общее количество удалённых ИП"}
		Obj={Mnemo="IcDelCountPopMk" Mk=696 Hint="Выдать милликоманду с общим количеством удалённых ИП"}

		Obj={Mnemo="CountForkPop" Mk=697 Hint="Выдать общее количество расфоркиваний"}
		Obj={Mnemo="CountForkPopMk" Mk=698 Hint="Выдать милликоманду с общим количеством расфоркиваний"}
		Obj={Mnemo="CountForkLinesPop" Mk=699 Hint="Выдать общее количество линий, получившихся в результате расфоркиваний"}
		Obj={Mnemo="CountForkLinesPopMk" Mk=700 Hint="Выдать милликоманду с общим количеством линий, получившихся в результате расфоркиваний"}

		Obj={Mnemo="CountIcComparePop" Mk=701 Hint="Выдать общее количество сравнений ИП в время поиска"}
		Obj={Mnemo="CountIcComparePopMk" Mk=702 Hint="Выдать милликоманду с общим количеством сравнений ИП во время поиска"}
	}
	Obj=CommonMkList
}

AutomatMkList{Obj={Mnemo="Reset" Mk=0 Hint="Сброс ФУ"}
	Obj={Mnemo="Set" Mk=1  Hint="Установить ссылку на миллипрограмму"}
	Obj={Mnemo="SetRun" Mk=111 Hint="Установить ссылку на миллипрограмму и запустить ее на выполнение"}
	Obj={Mnemo="InObpPop" Mk=2  Hint="Выдать ссылку на входной объект"}
	Obj={Mnemo="InObpPopMk" Mk=3 Hint="Выдать милликоманду со ссылкой на входной объект"}
	Obj={Mnemo="InObjDel" Mk=19 Hint="Удалить входной объект"}
	Obj={Mnemo="Goto"  Comment  Hint="Безусловные переходы"
		Obj={Mnemo="Goto" Mk=6  Hint="Перейти по адресу, хранящемуся в нагрузке милликоманды"}
		Obj={Mnemo="GotoStop" Mk=7 Hint="Перейти по адресу, хранящемуся в нагрузке милликоманды и останов"}
		Obj={Mnemo="SubEnter" Mk=4 Hint="Вход в подпроограмму"}
		Obj={Mnemo="SubOut" Mk=5 Hint="Выход из подпрограммы"}
		Obj={Mnemo="BusSet" Mk=24 Hint=""}
	}
	Obj={Mnemo="Branch" Comment  Hint="Условные переходы"
		Obj={Mnemo="BranchSet" Mk=8  Hint="Установить адрес предполагаемого условного перехода"}
		Obj={Mnemo="GoTrue" Mk=9  Hint="Переход по адресу условного перехода, если в нагрузке хранится true"}
	 	Obj={Mnemo="GoTrueStop" Mk=16 Hint="Переход по адресу условного перехода, если в нагрузке хранится true и останов"}
	 	Obj={Mnemo="GoFalse" Mk=10 Hint="Переход по адресу условного перехода, если в нагрузке хранится false"}
		Obj={Mnemo="GoFalseStop" Mk=17 Hint="Переход по адресу условного перехода, если в нагрузке хранится false и оствнов"}
		Obj={Mnemo="SubTrue" Mk=11 Hint="Вызов подпрограммы, если в нагрузке хранится true"}
		Obj={Mnemo="SubFalse" Mk=12 Hint="Вызов подпрограммы, если в нагрузке хранится false"}
		Obj={Mnemo="FlagPointerSet" Mk=80 Hint="Установить ссылку для флага перехода"}
		Obj={Mnemo="FlagPointerPop" Mk=85 Hint="Выдать указатель на флаг перехода"}
		Obj={Mnemo="FlagPointerPopMk" Mk=86 Hint="Выдать МК с адресом флага перехода"}
		Obj={Mnemo="FlagSet" Mk=90 Hint="Записать значение во флаг перехода"}
		Obj={Mnemo="GoTrueAdr" Mk=95 Hint="Переход при установленном флаге по адресу"}
		Obj={Mnemo="GoTrueAdrStop" Mk=96 Hint="Переход при установленном флаге по адресу и остановка"}
		Obj={Mnemo="GoFalseAdr" Mk=100 Hint="Переход при сброшенном флаге по адресу"}
		Obj={Mnemo="GoFalseAdrStop" Mk=101 Hint="Переход при сброшенном флаге по адресу и остановка"}
	}
	Obj={Mnemo="Prog" Comment
		Obj={Mnemo="Run" Mk=13 Hint="Запуск программы"}
		Obj={Mnemo="Stop" Mk=14 Hint="Останов программы"}
	 	Obj={Mnemo="ProgReset" Mk=23 Hint="Запустить программу с начала"}
		Obj={Mnemo="ProgResetStop" Mk=25 Hint="Установить усказатель на текущую милликоманду на и останов"}
		Obj={Mnemo="RunTrue" Mk=40 Hint="Запустить программу, если в нагрузке милликоманды храниться true"}
	 	Obj={Mnemo="RunFalse" Mk=42 Hint="Запустить программу, если в нагрузке милликоманды храниться false"}
		Obj={Mnemo="MkSet" Mk=29}
	}
	Obj={Mnemo="Recurse" Comment
		Obj={Mnemo="ClearStaticContext" Mk=51 Hint="Очистка статического контекста"}
		Obj={Mnemo="AddLocalVar" Mk=52 Hint="Добавление локальной переменной"}
		Obj={Mnemo="ClearLocalVars" Mk=53 Hint="Очистка массива локальных переменных"}
		Obj={Mnemo="CopyIterationContext" Mk=55 Hint="Копирование контекста заданной итерации в статический контекст (либо контекста последней итерации)"}
		Obj={Mnemo="Recurse" Mk=60 Hint="Рекурсивный вызов (в нагрузке передается указатель на рекурсивную миллирограмму, при nil происходит рекурсивный вызов с начала основной программы)"}
		Obj={Mnemo="RecurseStop" Mk=61 Hint="Рекурсивный вызов и останов (в нагрузке передается указатель на рекурсивную миллирограмму, при nil происходит рекурсивный вызов с начала основной программы)"}
		Obj={Mnemo="CopyLocalVars" Mk=65 Hint="Копирование (восстановление) 'итерационных' переменных в статический массив"}
		Obj={Mnemo="RecurseExit" Mk=66 Hint="Восстановление контекста и перменных"}
		Obj={Mnemo="IterationNumberPop" Mk=70 Hint="Восстановление контекста и перменных"}
		Obj={Mnemo="IterationNumberPopMk" Mk=71 Hint="Восстановление контекста и перменных"}
	}
  Obj=CommonMkList
}
MemManagerMkList{
	Obj={Mnemo="Point work" Comment Hint="Работа со счет указателям"	
		Obj={Mnemo="AdrPointSet" Mk=220 Hint="Записать указатель по адресу (адрес и указатель передаются последовательно двумя МК)"}
		Obj={Mnemo="AdrDataSet" Mk=219 Hint="Записать данные по адресу (адрес и указатель передаются последовательно двумя МК)"}
		Obj={Mnemo="AdrAtrSet" Mk=218 Hint="Записать атрибут по адресу (адрес и указатель передаются последовательно двумя МК)"}
	}
	Obj={Mnemo="AtrCounter" Comment Hint="Работа со счетчиком атрибутов"	
		Obj={Mnemo="AtrCounterPointerSet" Mk=1 Hint="Задать ссылку на счетчик атрибутов"}
		Obj={Mnemo="AtrCounterSet" Mk=2 Hint="Задать значение счетчика номеров атрибутов"}
	 	Obj={Mnemo="AtrCounterPop" Mk=3 Hint="Выдать текущий номер атрибута"}
		Obj={Mnemo="AtrCounterInc" Mk=4 Hint="Увеличить счетчик атрибутов на 1 и выдать его значение"}
		Obj={Mnemo="AtrCounterDec"  Mk=5 Hint="Уменьшить счетчик атрибутов на 1 и выдать его значение"}
		Obj={Mnemo="AtrCounterAtrSet" Mk=31 Hint="Записать номер текущего атрибута в поле ""атрибут"" ИП"}
		Obj={Mnemo="AtrCounterDataSet" Mk=32 Hint="Записать номер текущего атрибута в поле ""дата"" ИП"}
		Obj={Mnemo="AtrCounterDecAtrSet" Mk=33 Hint="Увеличить номер текущего атрибута и записать его в поле ""атрибут"" ИП"}
		Obj={Mnemo="AtrCounterDecDataSet" Mk=34 Hint="Увеличить номер текущего атрибута и записать его в поле ""дата"" ИП"}
	}
	Obj={Mnemo="IpWork" Comment Hint="Работа с ИП"
		Obj={Mnemo="IpАtrFind" Mk=123 Hint="Поиск ИП в ИК по атрибуту"}
		Obj={Mnemo="MarkSet" Mk=59 Hint="Устновить метку"}
		Obj={Mnemo="PointerFullToMark" Mk=62 Hint="Заполнить все указатели нагрузок ИП до метки"}
		Obj={Mnemo="DataFullToMark" Mk=63 Hint="аполнить все данные нагрузок ИП до метки"}

		Obj={Mnemo="IpSet" Mk=7 Hint="Задать ссылку на текущую ИП"}
		Obj={Mnemo="CapsIcSet" Mk=56 Hint="Установить указатель капсулы и ИП"}
		Obj={Mnemo="IpPop" Mk=9 Hint="Выдать ссылку на текущую ИП"}
		Obj={Mnemo="IpPopMk" Mk=209 Hint="Выдать милликоманду со ссылкой на ИП"}
		Obj={Mnemo="DataPointerPop" Mk=10 Hint="Выдать ссылку на данные из ИП"}
		Obj={Mnemo="DataPointerPopMk" Mk=210 Hint="Выдать милликоманду со ссылкой на данные из ИП"}
		Obj={Mnemo="AtrPointerPop" Mk=11 Hint="Выдать ссылку на атрибут из ИП"}
		Obj={Mnemo="AtrPointerPopMk" Mk=211 Hint="Выдать милликоманду со ссылкой на атрибут из ИП"}
		Obj={Mnemo="PointPointerOut" Mk=12 Hint="Выдать ссылку на Point из ИП"}
		Obj={Mnemo="PointPointerOutMk" Mk=212 Hint="Выдать ссылку на Point из ИП"}
		Obj={Mnemo="IpEmptyNew" Mk=13 Hint="Создать новую пустую ИП и выдать адрес в Obj"}
		Obj={Mnemo="IpEmptyNewMk" Mk=213 Hint="Создать новую ИП и выдать милликоманду с указателем на нее"}
		Obj={Mnemo="IpNew" Mk=14 Hint="Создать новую непустую запись NewRec и выдать адрес в Obj"}
		Obj={Mnemo="IpNewMk" Mk=214 Hint="Создать новую непустую ИП и выдать адрес в Obj "}
		Obj={Mnemo="PointToSelfData" Mk=15 Hint="""Закольцевать"" данные"}
		Obj={Mnemo="IcCopy" Mk=16 Hint="Создать копию ИП"}
		Obj={Mnemo="IpAdd" Mk=17 Hint="Подцепить новую ИП к капсуле"}
		Obj={Mnemo="IpCopyAdd" Mk=18 Hint="Создать копию ИП и подцепить ее к капсуле"}
		Obj={Mnemo="AtrSet" Mk=19 Hint="Поместить атрибут в ИП"}
		Obj={Mnemo="DataSet" Mk=20 Hint="Поместить данные в ИП"}
		Obj={Mnemo="PointSet" Mk=21 Hint="Поместить указатель в ИП"}
		Obj={Mnemo="IpDel" Mk=27 Hint="Удалить пару (Obj - указатель на ИП, если Obj=nil, то удаляется ИП)"}
		Obj={Mnemo="AtrPop" Mk=40 Hint="Выдать значение атрибута записи ИП"}
		Obj={Mnemo="AtrPopMk" Mk=240 Hint="Выдать милликоманду с атрибутом"}
		Obj={Mnemo="AtrPrevPop" Mk=180 Hint="Выдать атрибут предыдущей ИП к казателю на текущей ИП(если предыдущей ИП в капсуле нет, то ничего не делается)"}
		Obj={Mnemo="AtrPrevPopMk" Mk=181 Hint="Выдать милликоманду с атрибутом предыдущей ИП к казателю на текущей ИП (если предыдущей ИП в капсуле нет, то ничего не делается)"}
		Obj={Mnemo="DataPop" Mk=41 Hint="Выдать значение Data ИП"}
		Obj={Mnemo="DataPopMk" Mk=241 Hint="Выдать милликоманду со значение Data ИП"}
		Obj={Mnemo="PointOut" Mk=42 Hint="Выдать значение Point ИП"}
		Obj={Mnemo="PointPop" Mk=245 Hint="Выдать значение Point текущей ИП и обнулить указатель нагрузки"}
		Obj={Mnemo="PointOutMk" Mk=242 Hint="Выдать милликоманду со значением Point ИП"}
		Obj={Mnemo="PointPopMk" Mk=243 Hint="дать милликоманду со значением Point текущей ИП и обнулить указатель нагрузки текущей ИП"}
		Obj={Mnemo="IpNewAdd" Mk=36 Hint="Создать новую непустую ИП, подцепить ее к текущей капсуле и выдать ссылку на ИП"}
		Obj={Mnemo="IpNext" Mk=37 Hint="Передвинуть указатель текущей ИП на следующую ИП и выдать указатель на нее"}
		Obj={Mnemo="IcPrev" Mk=38 Hint="Передвинуть указатель текущей ИП на предыдущую ИП и выдать указатель на нее"}
		Obj={Mnemo="IpToTail" Mk=48 Hint="Установить указатель на текущую ИП на последнюю ИП в капсуле"}
		Obj={Mnemo="IpEmptyNewAdd" Mk=35 Hint="Создать новую пустую ИП и подцепить ее к капсуле и выдaть ссылку"}
		Obj={Mnemo="IpCompareNil" Mk=44 Hint="Проверка указателя ИП на нуль (если в текущем указателе на ИП nil - true, false - непустой указатель"}

		Obj={Mnemo="IpInsPrev" Mk=60 Hint="Вставить ИП перед текущей ИП"}
		Obj={Mnemo="IpInsNext" Mk=61 Hint="Вставить ИП после текущей ИП"}

		Obj={Mnemo="IpMarkHold" Mk=262 Hint="Установить метку ИП"}
		Obj={Mnemo="IpMarkOut" Mk=260 Hint="Выдать марку ИП"}
		Obj={Mnemo="IpMarkOutMk" Mk=263 Hint="Выдать МК с маркой ИП"}
		Obj={Mnemo="IpMarkToEndSet" Mk=261 Hint="Заполнить нагрузки ИП до конца капсулы (при Load=nil дублируется маркированная ИК)"}
	}
	Obj={Mnemo="CapsuleWork" Comment Hint="Работа с информационной капсулой"
		Obj={Mnemo="CapsNew" Mk=144 Hint="Создать новую капсулу"}
		Obj={Mnemo="CapsNewMk" Mk=244 Hint="Создать новую капсулу и выдать милликоманду с указателем на нее"}
		Obj={Mnemo="CapsSet" Mk=6 Hint="Задать ссылку на первую капсулу"}
		Obj={Mnemo="CapsIcSet" Mk=56 Hint="Установить указатель капсулы и ИП"}
		Obj={Mnemo="CapsOut" Mk=8 Hint="Выдать ссылку на текущую капсулу"}
		Obj={Mnemo="CapsOutMk" Mk=208 Hint="Выдать милликоманду со ссылкой на капсулу"}
		Obj={Mnemo="CapsCopy" Mk=136 Hint="Создать копию капслы"}
		Obj={Mnemo="Caps2Copy" Mk=138 Hint="Создать копию двух уровней капслы"}
		Obj={Mnemo="Caps2CopyAdd" Mk=139 Hint="Создать копию двух уровней ИК и подцепить ее в конец текущей ИК"}
		Obj={Mnemo="Caps3Copy" Mk=132 Hint="Создать копию трех уровней ИК"}
		Obj={Mnemo="Caps3CopyAdd" Mk=133 Hint="Создать копию трех уровней ИК и подцепить ее в конец текущей ИК"}
		Obj={Mnemo="CapsCopyIpSet" Mk=236 Hint="Создать копию капслы и установить указатель ИП на последнюю ИП капсулы"}
		Obj={Mnemo="CapsAdd" Mk=22 Hint="Подцепить капсулу, указанную в нагрузке, к текущей капсуле"}
		Obj={Mnemo="CapsCopyAdd" Mk=23 Hint="Подцепить копию капсулы, указанной в нагрузке, к текущей капсуле"}
		Obj={Mnemo="CapsDel" Mk=24 Hint="Удалить текущую капсулу"}
		Obj={Mnemo="Caps2Del" Mk=255 Hint="Удалить 2 капсулу до 2-го уровня"}
		Obj={Mnemo="Caps3Del" Mk=256 Hint="Удалить капсулу до 3-го уровня"}
		Obj={Mnemo="AtrDelAtrDel" Mk=26 Hint="Удалить записи с заданным атрибутом из текущей капсулы"}
		Obj={Mnemo="CapsHeadPointerPop" Mk=28 Hint="Выдать указатель на голову списка капсул"}
		Obj={Mnemo="CapsToHead" Mk=29 Hint="Перевести указатель с капсулы на голову капсулы и выдать указатель на голову капсулы"}
		Obj={Mnemo="IcQuantityPop" Mk=30 Hint="Выдать количество записей в капсуле"}
		Obj={Mnemo="IcQuantityPopMk" Mk=49 Hint="Выдать милликоманду с количеством записей в капсуле"}
		Obj={Mnemo="CapsCompareNil" Mk=43 Hint="Проверка указателя капсулы на нуль (если в текущем указателе на капсулу nil - true, false - непустой указатель"}
		Obj={Mnemo="IcCapsToHeadSet" Mk=58 Hint="Установить указатель капсулы и ИП на первую ИП капсулы"}
		Obj={Mnemo="IcCapsToTailSet" Mk=57 Hint="Установить указатель капсулы и ИП на последнюю ИП капсулы"}
		Obj={Mnemo="CapsReset" Mk=39 Hint="Сброс капсулы"}
		Obj={Mnemo="IcQuantityPop" Mk=30 Hint="Выдать количество записей в текущей капсуле"}

		Obj={Mnemo="CapsIns" Mk=108 Hint="Вставить капсулу после текущей ИП"}
		Obj={Mnemo="CapsTailCut" Mk=109 Hint="Исключить последнюю ИП из текущй капсулы"}
		Obj={Mnemo="CapsTailDel" Mk=107 Hint="Удалить последнюю ИП из текущй капсулы"}
		Obj={Mnemo="CapsTailDelTree" Mk=105 Hint="Удалить последнюю ИП с ОА-деревом из текущй капсулы"}

		Obj={Mnemo="CapsTailCutIc" Mk=97 Hint="Обрезать последнюю ИП сапсулы (указатель на обрезанную капсулу в текущем указателе на ИП)"}
		Obj={Mnemo="CapsTailCutPop" Mk=98 Hint="Обрезать последнюю ИП сапсулы и выдать указатель на обрезанную ИП (текущий указатель остается на последней ИП капсулы)"}
		Obj={Mnemo="CapsTailCutPopMk" Mk=99 Hint="Обрезать последнюю ИП сапсулы и выдать милликоманду с указателем на обрезанную ИП (текущий указатель остается на последней ИП капсулы)"}
	}
	Obj={Mnemo="TreeWork" Comment Hint="Работа с ОА-деревом"
		Obj={Mnemo="TreeCopy" Mk=250 Hint="Создать копию капслы AtrData"}
		Obj={Mnemo="TreeCopyAttach" Mk=252 Hint="Подцепить копию ОА-дерева к текущей капсуле"}
		Obj={Mnemo="TreeDel" Mk=254 Hint="Удалить текущую капсулу вместе с ОА-деревом"}
	}

	Obj={Mnemo="Switch" Comment Hint="Реализация ветвления (запуск миллпрограмм по различным условиям)"
		Obj={Mnemo="Ic Switch" Comment Hint="Переходы в зависимости от ИП"
			Obj={Mnemo="IcNilProgExec" Mk=170 Hint="Выполнить программу, если указатель ИП равен nil"}
			Obj={Mnemo="IcNotNilProgExec" Mk=175 Hint="Выполнить программу, если указатель ИП не равен nil"}
			Obj={Mnemo="IcLastPorgExec" Mk=176 Hint="Выполнить программму, если указатель ИП указывает на последнюю ИП в капсуле"}
			Obj={Mnemo="IcNotLastProgExec" Mk=177 Hint="Выполнить программу, если указатель ИП указывает на на последнюю ИП в капсуле"}
			Obj={Mnemo="IcFirstPorgExec" Mk=178 Hint="Выполнить программму, если указатель ИП указывает на первую ИП в капсуле"}
			Obj={Mnemo="IcNotFirstPorgExec" Mk=179 Hint="Выполнить миллипрограммы установленные CapsNilProgSet, CapsOneIcProgSet, CapsMoreOneIcProgSet"}
		}
		Obj={Mnemo="Capsule Switch" Comment Hint="Переходы в зависимости от капсулы"
			Obj={Mnemo="CapsNilProgExec" Mk=150 Hint="Выполнить программу, если указаетель капсулы равен нулю"}
			Obj={Mnemo="CapsNotNilProgExec" Mk=155 Hint="Выполнить программу, если указаетель капсулы не равен нулю"}
			Obj={Mnemo="CapsOneIcProgExec" Mk=160 Hint="Выполнить программу, если в капсуле только одна капсула"}
			Obj={Mnemo="CapsManyIcProgExec" Mk=165 Hint="Выполнить программу, если в капсуле только одна капсула"}
			Obj={Mnemo="CapsNilProgSet" Mk=151 Hint="Установить указатель на миллипрограмму, выполняемую при пустом списке (запуск инициируется с помощью милликоманты CapsIcProg)"}
			Obj={Mnemo="CapsOneIcProgSet" Mk=161 Hint="Установить указатель на миллипрограмму, выполняемую при одной ИП в списке (запуск инициируется с помощью милликоманты CapsIcProgExec)"}
			Obj={Mnemo="CapsMoreOneIcProgSet" Mk=166 Hint="Установить указатель на миллипрограмму, выполняемую при наличии более одной ИП в списке (запуск инициируется с помощью милликоманты CapsIcProgExec)"}
			Obj={Mnemo="CapsIcProgExec" Mk=169 Hint="Выполнить программу, если указатель ИП указывает на на первую ИП в капсуле"}
		}
		Obj={Mnemo="LoadTypeSwitch" Comment Hint="Переходы в зависимости от типа нагрузки ИП"
			Obj={Mnemo="LoadElseProgSet" Mk=189 Hint="Программа, выполняемая, если ни одно из условий по типу нагрзуки ИП не выполнено"}
			Obj={Mnemo="LoadProgExec" Mk=190 Hint="Произвести вызов подпрограмы взависимости от нагрзуки ИП"}
			Obj={Mnemo="PointConstProgSet" Mk=191 Hint="Установить указатель на подпрограмму, запускаемую, если указатель в нагрузке ИП указывает на константу"}
			Obj={Mnemo="PointVarProgSet" Mk=192 Hint="Установить указатель на подпрограмму, запускаемую, если указатель в нагрузке ИП указывает на переменную"}
			Obj={Mnemo="PointConstVarProgSet" Mk=193 Hint="Установить указатель на подпрограмму, запускаемую, если указатель в нагрузке ИП указывает на переменную и константу"}
			Obj={Mnemo="PointConstVarPointProgSet" Mk=194 Hint="Установить указатель на подпрограмму, запускаемую, если указатель в нагрузке ИП указывает на переменную и константу или указатель"}
			Obj={Mnemo="PointPointProgSet" Mk=195 Hint="Установить указатель на подпрограмму, запускаемую, если указатель в нагрузке ИП указывает на указатель"}
			Obj={Mnemo="PointAtrProgSet" Mk=196 Hint="Установить указатель на подпрограмму, запускаемую, если указатель в нагрузке ИП указывает на атрибут"}
			Obj={Mnemo="PointIcProgSet" Mk=197 Hint="Установить указатель на подпрограмму, запускаемую, если указатель в нагрузке ИП указывает на ИП"}
			Obj={Mnemo="PointListProgSet" Mk=198 Hint="Установить указатель на подпрограмму, запускаемую, если указатель в нагрузке ИП указывает на список"}
			Obj={Mnemo="PointIcListProgSet" Mk=199 Hint="Установить указатель на подпрограмму, запускаемую, если указатель в нагрузке ИП указывает на ИП или список"}
			Obj={Mnemo="PointLoadProgSet" Mk=200 Hint="Установить указатель на подпрограмму, запускаемую, если указатель в нагрузке ИП указывает на нагрузку ИП"}
			Obj={Mnemo="PointConstMatrProgSet" Mk=201 Hint="Установить указатель на подпрограмму, запускаемую, если указатель в нагрузке ИП указывает на матрицу констант"}
			Obj={Mnemo="PointPointMatrProgSet" Mk=202 Hint="Установить указатель на подпрограмму, запускаемую, если указатель в нагрузке ИП указывает на матрицу указателей"}
			Obj={Mnemo="PointLoadMatrProgSet" Mk=203 Hint="Установить указатель на подпрограмму, запускаемую, если указатель в нагрузке ИП указывает на матрицу нагрузок"}
			Obj={Mnemo="PointConstArrayProgSet" Mk=204 Hint="Установить указатель на подпрограмму, запускаемую, если указатель в нагрузке ИП указывает на массив констант"}
		}
		Obj={Mnemo="LoadTypeSwitchExec" Comment Hint="Переходы в зависимости от типа нагрузки ИП"
			Obj={Mnemo="PointConstProgExec" Mk=211 Hint="Выполнить подпрограмму, если указатель в нагрузке ИП указывает на константу"}
			Obj={Mnemo="PointVarProgExec" Mk=212 Hint="Выполнить подпрограмму, если указатель в нагрузке ИП указывает на переменную"}
			Obj={Mnemo="PointConstVarProgExec" Mk=213 Hint="Выполнить подпрограмму, если указатель в нагрузке ИП указывает на переменную и константу"}
			Obj={Mnemo="PointConstVarPointProgExec" Mk=214 Hint="Выполнить подпрограмму, если указатель в нагрузке ИП указывает на переменную и константу или указатель"}
			Obj={Mnemo="PointPointProgExec" Mk=215 Hint="Выполнить подпрограмму, если указатель в нагрузке ИП указывает на указатель"}
			Obj={Mnemo="PointAtrProgExec" Mk=216 Hint="Выполнить подпрограмму, если указатель в нагрузке ИП указывает на атрибут"}
			Obj={Mnemo="PointIcProgExec" Mk=217 Hint="Выполнить подпрограмму, если указатель в нагрузке ИП указывает на ИП"}
			Obj={Mnemo="PointListProgExec" Mk=218 Hint="Выполнить подпрограмму, если указатель в нагрузке ИП указывает на список"}
			Obj={Mnemo="PointIcListProgExec" Mk=219 Hint="Выполнить подпрограмму, если указатель в нагрузке ИП указывает на ИП или список"}
			Obj={Mnemo="PointLoadProgExec" Mk=220 Hint="Выполнить подпрограмму, если указатель в нагрузке ИП указывает на нагрузку ИП"}
			Obj={Mnemo="PointConstMatrProgExec" Mk=221 Hint="Выполнить подпрограмму, если указатель в нагрузке ИП указывает на матрицу констант"}
			Obj={Mnemo="PointPointMatrProgExec" Mk=222 Hint="Выполнить подпрограмму, если указатель в нагрузке ИП указывает на матрицу указателей"}
			Obj={Mnemo="PointLoadMatrProgExec" Mk=223 Hint="Выполнить подпрограмму, если указатель в нагрузке ИП указывает на матрицу нагрузок"}
			Obj={Mnemo="PointConstArrayProgExec" Mk=224 Hint="Выполнить подпрограмму, если указатель в нагрузке ИП указывает на массив констант"}
		}
	}
	Obj={Mnemo="Index work" Comment Hint="Индексный режим"
		Obj={Mnemo="IndexModeSet" Mk=101 Hint="Установить/отменить Индексный режим"}
		Obj={Mnemo="IndexVectCreate" Mk=104 Hint="Создать индексный массив и выдать ссылку на созданный индексный массив (Obj - размерность массива)"}
		Obj={Mnemo="IndexVectSet" Mk=106 Hint="Установить ссылку на массив индексов"}
		Obj={Mnemo="IndexVectPop" Mk=110 Hint="Выдать ссылку на индексный массив"}
		Obj={Mnemo="IndexVectPopMk" Mk=111 Hint="Выдать милликоманду со ссылкой на индексный массив"}
		Obj={Mnemo="IndexCounterPointerSet" Mk=114 Hint="Установить ссылку на индексный счетчик"}
		Obj={Mnemo="IndexCounterPointerPop" Mk=116 Hint="Выдать ссылку на индексный счетчик"}
		Obj={Mnemo="IndexCounterPointerPopMk" Mk=117 Hint="Выдать милликоманду со ссылкой на индексный счетчик"}
		Obj={Mnemo="IndexCounterSet" Mk=118 Hint="Установить значение индексного счетчика"}
		Obj={Mnemo="IndexCounterPop" Mk=120 Hint="Выдать значение индексного счетчика"}
		Obj={Mnemo="IpIcIdOutMk" Mk=121 Hint="Выдать милликоманду со ссылкой на запись со служебной информацией ОА-графа"}
		Obj={Mnemo="IpIcIdSet" Mk=122 Hint="Установить указатель на запись со служебной информацийе ОА-графа"}
	}
	Obj={Mnemo="Id work" Comment Hint="Индексный режим"
		Obj={Mnemo="IdModeSet" Mk=290 Hint="Установить режим автоматической простановки идентификаторов информационных капсул (если в нагрзуке nil, то режим устанавливается)"}
		Obj={Mnemo="IdPointerSet" Mk=294 Hint="Установить ссылку на счетчик индексов капсул (если Load=nil, то указатель ставится на внутренний счетчик; автоматически устанавливается индексный режим)"}
		Obj={Mnemo="IdSet" Mk=291 Hint="Установить значение счетчика индексов капсул"}
		Obj={Mnemo="IdPointerPop" Mk=292 Hint="Выдать указатель на счетчик идекаторов капсул"}
		Obj={Mnemo="IdPointerPopMk" Mk=293 Hint="Выдать милликоманду с указателем на счетчик идекаторов капсул"}
	}
	Obj={Mnemo="NameModeSet" Mk=135 Hint="Установить режим имени (true - автоматическое включение ИП с именем (см. NameSet) в создаваемую новую капсулу)"}
	Obj={Mnemo="NameSet" Mk=137 Hint="Установить имя создаваемой капсулы (ИП с данным именем автоматически помещается в создаваемую капсулу)"}

	Obj=CommonMkList
}
CounterMkList{
	Obj={Mnemo="Reset" Mk=0 Hint="Сброс"}
	Obj={Mnemo="Set" Mk=1 Hint="Установить значение"}
	Obj={Mnemo="Pop" Mk=2 Hint="Выдать значение"} 
	Obj={Mnemo="PopMk" Mk=10 Hint="Выдать милликоманду со значением"} 
	Obj={Mnemo="Inc" Mk=4 Hint="Увеличить на шаг счетчика"} 
	Obj={Mnemo="Dec" Mk=5 Hint="Уменьшить на шаг счетчика"}
	Obj={Mnemo="Add" Mk=20 Hint="Прибавить к значению"} 
	Obj={Mnemo="Sub" Mk=25 Hint="Вычесть из значения"}
	Obj={Mnemo="StepSet" Mk=30 Hint="Установить шаг счетчика"} 
	Obj={Mnemo="ValueSet" Mk=55 Hint="Установить значение для запуска миллипрограммы"} 
	Obj={Mnemo="OffsetSet" Mk=120 Hint="Установить смещение при выдаче результата"} 
	Obj={Mnemo="ZeroProgSet" Mk=70 Hint="Миллипрограмма, запускаемая при достижении заданной величины"} 
	Obj={Mnemo="NotZeroProgSet" Mk=85 Hint="Миллипрограмма, запускаемая при недостижении заданной величины"} 
	Obj={Mnemo="LessZeroProgSet" Mk=90 Hint="Миллипрограмма, запускаемая при меньше или равно заданной величины"} 
	Obj={Mnemo="LessProgSet" Mk=95 Hint="Миллипрограмма, запускаемая при меньше заданной величины"} 
	Obj={Mnemo="GreaterZeroProgSet" Mk=100 Hint="Миллипрограмма, запускаемая при больше или расно заданной величины"} 
	Obj={Mnemo="GreaterProgSet" Mk=105 Hint="Миллипрограмма, запускаемая при больше заданной величины"} 

	Obj={Mnemo="Stack work" Comment Hint="Работа со стеком значений счетчика"
		Obj={Mnemo="StackPush" Mk=180 Hint="Поместить значение счетчика в стек (если в нагрузке есть число, то оно записывается в счетчик)"}
		Obj={Mnemo="StackPop" Mk=182 Hint="Восстановить значение счетчика из стека"}
		Obj={Mnemo="StackEmptyReguestProgSet" Mk=185 Hint="Назначить ссылку на подрпограмму, запускаемую, если из пустого стека проиходит восстановление значения"}
		Obj={Mnemo="StackEmptyProgExec" Mk=187 Hint="Запустить миллипрограмму, если стек пуст"}
		Obj={Mnemo="StackNotEmptyProgExec" Mk=189 Hint="Запустить миллипрограмму, если стек непуст"}
	}
	Obj={Mnemo="IndexMode" Comment Hint="Индексный режим"
		Obj={Mnemo="ZeroProgExec" Mk=150 Hint="Выполнить программу, если счетчик равен нулю"}
		Obj={Mnemo="NotZeroProgExec" Mk=151 Hint="Выполнить программу, если счетчик равен нулю"}
		Obj={Mnemo="GreaterProgExec" Mk=152 Hint="Выполнить программу, если счетчик равен нулю"}
		Obj={Mnemo="LessProgExec" Mk=153 Hint="Выполнить программу, если счетчик равен нулю"}
		Obj={Mnemo="GreaterZeroProgExec" Mk=154 Hint="Выполнить программу, если счетчик равен нулю"}
		Obj={Mnemo="LessZeroProgExec" Mk=155 Hint="Выполнить программу, если счетчик равен нулю"}
	}

	Obj=CommonMkList
	}
FindMkList{Obj={Mnemo="Reset" Mk=0 Hint="Сброс ФУ"}
	Obj={Mnemo="Find" Comment
	 	Obj={Mnemo="Set" Mk=1 Hint="Принять капсулу для поиска"}		
	 	Obj={Mnemo="ObjSet" Mk=51 Hint="Установить в качестве шаблона капсулу из ИП с атрибутом obj из входной капсулы"}		
		Obj={Mnemo="ObjPop" Mk=570 Hint="Выдать ссылку на объект из капсулы для поиска"}
		Obj={Mnemo="ObjPopMk" Mk=571 Hint="Выдать милликоманду со ссылкой на объект из капсулы для поиска"}
		Obj={Mnemo="FindIp" Mk=2 Hint="Принять запись для сравнения"}
		Obj={Mnemo="FindIcObj" Mk=32 Hint="Принять запись для сравнения из Obj"}
		Obj={Mnemo="FindAnd" Mk=3 Hint="Поиск по правилу ""И"" "}
		Obj={Mnemo="FindAndObj" Mk=33 Hint="Поиск по правилу ""И"" в капсуле из Obj"}
		Obj={Mnemo="FindOr" Mk=4 Hint="Поиск по правилу ""ИЛИ"" "}
		Obj={Mnemo="FindOrObj" Mk=34 Hint="Поиск по правилу ""ИЛИ"" в капсуле из Obj"}
		Obj={Mnemo="FindAndAtr" Mk=5 Hint="Сравнение капсул по совпадающим атрибутам (если атрибуты не совпадают, то они не сравниваются; если ни один атрибут не совпадает, то считается, что капсулы равны)"}
		Obj={Mnemo="FindAndAtrObj" Mk=35 Hint="Сравнение капсул из Obj по совпадающим атрибутам (если атрибуты не совпадают, то они не сравниваются; если ни один атрибут не совпадает, то считается, что капсулы равны)"}
		Obj={Mnemo="FindTemplate" Mk=6 Hint="Произвести поиск по шаблону (сравниваются два ОА-дерева))"}
		Obj={Mnemo="FindTemplateObj" Mk=36 Hint="Произвести поиск по шаблону (сравниваются два ОА-дерева)) из Obj"}
		Obj={Mnemo="FindRange" Mk=7 Hint="Поиск интервалов"}
		Obj={Mnemo="FindRangeObj" Mk=37 Hint="Поиск интервалов"}
		Obj={Mnemo="IcCompare" Mk=8 Hint="Сравнить две записи"}
		Obj={Mnemo="IcCompareObj" Mk=38 Hint="Сравнить две записи"}
		Obj={Mnemo="TimeLocatSet" Mk=52 Hint="Установить ссылку на счетчик тактов"}
		Obj={Mnemo="IdlingMkSet" Mk=53 Hint="Установить MK для ""холостого хода"" в режиме НДА"}
	}
	Obj={Mnemo="FindResult" Comment
		Obj={Mnemo="Pop" Mk=50 Hint="Выдать указатель на капсулу, в которой производится поиск"}
		Obj={Mnemo="PopMk" Mk=54 Hint="Выдать милликоманду с указателем на капсулу, в которой производится поиск "}

		Obj={Mnemo="Result" Mk=500 Hint="Выдать результат сравнения "}
		Obj={Mnemo="ResultMk" Mk=502 Hint="Выдать милликоманду с результатом сравнения "}
		Obj={Mnemo="ResultAnd" Mk=504 Hint="Выдать результат ""И"" (выдача логического результата сравнения) "}
		Obj={Mnemo="ResultOr" Mk=506 Hint="Выдать результат ""ИЛИ"" (выдача логического результата сравнения) "}
		Obj={Mnemo="IcPop" Mk=510 Hint="Выдать указатель на первую найденную пару"}
		Obj={Mnemo="IcPopMk" Mk=512 Hint="Выдать милликоманду с указателем на первую найденную пару"}

		Obj={Mnemo="AtrPop" Mk=514 Hint="Выдать атрибут из найденной записи "} 
		Obj={Mnemo="AtrPopMk" Mk=516 Hint="Выдать милликоманду с атрибутом из найденной записи "} 
		Obj={Mnemo="DataPop" Mk=518 Hint="Выдать данные из первой найденной записи "}
		Obj={Mnemo="DataPopMk" Mk=520 Hint="Выдать милликоманду с данными из первой найденной записи "}
		Obj={Mnemo="PointPop" Mk=522 Hint="Выдать значение поля ""Point"" первой найденной записи "}
		Obj={Mnemo="PointPopMk" Mk=524 Hint="Выдать милликоманду со значением поля ""Point"" первой найденной записи "} 

		Obj={Mnemo="AtrPointerPop" Mk=530 Hint="Выдать указатель на поле ""атрибут"" первой найденной записи "}
		Obj={Mnemo="AtrPointerPopMk" Mk=532 Hint="Выдать милликоманду с указателем на поле ""атрибут"" первой найденной записи "}
		Obj={Mnemo="DataPointerPop" Mk=534 Hint="Выдать указатель на поле ""данные"" первой найденной записи "}
		Obj={Mnemo="DataPointerPopMk" Mk=536 Hint="Выдать милликоманду с  указателем на поле ""данные"" первой найденной записи "}
		Obj={Mnemo="PointPointerOut" Mk=538 Hint="Выдать указатель на поле ""Point"" первой найденной записи "}
		Obj={Mnemo="PointPointerOutMk" Mk=540 Hint="Выдать милликоманду с указателем на поле ""Point"" первой найденной записи "}

		Obj={Mnemo="IcQuantiyPop" Mk=13 Hint="Выдать количество найденных совпадений ИП"}

		Obj=SourceFindListMkList!
	}
	Obj={Mnemo="Switch" Comment
		Obj={Mnemo="ProgBusFlagSet" Mk=104 Hint="Установить флаг Выдачи последовательности милликоманд на Шину"}
		Obj={Mnemo="ObjAtrSet" Mk=108 Hint="Установить атрибут объекта"}
		Obj={Mnemo="ExeptAtrSet" Mk=122 Hint="Установить атрибут исключения"}
		Obj={Mnemo="SuccessProgSet" Mk=230 Hint="Установить указатель на программу, выполняемую в случае успешного поиска"}
		Obj={Mnemo="YesProgSet" Mk=230 Hint="Установить указатель на программу, выполняемую в случае успешного поиска"}
		Obj={Mnemo="FailProgSet" Mk=235 Hint="Установить указатель на программу, выполняемую в случае неуспешного поиска"}
		Obj={Mnemo="NoProgSet" Mk=235 Hint="Установить указатель на программу, выполняемую в случае неуспешного поиска"}
	}
	Obj={Mnemo="Counter" Comment
		Obj={Mnemo="CountersReset" Mk=130 Hint="Сбросить счётчики"}
		Obj={Mnemo="CountIcСomparePop" Mk=133 Hint="Выдать количество сравнений ИП"}
		Obj={Mnemo="CountIcComparePopMk" Mk=135 Hint="Выдать милликоманду с количеством сравнений ИП"}
	}
	Obj=InObjMkList!
	Obj=CommonMkList
}
BoolALUMkList{Obj={Mnemo="Reset" Mk=0 Hint="Сброс ФУ"}
	Obj={Mnemo="Set" Mk=1 Hint="Записать значение в аккумулятор"}
	Obj={Mnemo="InvSet" Mk=3 Hint="Записать в аккумулятор инвертированную величину"}
	Obj={Mnemo="Out" Mk=7 Hint="Выдать значение из аккумулятора"}
	Obj={Mnemo="OutMk" Mk=8 Hint="Выдать милликоманду со значением из аккумулятора"}
	Obj={Mnemo="OutInv" Mk=9 Hint="Выдать инвертированное значение из аккумулятора"}
	Obj={Mnemo="Inv" Mk=11 Hint="Отрицать значение аккумулятора и выдать его содержимое"}
	Obj={Mnemo="And" Mk=13 Hint="Логическое И"}
	Obj={Mnemo="Or" Mk=15 Hint="Логическое ИЛИ"}
	Obj={Mnemo="ExeptOr" Mk=17 Hint="Логическое ИсключающееИЛИ"}
	Obj={Mnemo="AndNot" Mk=19 Hint="Лоигеское И-НЕ"}
	Obj={Mnemo="OrNot" Mk=21 Hint="Логическое ИЛИ-НЕ"}
	Obj={Mnemo="TruePogSet" Mk=50 Hint="Установить ссылку на программу, выполняемую по true"}
	Obj={Mnemo="FalseProgSet" Mk=53 Hint="Установить ссылку на программу, выполняему по false"}
	Obj={Mnemo="TrueExec" Mk=55 Hint="Выполнить программу по true"}
	Obj={Mnemo="FalseExec" Mk=57 Hint="Выполнить программу по false"}
  Obj=CommonMkList
}
FloatALUMkList{
 Obj={Mnemo="Reset" Mk=0 Hint="Сброс ФУ"}
 Obj={Mnemo="Set" Mk=1 Hint="Записать значение в аккумулятор"}
 Obj={Mnemo="Pop" Mk=2 Hint="Выдать значение из аккумулятора"}
 Obj={Mnemo="PopMk" Mk=22 Hint="Выдать милликоманду со значением из аккумулятора"}
 Obj={Mnemo="Cmp" Mk=21 Hint="Сравнить (вычесть из аккумулятора значение на входе и установить флаги)"}
 Obj={Mnemo="Opposite" Mk=4 Hint="Обратная величина"}
 Obj={Mnemo="Round" Mk=5 Hint="Округлить значение"}
 Obj={Mnemo="Int" Mk=6 Hint="Целая часть значения в аккумуляторе"}
 Obj={Mnemo="Sqrt" Mk=7 Hint="Извлечь квадратный корень из величины в аккумуляторе"}
 Obj={Mnemo="Sqr" Mk=8 Hint="Возвести значение в аккумуляторе в квадрат"}
 Obj={Mnemo="Add" Mk=9 Hint="Сложить"}
 Obj={Mnemo="SqrAdd" Mk=50 Hint="Возвести входную величину в квадрат и прибавить к значению в аккумуляторе"}
 Obj={Mnemo="Sub" Mk=10 Hint="Вычесть текущее значение из значения в аккумуляторе"}
 Obj={Mnemo="SqrSub" Mk=51 Hint="Возвести входную величину в квадрат и вычесть из значения в аккумуляторе"}
 Obj={Mnemo="Mul" Mk=11 Hint="Умножить "}
 Obj={Mnemo="Div" Mk=12 Hint="Разделить"}
 Obj={Mnemo="FlagZero" Mk=13 Hint="Выдать флаг нуля"}
 Obj={Mnemo="FlagNotZero" Mk=31 Hint="Выдать флаг «не нуль»"}
 Obj={Mnemo="IntPop" Mk=40 Hint="Выдать целое число"}
 Obj={Mnemo="Abs" Mk=30 Hint="Абсолютное значение"}
 Obj={Mnemo="Sin" Mk=53 Hint="Sin"}
 Obj={Mnemo="Cos" Mk=54 Hint="Cos"}
 Obj={Mnemo="Tg" Mk=55 Hint="Tg"}
 Obj={Mnemo="Exp" Mk=56 Hint="Exp"}
 Obj={Mnemo="Ln" Mk=57 Hint="Ln"}
 Obj={Mnemo="Max" Mk=60 Hint="Exp"}
 Obj={Mnemo="Min" Mk=61 Hint="Ln"}
 Obj={Mnemo="Flags" Comment 
   Obj={Mnemo="FlagSign" Mk=14 Hint="Выдать флаг знака числа"}
   Obj={Mnemo="FlagBiggerEqual" Mk=15 Hint="Флаг больше или равно"}
   Obj={Mnemo="FlagLess" Mk=16 Hint="Флаг меньше"}
   Obj={Mnemo="FlagLessEqual" Mk=17 Hint="Флаг меньше или равно"}
   Obj={Mnemo="FlagBigger" Mk=18 Hint="Флаг больше"}
 }
 Obj={Mnemo="ProgByFlags" Comment Hint="Программы, автоматически запускаемые в зависимости от флагов результата"
  Obj={Mnemo="ZeroProgSet" Mk=200 Hint="Программа, запускаемая по флагу нуля"}
  Obj={Mnemo="NotZeroProgSet" Mk=205 Hint="Программа, запускаемая по флагу ""не нуль"""}
  Obj={Mnemo="BiggerProgSet" Mk=210 Hint="Программа, запускаемая по флагу ""больше"""}
  Obj={Mnemo="BiggerEqualProgSet" Mk=215 Hint="Программа, запускаемая по флагу ""больше или нуль"""}
  Obj={Mnemo="LessProgSet" Mk=220 Hint="Программа, запускаемая по флагу ""меньше"""}
  Obj={Mnemo="LessEqualProgSet" Mk=225 Hint="Программа, запускаемая по флагу ""меньше или нуль"""}
 }
 Obj={Mnemo="ProgExec" Comment Hint="Программы, запускаемые в зависимости от флагов результата"
  Obj={Mnemo="ZeroProgExec" Mk=230 Hint="Выполнить программу по флагу нуля"}
  Obj={Mnemo="NotZeroProgExec" Mk=235 Hint="Выполнить программу по флагу ""не нуль"""}
  Obj={Mnemo="BiggerProgExec" Mk=240 Hint="Выполнить программа по флагу ""больше"""}
  Obj={Mnemo="BiggerEqualProgExec" Mk=245 Hint="Выполнить программа по флагу ""больше или нуль"""}
  Obj={Mnemo="LessProgExec" Mk=250 Hint="Выполнить программу по флагу ""меньше"""}
  Obj={Mnemo="LessEqualProgExec" Mk=255 Hint="Выполнить программу по флагу ""меньше или нуль"""}
 }
  Obj=CommonMkList
}
IntALUMkList{
 Obj={Mnemo="Reset" Mk=0 Hint="Сброс ФУ"}
 Obj={Mnemo="Set" Mk=1 Hint="Записать значение в аккумулятор"}
 Obj={Mnemo="Pop" Mk=2 Hint="Выдать текущее значение аккумулятора"}
 Obj={Mnemo="PopMk" Mk=42 Hint="Выдать милликоманду со значением из аккумулятора"}
 Obj={Mnemo="PopRestore" Mk=52 Hint="Выдать текущее значение аккумулятора и восстановить предыдущее значение"}
 Obj={Mnemo="PopMkRestore" Mk=46 Hint="Выдать милликоманду со значением из аккумулятора и восстановить предыдущее значение"}
 Obj={Mnemo="Add" Mk=6 Hint="Сложить"}
 Obj={Mnemo="Sub" Mk=7 Hint="Вычесть"}
 Obj={Mnemo="Mul" Mk=8 Hint="Умножиить"}
 Obj={Mnemo="Div" Mk=9 Hint="Разделить"}
 Obj={Mnemo="Cmp" Mk=18 Hint="Сравнить (вычесть из аккумулятора значение на входе и установить флаги)"}
 Obj={Mnemo="Flags" Comment Hint="Выдача флагов результатов"
 Obj={Mnemo="FlagZero" Mk=10 Hint="Выдать флаг нуля"}
 Obj={Mnemo="FlagNotZero" Mk=22 Hint="Выдать флаг «не нуль»"}
 Obj={Mnemo="SignFlag" Mk=11 Hint="Выдать флаг знака числа"}
 Obj={Mnemo="FlagGreaterEqual" Mk=21 Hint="Флаг больше или равно"}
 Obj={Mnemo="FlagGreater" Mk=15 Hint="Флаг больше"}
 Obj={Mnemo="FlagLess" Mk=13 Hint="Флаг меньше "}
 Obj={Mnemo="FlagLessEqual" Mk=14 Hint="Флаг меньше или равно"}
 }
 Obj={Mnemo="ProgByFlags" Comment Hint="Программы, автоматически запускаемые в зависимости от флагов результата"
  Obj={Mnemo="ZeroProgSet" Mk=200 Hint="Программа, запускаемая по флагу нуля"}
  Obj={Mnemo="NotZeroProgSet" Mk=205 Hint="Программа, запускаемая по флагу ""не нуль"""}
  Obj={Mnemo="BiggerProgSet" Mk=210 Hint="Программа, запускаемая по флагу ""больше"""}
  Obj={Mnemo="BiggerZeroProgSet" Mk=215 Hint="Программа, запускаемая по флагу ""больше или нуль"""}
  Obj={Mnemo="LessProgSet" Mk=220 Hint="Программа, запускаемая по флагу ""меньше"""}
  Obj={Mnemo="LessEqProgSet" Mk=225 Hint="Программа, запускаемая по флагу ""меньше или нуль"""}
 }
 Obj={Mnemo="ProgExec" Comment Hint="Программы, запускаемые в зависимости от флагов результата"
  Obj={Mnemo="ZeroProgExec" Mk=230 Hint="Выполнить программу по флагу нуля"}
  Obj={Mnemo="NotZeroProgExec" Mk=235 Hint="Выполнить программу по флагу ""не нуль"""}
  Obj={Mnemo="GreaterProgExec" Mk=240 Hint="Выполнить программа по флагу ""больше"""}
  Obj={Mnemo="GreaterEqualProgExec" Mk=245 Hint="Выполнить программа по флагу ""больше или нуль"""}
  Obj={Mnemo="LessProgExec" Mk=250 Hint="Выполнить программу по флагу ""меньше"""}
  Obj={Mnemo="LessEqualProgExec" Mk=255 Hint="Выполнить программу по флагу ""меньше или нуль"""}
 }=true
 Obj={Mnemo="RemainderPop" Mk=3 Hint="Выдать остаток от целочисленного деления"}
 Obj={Mnemo="RemainderPopMk" Mk=43 Hint="Выдать милликоманду с остатком от целочисленного деления"}
 Obj={Mnemo="SignInvers" Mk=4 Hint="Изменить знак числа в аккумуляторе"}
 Obj={Mnemo="Sqr" Mk=5 Hint="Возвести значение в аккумуляторе в квадрат"}
 Obj={Mnemo="AtrPop" Mk=16 Hint="Выдать значение в формате int64"}
 Obj={Mnemo="ModPop" Mk=17 Hint="Вычислить остаток от деления"}
 Obj={Mnemo="Abs" Mk=30 Hint="Абсолютное значение"}
  Obj=CommonMkList
}
VarManagerMkList{
	Obj={Mnemo="Reset" Mk=0 Hint="Сброс ФУ"}
	Obj={Mnemo="Set" Mk=3  Hint="Установить текущий указатель (адрес)"}
	Obj={Mnemo="Read" Mk=53  Hint="Прочить текущий указатель"}
	Obj={Mnemo="Pop" Mk=4  Hint="Выдать текущий указатель"}
	Obj={Mnemo="PopMk" Mk=54  Hint="Выдать милликоманду с текущим указателем"}
	Obj={Mnemo="Write" Mk=55  Hint="Записать текущий указатель"}
	Obj={Mnemo="VarWork" Comment  Hint="Работа с переменными"
		Obj={Mnemo="VarNewSet" Mk=1  Hint="Создать новую милликоманду и установить ее значение"}
		Obj={Mnemo="VarDel" Mk=2  Hint="Удалить переменную с текущим адресом"}
	 	Obj={Mnemo="VarSet" Mk=5 Hint="Установить переменную, с текущим адресом"}
	 	Obj={Mnemo="VarRead" Mk=65  Hint="Прочитать переменную в ячейку память с текущим адресом"}
		Obj={Mnemo="VarPop" Mk=6  Hint="Выдать переменную, находящуюся по текущему адресу"}
	 	Obj={Mnemo="VarWrite" Mk=66  Hint="Записать переменную, находящуюся по текущему адресу"}
	}
	Obj={Mnemo="PointWork" Comment  Hint="Работа с указателями"
	 	Obj={Mnemo="PointNewSet" Mk=7  Hint="Создать новый указатель и записать в него значение"}
		Obj={Mnemo="PointDel" Mk=8  Hint="Удалить указатель по текущему адресу"}
		Obj={Mnemo="PointCompare" Mk=13  Hint="Сравнить указатель с текущим указателем"}
		Obj={Mnemo="FlagPop" Mk=15  Hint="Выдать флаг сравнения текущего адреса, произведенного по милликоманде ""PointCompare"""}
	 	Obj={Mnemo="PointCompareNil" Mk=14  Hint="Проверить текущий указатель на nil и выдать результат сравнения"}
		Obj={Mnemo="PointSet" Mk=16  Hint="Установить значение указателя, расположенному по текущему адресу"}
		Obj={Mnemo="PointPopPointerSet" Mk=22 Hint=""}
		Obj={Mnemo="PointPopObjSet" Mk=23 Hint=""}
	}
	Obj={Mnemo="AtrWork" Comment  Hint="Работа с атрибутами"
		Obj={Mnemo="AtrSet" Mk=18 Hint="Установить атрибут по адресу, который хранится в текущем указателе"}
		Obj={Mnemo="AtrPop" Mk=19  Hint="Выдать атриубут, хранящийся по текущему адресу"}
	 	Obj={Mnemo="AtrPopAtrSet" Mk=20  Hint="Выдать атриубут, хранящейся по текущему адресу и записать его по адресу, хранящемуся в нагрузке милликоманды"}
		Obj={Mnemo="AtrPopVarSet" Mk=21 Hint="Выдать атриубут, хранящейся по текущему адресу и записать его в Variant-пременную по адресу, хранящемуся в нагрузке милликоманды"}
	}
	Obj={Mnemo="IndexMode" Comment  Hint="Индесный режим"
		Obj={Mnemo="IndexModeSet" Mk=24 Hint="Установить/отменить Индексный режим"}
		Obj={Mnemo="IndexVectSet" Mk=28  Hint="Установить ссылку на массив индексов"}
	 	Obj={Mnemo="IndexVectPop" Mk=30  Hint="Выдать ссылку на индексный массив"}
		Obj={Mnemo="IndexCounterPointerSet" Mk=34 Hint="Установить ссылку на индексный счетчик"}
		Obj={Mnemo="IpIcIdOutMk" Mk=35 Hint="Выдать милликоманду со ссылкой на запись со служебной информацией ОА-графа"}
		Obj={Mnemo="IpIcIdSet" Mk=36 Hint="Установить указатель на запись со служебной информацийе ОА-графа"}
	}
  Obj=CommonMkList
}
PointMatrixMkList{
	Obj={Mnemo="Create" Mk=111 Hint=""}
	Obj={Mnemo="Ini" Mk=112 Hint=""}
	Obj={Mnemo="Atribyting" Mk=205 Hint=""}
	Obj={Mnemo="ProgToNilRun" Mk=300 Hint=""}
	Obj={Mnemo="FindInCol" Mk=75 Hint=""}
	Obj={Mnemo="FindInRow" Mk=80 Hint=""}
	Obj={Mnemo="IndexWork"  Hint="Работа с индексами строк и толбцов"
		Comment Obj={Mnemo="RowSet" Mk=103 Hint=""}
		Obj={Mnemo="RowPop" Mk=107 Hint=""}
	 	Obj={Mnemo="ColSet" Mk=104 Hint=""}
		Obj={Mnemo="ColPop" Mk=108 Hint=""}
		Obj={Mnemo="IndexModeSet" Mk=105 Hint="Установить режим индекса 0 - без изменения индекса, 1 - прибавление 1, 2 - вычитание 1"}
		Obj={Mnemo="RowCountPop" Mk=119 Hint=""}
	 	Obj={Mnemo="ColCountPop" Mk=20 Hint=""}
	 	Obj={Mnemo="IndexReset" Mk=106 Hint="Сброс индексов (X=0, Y=0)"}
	}
	Obj={Mnemo="CellWork" Comment  Hint="Работа с содержимым ячеек массива"
		Obj={Mnemo="CellPop" Mk=113 Hint=""}
		Obj={Mnemo="CellPopMk" Mk=270 Hint=""}
	 	Obj={Mnemo="CellSet" Mk=214 Hint=""}
	}
	Obj={Mnemo="MatrixWork" Comment  Hint="Работа с указателями на матрицы"
		Obj={Mnemo="MatrDel" Mk=15 Hint="Удалить матрицу (в нагрузке указатель на матрицу, если нагрузка nil, то удаляется первая матрица)"}
		Obj={Mnemo="Copy" Mk=116 Hint=""}
	 	Obj={Mnemo="Set" Mk=101 Hint="Установить указатель на матрицу указателей"}
		Obj={Mnemo="Pop" Mk=117 Hint="Выдать указатель на матрицу"}
		Obj={Mnemo="PopMk" Mk=117 Hint="Выдать милликоманду с указателем на матрицу"}
	 	Obj={Mnemo="RowMatrPop" Mk=170 Hint=""}
	 	Obj={Mnemo="MasSaveIndex" Mk=200 Hint="Записать данные по адресам из массива, ограничение по текущим индексам"}
	}
  Obj=CommonMkList
}

LoadMatrixMkList{
		Obj={Mnemo="Create" Mk=11 Hint="Создать матрицу (на входе - значение, которым инициализируется матрица)"}
		Obj={Mnemo="Ini" Mk=12 Hint="Инициализировать матрицу (на входе значение, которое записывается во все ячейки массива)"}
		Obj={Mnemo="Atribyting" Mk=205 Hint=""}
		Obj={Mnemo="ProgToNilRun" Mk=300 Hint=""}
		Obj={Mnemo="FindInCol" Mk=75 Hint=""}
		Obj={Mnemo="FindInRow" Mk=80 Hint=""}
	Obj={Mnemo="IndexWork"  Hint="Работа с индексами строк и толбцов" Comment
		Obj={Mnemo="RowSet" Mk=3 Hint="Установить номер текущей строки"}
		Obj={Mnemo="RowPop" Mk=7 Hint="Выдать номер текущей строки"}
	 	Obj={Mnemo="ColSet" Mk=4 Hint="Установить номер текущего столбца"}
		Obj={Mnemo="ColPop" Mk=8 Hint="Выдать номер текущего столбца"}
		Obj={Mnemo="IndexModeSet" Mk=5 Hint="Установить индексный режим"}
		Obj={Mnemo="RowCountPop" Mk=119 Hint=""}
	 	Obj={Mnemo="ColCountPop" Mk=20 Hint=""}
	}
	Obj={Mnemo="CellWork" Comment  Hint="Работа с содержимым ячеек массива"
		Obj={Mnemo="CellDataPop" Mk=50 Hint="Выдать данные из ячейки"}
		Obj={Mnemo="CellDataPopMk" Mk=54 Hint="Выдать данные из ячейки"}
		Obj={Mnemo="CellPointPop" Mk=55 Hint="Выдать данные из ячейки"}
		Obj={Mnemo="CellPointPopMk" Mk=56 Hint="Выдать данные из ячейки"}
		Obj={Mnemo="CellLoadPop" Mk=60 Hint="Выдать данные из ячейки"}
		Obj={Mnemo="CellLoadPopMk" Mk=64 Hint="Выдать данные из ячейки"}
	 	Obj={Mnemo="CellDataSet" Mk=150 Hint="Установить данные в ячейке (в поинтер автоматически записывается указатель на ячейку с данными)"}
	 	Obj={Mnemo="CellPointSet" Mk=152 Hint="Установить поинтер в ячейке"}
	}
	Obj={Mnemo="MatrixWork" Comment  Hint="Работа с указателями на матрицы"
		Obj={Mnemo="MatrDel" Mk=115 Hint=""}
		Obj={Mnemo="Copy" Mk=116 Hint=""}
	 	Obj={Mnemo="Set" Mk=101 Hint=""}
		Obj={Mnemo="Pop" Mk=17 Hint="Выдать указатель на матрицу"}
		Obj={Mnemo="PopMk" Mk=20 Hint="Выдать милликоманду с указателем на матрицу"}
	 	Obj={Mnemo="RowMatrPop" Mk=170 Hint=""}
	}
  Obj=CommonMkList
}
MatrixMkList{
	Obj={Mnemo="Atribyting" Mk=105 Hint="Атрибутировать матрицу"}
	Obj={Mnemo="ColOffsetSet" Mk=85 Hint="Установить смещение индекса по вертикали"}
	Obj={Mnemo="RowOffsetSet" Mk=90 Hint="Установить смещение индекса по горизонтали"}
	Obj={Mnemo="ExportToExcel" Mk=450 Hint="Экспорт матрицы в Excel"}

	Obj={Mnemo="Search" Comment  Hint="Поиск по матрице"
		Obj={Mnemo="SearchModeSet" Mk=72 Hint="Установить режим поиска: 0 - последовательный перебор, 1 - деление пополам"}
		Obj={Mnemo="SearchInCol" Mk=75 Hint="Поиск в колонке матрицы"}
	 	Obj={Mnemo="SearchInRow" Mk=80 Hint="Поиск в колонке матрицы"}
		Obj={Mnemo="SearchSuccessProgSet" Mk=200 Hint="Установить ссылку на миллипрограмму, запускаемую при положительном результате поиска"}
		Obj={Mnemo="SearchFailProgSet" Mk=205 Hint="Установить ссылку на миллипрограмму, запускаемую при отрицательном результате поиска"}
		Obj={Mnemo="HashIndexSet" Mk=178 Hint="Установить индекс хэширования (нумерация с 1, отрицательное число - хэширование по столбцам, 0 - без хэширования)"}
		Obj={Mnemo="HashMaskSet" Mk=179 Hint="Установить маску для хеширования"}
		}
	Obj={Mnemo="Sort" Comment  Hint="Сортировка по столбцам и строкам матирицы"
		Obj={Mnemo="SortIncreaceByRow" Mk=130 Hint=""}
		Obj={Mnemo="SortDecreaceByRow" Mk=132 Hint=""}
	 	Obj={Mnemo="SortIncreaceByCol" Mk=134 Hint=""}
		Obj={Mnemo="SortDecreaceByCol" Mk=136 Hint=""}
		}
	Obj={Mnemo="MatrixWork" Comment Hint="Работа с указателями на матрицы"
		Obj={Mnemo="MatrSet" Mk=1 Hint="Установить указатель на марицу"}
		Obj={Mnemo="Matr2Set" Mk=6 Hint="Установить указатель на вторую матрицу"}
	 	Obj={Mnemo="RezSet" Mk=2 Hint="Установить указатель на результирующую матрицу"}
		Obj={Mnemo="MatrPop" Mk=17 Hint="Выдать указатель на матрицу"}
		Obj={Mnemo="MatrPopMk" Mk=160 Hint="Выдать милликоманду с указателем на матрицу"}
	 	Obj={Mnemo="Matr2Pop" Mk=27 Hint="Выдать указатель на вторую матрицу"}
		Obj={Mnemo="Matr2PopMk" Mk=161 Hint="Выдать милликоманду с указателем на вторую матрицу"}
		Obj={Mnemo="RezPop" Mk=28 Hint="Выдать указатель на результирующую матрицу"}
		Obj={Mnemo="RezPopMk" Mk=165 Hint="Выдать милликоманду с указателем на результирующую матрицу"}
	 	Obj={Mnemo="MatrDel" Mk=15 Hint="Удалить матрицу"}
		Obj={Mnemo="Create" Mk=11 Hint="Создать маьрицу"}
		Obj={Mnemo="CreateUnitary" Mk=32 Hint=""}
	 	Obj={Mnemo="Ini" Mk=12 Hint="Инициализировать матрицу значением, переданным в нагрузке Мк"}
		Obj={Mnemo="Copy" Mk=16 Hint="Копировать матрицу"}
		Obj={Mnemo="FileLoad" Mk=50 Hint="Считать матрицу из файла"}
		Obj={Mnemo="FileSave" Mk=55 Hint="Записать матрицу в файл"}
	 	Obj={Mnemo="RowCountPop" Mk=19 Hint="Выдать количество строк в матрице"}
		Obj={Mnemo="ColCountPop" Mk=20 Hint="Выдать количество столбцов в матрице"}
		Obj={Mnemo="UnitryMatr" Mk=26 Hint="Создать единицную матрицу"}
	 	Obj={Mnemo="RowMatrPop" Mk=70 Hint=""}
		Obj={Mnemo="LineRezPop" Mk=74 Hint=""}
	}
	Obj={Mnemo="MatrixInit" Comment  Hint="Инициализация матрицы"
		Obj={Mnemo="StartColSet" Mk=400 Hint=""}
  		Obj={Mnemo="StepColSet" Mk=405 Hint=""}
 		Obj={Mnemo="NStepColSet" Mk=410 Hint=""}
 		Obj={Mnemo="StartRowSet" Mk=415 Hint=""}
  		Obj={Mnemo="StepRowSet" Mk=420 Hint=""}
 		Obj={Mnemo="NStepRowSet" Mk=425 Hint=""}
  		Obj={Mnemo="IniClever" Mk=430 Hint=""}
	}
	Obj={Mnemo="IndexWork" Comment  Hint="Работа с индексами строк и толбцов"
		Obj={Mnemo="RowSet" Mk=3 Hint=""}
		Obj={Mnemo="RowPop" Mk=7 Hint=""}
	 	Obj={Mnemo="RowPopMk" Mk=37 Hint=""}
	 	Obj={Mnemo="RowNext" Mk=435 Hint="Перейти к следующей строке матрицы (столбец приравнивается нулю)"}
		Obj={Mnemo="ColSet" Mk=4 Hint=""}
		Obj={Mnemo="ColPop" Mk=8 Hint=""}
	 	Obj={Mnemo="ColPopMk" Mk=38 Hint=""}
		Obj={Mnemo="IndexModeSet" Mk=5 Hint=""}
		Obj={Mnemo="SizeModeSet" Mk=140 Hint=""}
	}
	Obj={Mnemo="Cell work" Comment  Hint="Работа с содержимым ячеек массива"
		Obj={Mnemo="CellPop" Mk=13 Hint=""}
		Obj={Mnemo="CellPopMk" Mk=170 Hint=""}
	 	Obj={Mnemo="CellResPop" Mk=31 Hint=""}
		Obj={Mnemo="CellResPopMk" Mk=175 Hint=""}
		Obj={Mnemo="CellAdd" Mk=60 Hint=""}
	 	Obj={Mnemo="CellSub" Mk=65 Hint=""}
		Obj={Mnemo="CellSet" Mk=14 Hint=""}
		Obj={Mnemo="SizeModeSet" Mk=140 Hint=""}
	}
	Obj={Mnemo="Stack work" Comment  Hint="Работа со стеком"
		Obj={Mnemo="StackLimitSet" Mk=440 Hint=""}
		Obj={Mnemo="StackPush" Mk=441 Hint=""}
	}
  Obj=CommonMkList
}
OpenGLМкList{
	Obj={Mnemo="Reset" Mk=0 Hint="Сброс ФУ"}
 	Obj={Mnemo="FormCreate" Mk=1 Hint="Создать форму и выдать ссылку на неё"}
 	Obj={Mnemo="FormCreateMk" Mk=102 Hint="Создать форму и выдать милликоманду с ссылкой на неё"}
 	Obj={Mnemo="FormSet" Mk=101 Hint="Установить ссылку на форму"}
 	Obj={Mnemo="FormPop" Mk=103 Hint="Выдать ссылку на форму"}
 	Obj={Mnemo="FormPopMk" Mk=104 Hint="Выдать милликоманду со ссылкой на форму"}
	Obj={Mnemo="StageClear" Mk=2 Hint="Очистить сцену"}
	Obj={Mnemo="StageDraw" Mk=10 Hint="Вывод картинки"}
 	Obj={Mnemo="NormalSet" Mk=52 Hint="Установить нормаль для освещения"}
 	Obj={Mnemo="Perspective" Comment Hint="Перспектива"
		Obj={Mnemo="PerspLeft" Mk=30 Hint="Задать левую границу перспективы"}
  		Obj={Mnemo="PerspRight" Mk=31 Hint="Задать правую границу перспективы"}
   		Obj={Mnemo="PerspBottom" Mk=32 Hint="Задать нижнюю границу перспективы"}
  		Obj={Mnemo="PerspTop" Mk=33 Hint="Задать верхнюю границу перспективы"}
   		Obj={Mnemo="PerspClose" Mk=34 Hint="Задать ближнюю грань перспективы"}
  		Obj={Mnemo="PerspDist" Mk=35 Hint="Задать дальнюю грань перспективы"}
   		Obj={Mnemo="PerspProjSet" Mk=36 Hint="Создать перспективную проекцию"}
   		Obj={Mnemo="OrthoView" Mk=43 Hint="Задать ортогональную проекцию"}
 	}

 	Obj={Mnemo="Turn" Comment Hint="Поворот изображения"
		Obj={Mnemo="TurnX" Mk=30 Hint="Поворот по X"}
  		Obj={Mnemo="TurnY" Mk=38 Hint="Поворот по Y"}
   		Obj={Mnemo="TurnZ" Mk=39 Hint="Поворот по Z"}
 	}
 
 	Obj={Mnemo="Move" Comment Hint="Перемещение изображения"
		Obj={Mnemo="MoveX" Mk=40  Hint="Перенос по X"}
 		Obj={Mnemo="MoveY" Mk=41 Hint="Перенос по Y"}
   		Obj={Mnemo="MoveZ" Mk=42 Hint="Перенос по Z"}
 	}

 	Obj={Mnemo="3DPrimitive" Comment Hint="3D примитив"
		Obj={Mnemo="New3DPrimitive" Mk=60 Hint="Новый 3Д примитив"}
  		Obj={Mnemo="Choose3DPrimitive" Mk=61 Hint="Выбор активного 3Д примитива"}
   		Obj={Mnemo="Primitive3DTypeSet" Mk=62 Hint="Задать тип 3Д примитива"}
  		Obj={Mnemo="Radius1" Mk=63 Hint="Радиус 1"}
   		Obj={Mnemo="Radius2" Mk=64 Hint="Радиус 2"}
  		Obj={Mnemo="Corner1" Mk=65 Hint="Угол 1"}
   		Obj={Mnemo="Corner2" Mk=66 Hint="Угол 2"}
  		Obj={Mnemo="QuantitySegmentHoriz" Mk=67 Hint="Количество разбиений поперёк оси Z"}
  		Obj={Mnemo="QuantitySegmentVert" Mk=68 Hint="Количество разбиений вдоль оси Z"}
  		Obj={Mnemo="HeightSet" Mk=69 Hint="Высота"}
  		Obj={Mnemo="Reflect3D" Mk=70 Hint="Отображение 3Д примитива"}
 	}
 	Obj={Mnemo="Light" Comment Hint="Освещение"
		Obj={Mnemo="LightPositionSet" Mk=71 Hint="Позиция света"}
  		Obj={Mnemo="LightDirectionSet" Mk=72 Hint="Направление света"}
   		Obj={Mnemo="TurnOnLight" Mk=50 Hint="Включить свет"}
  		Obj={Mnemo="TurnOffLight" Mk=51 Hint="Выключить свет"}
 	}
 	Obj={Mnemo="Color" Comment Hint="Цвет"
		Obj={Mnemo="Red" Mk=11 Hint="Красный"}
  		Obj={Mnemo="Green" Mk=12 Hint="Зеленый"}
   		Obj={Mnemo="Blue" Mk=13 Hint="Синий"}
  		Obj={Mnemo="ColorSet" Mk=14 Hint="Установить цвет"}
  		Obj={Mnemo="BackgroundColorSet" Mk=14 Hint="Установить цвет фона"}
 	}
 	Obj={Mnemo="Massive" Comment Hint="Работа с массивами"
		Obj={Mnemo="MassiveSet" Mk=17 Hint=""}
  		Obj={Mnemo="MatrIndexSet" Mk=44 Hint="Установить матричный индекс"}
   		Obj={Mnemo="MatrCounterSet" Mk=45 Hint="Установить матричный счетчик"}
  		Obj={Mnemo="MassiveDraw" Mk=8 Hint="Вывести матрицу (если на входе указатель на матрицу, то выводится вся матрица)"}
  		Obj={Mnemo="IndexSet" Mk=15 Hint="Установить индекс"}
  		Obj={Mnemo="CounterSet" Mk=16 Hint="Установить счетчик"}
 	}
 	Obj={Mnemo="Vertex" Comment Hint="Точки"
		Obj={Mnemo="XSet" Mk=5 Hint="Задать X"}
  		Obj={Mnemo="YSet" Mk=6 Hint="Задать Y"}
   		Obj={Mnemo="ZSet" Mk=7 Hint="Задать Z"}
  		Obj={Mnemo="VertexSet" Mk=9 Hint="Задать вершину"}
	}

 	Obj={Mnemo="Primitive" Comment Hint="Примитив"
		Obj={Mnemo="Fug2DDraw" Mk=3 Hint="Рисовить 2мертый примитив"}
  		Obj={Mnemo="EndDraw" Mk=4 Hint="Выйти из режима рисования 2Д примитива"}
 	}
  Obj=CommonMkList
}
OATreeViewMkList{
	Obj={Mk=0 Mnemo="Reset" Hint="Сброс ФУ"}
	Obj={Mk=1 Mnemo="Set" Hint="Отобразить ОА-дерево"}
	Obj={Mk=90 Mnemo="DelCurrentNode" Hint="Удалить Узел с потомками "}
	Obj={Mk=95 Mnemo="CurrentNodeNumberSet" Hint="Установить текущий узел по номеру "} 
	Obj={Mk=100 Mnemo="CurrentNodeSet" Hint="Установить текущий узел по ссылке"}
	Obj={Mk=220 Mnemo="RegViewNodeRecDel" Hint="Удалить узел просмотра контекста"}
	Obj={Mk=230 Mnemo="NodeSearch" Hint="Поиск элемента дерева по имени"}
	Obj={Mk=403 Mnemo="SearchPattern" Hint="Выполнить милликоманду сложного поиска с шаблоном"}
	Obj={Mk=404 Mnemo="SearchPatternCommentsOn" Hint="Учитывать ли листья-комментарии при сложном поиске с шаблоном"}
	Obj={Mk=430 Mnemo="Search" Hint="Выполнить милликоманду поиска по консоли"}
	Obj={Mk=431 Mnemo="SearchMkSet" Hint="Установить милликоманду для внешнего поиска"}
	Obj={Mk=240 Mnemo="ContinueAtrAdd" Hint="Добавить атрибут продолжения построения дерева"} 
	Obj={Mk=241 Mnemo="ContinueAtrClear" Hint="Очистить список атрибутов продолжения построения дерева"} 
	Obj={Mk=242 Mnemo="StopAtrAdd" Hint="Добавить атрибут прекращения построения дерева"} 
	Obj={Mk=243 Mnemo="StopAtrClear" Hint="Очистить список атрибутов прекращения построения дерева"} 
	Obj={Mk=250 Mnemo="MkTreeAtrSet"  Hint="Установить атрибут дерева милликоманд"}
	Obj={Mk=300 Mnemo="RootNodeTextSet" Hint="Установить название корневого узла "} 
	Obj={Mk=320 Mnemo="LeafTextLavelSet" Hint="Установить текстовый уровень для всех листьев дерева"}
	Obj={Mk=330 Mnemo="LeafTextMkSet" Hint="Установить милликоманду для текста всех листьев дерева"}
	Obj={Mk=340 Mnemo="LeafTextSeparatorSet" Hint="Установить текстовый разделитель всех листьев дерева"}

	Obj={Mk=500 Mnemo="ImagesSet" Hint="Установить стандартный набор картинок"}
	Obj={Mk=501 Mnemo="ImageAdd" Hint="Добавить изображение в список ImageList"}
	Obj={Mk=502 Mnemo="ImageLastIndexPop" Hint="Получить индекс последней добавленной картинки (через ссылку)"}
	Obj={Mk=505 Mnemo="ImageNodeLastIndexSet" Hint="Получить индекс последней добавленной картинки (через милликоманду)"}
	Obj={Mk=23 Mnemo="IconAtrSet" Hint="Установить атрибут иконки для узлов дерева"}
	Obj={Mk=30 Mnemo="Expand" Hint="Развернуть поддеревья узла с интексом, который находится в нагрузке Мк"}

  Obj=CommonMkList
}
TimerMkList{
	Obj={Mnemo="Reset" Mk=0 Hint="Сброс ФУ"}
	Obj={Mnemo="IntervalSet" Mk=3 Hint="Установить интервал срабатывания таймера"}
	Obj={Mnemo="TimerProgSet" Mk=4 Hint="Установить указатель на миллипрограмму, запускаемую по таймеру"}
	Obj={Mnemo="EnabledSet" Mk=6 Hint="Установить флаг активности таймера"}
	Obj={Mnemo="IterationSet" Mk=100 Hint="Установить количество итераций"}
	Obj={Mnemo="StopProgSet" Mk=104 Hint="Установить миллипрограмму, запускаемую по окончания работы таймераNewFU={Mnemo="" FUType=}"}
  Obj=CommonMkList
}
InterpreterMkList{Obj={Mnemo="Reset" Mk=0 Hint="Сброс ФУ"}
	Obj={Mk=1 Mnemo="Set" Hint="Установить список интерпретации"}
	Obj={Mk=2 Mnemo="ReceiverContextSet" Hint="Установить указатель на контекст получателя по умолчанию"}
	Obj={Mk=5 Mnemo="ProgAtrSet" Hint="Установить атрибут программы"}
 	Obj={Mk=10 Mnemo="DataOut" Hint="Выдать входные данные"}
 	Obj={Mk=11 Mnemo="DataOutMk" Hint="Выдать милликоманду со входными данными"}
 	Obj={Mnemo="Data" Comment Hint="Интерпретируемые данные"
	Obj={Mk=100 Mnemo="Data" Hint="Данные 1"}
	Obj={Mk=101 Mnemo="Data2" Hint="Данные 2"}
	Obj={Mk=102 Mnemo="Data3" Hint="Данные 3"}
	Obj={Mk=103 Mnemo="Data4" Hint="Данные 4"}
	Obj={Mk=104 Mnemo="Data5" Hint="Данные 5"}
	Obj={Mk=105 Mnemo="Data6" Hint="Данные 6"}
	Obj={Mk=106 Mnemo="Data7" Hint="Данные 7"}
	Obj={Mk=107 Mnemo="Data8" Hint="Данные 8"}
	}
  Obj=CommonMkList
}
SringsSourceMkList{
	Obj={Mk=0 Mnemo="Reset" Hint="Сброс ФУ"}
	Obj={Mk=1 Mnemo="FileSet" Hint="Установить файл"} 
	Obj={Mk=2 Mnemo="FileStart" Hint="Установить файл и начать генерацию строк"} 
	Obj={Mk=5 Mnemo="StringsSetSet" Hint="Установить ссылку на TStrings"} 
	Obj={Mk=80 Mnemo="MkSet"  Hint="Установить прикрепляемую к генерируемой строке первую милликоманду"}
	Obj={Mk=84 Mnemo="Mk2Set" Hint="Установить прикрепляемую к генерируемой строке вторую милликоманду"} 
	Obj={Mk=88 Mnemo="MkLogSet" Hint="Установить прикрепляемую к генерируемой строке милликоманду для служебной консоли"} 
	Obj={Mk=92 Mnemo="MkLogStopSet" Hint="Установить милликоманду для выдачи последних строк на служебную консоль при принудительном останове"} 
	Obj={Mk=100 Mnemo="StartLineSet" Hint="Установить индекс начальной строки"}
	Obj={Mk=105 Mnemo="FinLineSet" Hint="Установить конечный индекс"}
	Obj={Mk=115 Mnemo="Start" Hint="Начать генерацию (в качестве входного параметра может передаваться TStrings)"}
	Obj={Mk=116 Mnemo="Include" Hint="Вставить текст (в качестве входного параметра может передаваться TStrings)"}
	Obj={Mk=113 Mnemo="StartStr" Hint="Начать генерацию одной строки (на входе строка)"}
	Obj={Mk=120 Mnemo="Stop" Hint="Остановить генерацию строк"}
	Obj={Mk=160 Mnemo="LineNumPop"Hint="Выдать номер текущей генерируемой строки"}
	Obj={Mk=161 Mnemo="LineNumPopMk"Hint="Выдать милликоманду с номером текущей генерируемой строки"}
	Obj={Mk=150 Mnemo="FinProgSet"Hint="Установить ссылку на подпрограмму, выполняему при успешном завершении генерации строк"}  
	Obj={Mk=200 Mnemo="PreStartProgSet"Hint="Установить ссылку на подпрограмму, выполняему перед генерацией символов"}
	Obj={Mk=205 Mnemo="StopProgSet" Hint="Установить ссылку на подпрограмму, выполняему по приходе милликоманды Stop"}
	Obj={Mk=181 Mnemo="WorkTimePop"Hint="Выдать длительность генерации строк в секундах"}  
	Obj={Mk=180 Mnemo="WorkTimePopMk"Hint="Выдать милликоманду с длительностью генерации строк в секундах"}  

	Obj={Mk=240 Mnemo="FileNameMkSet" Hint="становить милликоманду установки имени файла для запроса строк по имени файла"}
	Obj={Mk=241 Mnemo="StringsOutMkSet" Hint="Установить милликоманду запроса строк по имени файла"}

	Obj={Mk=250 Mnemo="TextPeasOutMkSet" Hint="Установить Мк вывода фрагмента текста"}
	Obj={Mk=252 Mnemo="TextPeasLeftCharsSet" Hint="Установить число выводимых слева символов фрагмента текста"}
	Obj={Mk=253 Mnemo="TextPeasRightCharsSet" Hint="Установить число выводимых справа символов фрагмента текста"}
	Obj={Mk=255 Mnemo="TextPeasPopMk" Hint="Выдать Мк с фрагментом текста (в нагрузке - номер позиции, откуда берется фрагмент)"}
  Obj=CommonMkList
}
LexicaFUMkList{
	Obj={Mk=0 Mnemo="Reset" Hint="Сброс ФУ"}
	Obj={Mk=48 Mnemo="InStrOut" Hint="Выдать входную строку"}
	Obj={Mk=49 Mnemo="InStrOutMk" Hint="Выдать милликоманду со входной строкой"}
	Obj={Mk=50 Mnemo="Lexing" Hint="Разбор строки"}
	Obj={Mk=7 Mnemo="TactProgSet" Hint="Установить программу, выполняемую по окончанию такта работы НДA"}
	Obj={Mk=8 Mnemo="TimeOutMk" Hint="Выдать указатель на счетчик тактов работы"}
	Obj={Mk=9 Mnemo="ModeSet" Hint="Установить режим работы автомата 0 - ДА, 1 - НДА"}
	Obj={Mnemo="Recevier" Comment   Hint="Назначение премника лексем"
		Obj={Mk=5 Mnemo="ReceiverSet" Hint="Установить контекст приёмника лексем"}
		Obj={Mk=10 Mnemo="ReceiverMkSet" Hint="Добавить милликомманду для приёмника лексем (для НДА)"}
		Obj={Mk=11 Mnemo="ReceiverMkAdd" Hint="Установить милликомманду для приёмника лексем"}
		Obj={Mk=15 Mnemo="MnemoReceiverSet"  Hint="Установить контекст приёмника мнемоник"}
		Obj={Mk=20 Mnemo="MnemoReceiverMkSet" Hint="Установить милликомманду для приёмника мнемоник"}
		Obj={Mk=30 Mnemo="MessageMkSet" Hint="Установить милликоманду выдачи сообщений"}
		Obj={Mk=35 Mnemo="StopStrSourceMkSet" Hint="Установить милликоманду остановки генератора строк"}
		Obj={Mk=400 Mnemo="FinLineAtrSet" Hint="Установить атрибут сообщения, выдаваемого в конце строки"}
		Obj={Mk=405 Mnemo="FinLineLexSet" Hint="Установить лексему, выдаваемую в конце строки"}
		Obj={Mk=240 Mnemo="LexemaToLexReceiver" Hint="Выдать лексему (лексема, переданная в качестве нагрузки, пересылается приёмнику лексем )"}
		Obj={Mk=241 Mnemo="LexemaToReceiver" Hint="Выдать лексему (лексема, переданная в качестве нагрузки, пересылается приёмнику лексем или приёмник мнемоник)"}
		Obj={Mk=245 Mnemo="LastLexemaToReceiver" Hint="Выдать последнюю лексему приемнику лексем (лексема выдается на приемник лексем даже, если это мнемоника)"}
		Obj={Mk=248 Mnemo="LastLexemaOut"  Hint="Выдать последнюю лексему"}
		Obj={Mk=249 Mnemo="LastLexemaOutMk" Hint="Выдать милликоманду с последней лексемой (Милликоманда выдается на BusContext)"}

		Obj={Mk=251 Mnemo="LastLexemaLoadPop"  Hint="Выдать нагрузку из ИП с описанием последней лексемы"}
		Obj={Mk=252 Mnemo="LastLexemaLoadPopMk" Hint="Выдать милликоманду с нагрузкой из ИП с описанием последней лексемы"}

		Obj={Mk=270 Mnemo="PrevLexemaPop" Hint="Выдать предыдущую лексему (если предыдущей лексемы не было, то выдается ИП с ярлыком разделителя и пустой строкой)"}
		Obj={Mk=275 Mnemo="PrevLexemaPopMk" Hint="Выдать милликоманду с предыдущей лексемой (если предыдущей лексемы не было, то выдается ИП с ярлыком разделителя и пустой строкой)"}
		Obj={Mk=250 Mnemo="ReceiverMkPointerPop" Hint="Выдать указатель на милликоманду, прикрепляемую к лексеме "}
		Obj={Mk=254 Mnemo="ReceiverMkPointerPopMk" Hint="Выдать на Шину милликоманду с указателем на милликоманду, прикрепляемоу к лексеме"}
		Obj={Mk=255 Mnemo="ReceiverPointerPop" Hint="Выдать указатель на контекст приемника лексем "}
		Obj={Mk=259 Mnemo="ReceiverPointerPopMk" Hint="Выдать на Шину милликоманду с указателем на контекст приемника лексем"}
		Obj={Mk=225 Mnemo="ReceiverToStackMkSet" Hint="Положить милликоманду, прикрепляемую к лексеме, в стек и установить милликоманду к лексеме "}
		Obj={Mk=230 Mnemo="ReceiverFromStackLexemaPop" Hint="Извлечь милликоманду премника и выдать лексекму"}
		Obj={Mk=235 Mnemo="ReceiverFromStackLastLexemaPop" Hint="Извлечь милликоманду премника и выдать последнюю лексекму"}
	}
	Obj={Mk=37 Mnemo="ShiftModeSet" Hint="Установить режим регистра строки (0-оставить без изменения, 1 - перевести в нижний, 2 - в верхний регистр)"}
	Obj={Mk=40 Mnemo="MnemoListSet" Hint="Установить укзаатель на таблицу мнемоник"}
	Obj={Mk=42 Mnemo="CmpProgSet" Hint="Установить программу, запускаемую при совпадении с ИК поиски"}
	Obj={Mk=43 Mnemo="CmpSet" Hint="УСтановить капсулу для проверки"}
	Obj={Mk=190 Mnemo="NLexemsSet" Hint="Установить количество сохраняемых лексем"}
	Obj={Mk=300 Mnemo="StopGenMkSet" Hint="Установить милликоманду, выполняемую при обраружении лексической ошибки"}
	Obj={Mk=305 Mnemo="Stop" Hint="Lex.ShiftModeSet"}
	Obj={Mk=295 Mnemo="ShiftModeSet" Hint="Установить режим регистра символов (0 - не менять; 1- строчные; 2 - заглавные буквы)"}
	Obj={Mk=290 Mnemo="LexComplexSet" Hint="Добавить сложную лексему (сложной называется лексемы в состав которой входят символы-разделители)"}
	Obj={Mk=292 Mnemo="LexComplexClear" Hint="Очистить список сложных лексем (сложной называется лексемы в состав которой входят символы-разделители)"}
	Obj={Mk=293 Mnemo="MultiCharSeparatorSet" Hint="Добавить многосимвольный разделитель"}
	Obj={Mk=294 Mnemo="MultiCharSeparatorReset" Hint="Очистить список многосимвольных разеделителей"}

	Obj={Mk=276 Mnemo="CharCountPop" Hint="Выдать номер текущего распознаваемого символа"}
	Obj={Mk=279 Mnemo="CharCountPopMk" Hint="Выдать милликоманду с номером текущего распознаваемого символа"}
	Obj={Mk=280 Mnemo="CharMarkPop" Hint="Выдать маркер текущего распознаваемого символа"}
	Obj={Mk=284 Mnemo="CharMarkPopMk" Hint="Выдать милликоманду с маркером текущего распознаваемого символа"}
	Obj={Mk=320 Mnemo="IniProgSet" Hint="Устоновить пограмму инициализации ФУ"}
	Obj={Mk=330 Mnemo="Ini" Hint="Перейти в стартовое состояние (запускается программа инициализации и сбрасывается внутренний флаг комментария)"}

	Obj={Mk=336 Mnemo="CharCounterPop" Hint="Выдать номер текущего символа"}
	Obj={Mk=337 Mnemo="CharCounterPopMk" Hint="Выдать милликоманду со номером текущего символа"}
	Obj={Mk=338 Mnemo="CharLineCounterPop" Hint="Выдать номер текущего символа в строке"}
	Obj={Mk=339 Mnemo="CharLineCounterPopMk" Hint="Выдать милликоманду со номером текущего символа в строке"}
\\	Obj={Mk=340 Mnemo="CharPosAtrSet" Hint="Установить атрибут порядкового номера символа"}
	Obj={Mk=341 Mnemo="CharPosRefPopMk" Hint="Выдать милликоманду с указателем на регистр, где хранится номер текущего символа"}

  Obj=CommonMkList
}
OATreeAnalyzerMkList{
	Obj={Mk=1 Mnemo="Set" Hint="Установить ОА-дерево и произвести его анализ"}
	Obj={Mk=2 Mnemo="MatrixModeSet" Hint="Установить режим матрицы"}
	Obj={Mk=3 Mnemo="Add" Hint="Добавить результаты поиска в ОА-дереве в уже существующую матрицу результатов"}
	Obj={Mk=5 Mnemo="AtrSet" Hint="Установить атрибут для построения таблицы"}
	Obj={Mk=8 Mnemo="AtrAdd" Hint="Добавить атрибут"}
	Obj={Mk=9 Mnemo="AtrValSet" Hint="Добавить значение по умолчанию (если ИП с заданными атрибутами не находится, то в результирующую таблицу помещается это знание)"}
	Obj={Mk=10 Mnemo="AtrClear" Hint="Очистить список атрибутов для построения таблицы"}
	Obj={Mk=15 Mnemo="VerticalOrientation" Hint="Установить флаг ориентации"}
	Obj={Mk=20 Mnemo="MatrOut" Hint="Выдать сформированную матрицу"}
	Obj={Mk=23 Mnemo="MatrOutMk" Hint="Выдать милликоманду с указателем на сформированную матрицу"}
	Obj={Mk=25 Mnemo="NodesCount" Hint="Выдать количество проанализированных вершин графа"}
	Obj={Mk=30 Mnemo="LeavesCount" Hint="Выдать количество уровней проанализированного графа"}
	Obj={Mk=35 Mnemo="SortTypeSet" Hint="Тип сортировка (True - прямая, False - обратная)"}
	Obj={Mk=40 Mnemo="SortIndexSet" Hint="Указать столбец/строку, по которой необходимо произвести сортировку"}
	Obj={Mk=45 Mnemo="ContinueAtrSet" Hint="Установить атрибут продолжения анализа"}
	Obj={Mk=50 Mnemo="ContinueAtrCleare" Hint="Очистить список атрибутов продолжения анализа"}
	Obj={Mk=55 Mnemo="ColomnsSet" Hint=""}
	Obj={Mk=60 Mnemo="DepthSet" Hint="Установить глубину просмотра делева (если значение параметрая <0, то просамтривается весь список)"}
  Obj=CommonMkList
}
FormMkList{
	Obj={Mk=1 Mnemo="FormSet" Hint="Установить ссылку на форму"}
	Obj={Mk=2 Mnemo="FormPop" Hint="Выдать ссылку на форму"}
	Obj={Mk=152 Mnemo="FormPopMk" Hint="Выдать милликоманду со ссылкой на форму"} 
	Obj={Mk=3 Mnemo="FormCreate" Hint="Создать экранную форму"}
	Obj={Mk=4 Mnemo="FormDel" Hint="Удалить экранную форму"}
	Obj={Mk=801 Mnemo="Focus" Hint="Дать окну фокус ввода"}
	Obj={Mk=7 Mnemo="VisibleSet" Hint="Установить свойство видимости окна"}
	Obj={Mk=27 Mnemo="WindowStateSet" Hint="Статитус окна: 0-нормальный размер"}
	Obj={Mk=34 Mnemo="ScrollSet" Hint="Установить свойство полос прокрутки"}
	Obj={Mk=40 Mnemo="MemuSet" Hint=""}
	Obj={Mk=60 Mnemo="ZoomSet" Hint="Установить режим масштабирования графических элементов"}
	Obj={Mk=65 Mnemo="ZoomReset" Hint="Снять режим масштабирования графических элементов"}
	Obj={Mk=19 Mnemo="CanvasPop" Hint="Выдать ссылку на Canvas"}
	Obj={Mk=20 Mnemo="CaptionSet" Hint="Установить ссылку на Canvas"}

	Obj={Mnemo="Size and Position" Comment
		Obj={Mk=9 Mnemo="LeftSet" Hint=""}
		Obj={Mk=11 Mnemo="TopSet" Hint=""}
		Obj={Mk=13 Mnemo="WidthSet" Hint=""}
		Obj={Mk=15 Mnemo="HeightSet" Hint=""}
		Obj={Mk=17 Mnemo="ColorSet" Hint=""}
		Obj={Mk=22 Mnemo="X_CurrentSet" Hint="Установить координату текущей точки для того, чтобы прочитать или установить цвет пиксела"}
		Obj={Mk=24 Mnemo="Y_CurrentSet" Hint="Установить координату текущей точки для того, чтобы прочитать или установить цвет пиксела"}
		Obj={Mk=26 Mnemo="CurrentColorPop" Hint="Выдать цвет текущей точки"}
		Obj={Mk=3 Mnemo="ClientWigthPop" Hint="Выдать клиентскую ширину окна (т.е. шириру поля окна, без краев и т.д.)"}
		Obj={Mk=33 Mnemo="ClientHeightPop" Hint="Выдать клиентскую высоту окна (т.е. высоту поля окна, без заголовка и т.д.)"}
	}
	Obj={Mk=100 Mnemo="CloseProgSet" Hint="Установить ссылку на программу, вызываемую при закрытии окна"}
	Obj={Mk=105 Mnemo="ResizeProgSet" Hint="Установить ссылку на программу, вызываемую при изменении размеров окна"}

  Obj=WindowMkList
  Obj=CommonMkList
}
ConsoleMkList{
	Obj={Mk=130 Mnemo="LnOut" Hint="Вывести переменную или константу в отдельную строку"}
	Obj={Mk=131 Mnemo="Ln" Hint="Вывести пустую строку"}
	Obj={Mk=160 Mnemo="Out" Hint="Вывести переменную или константу в последнюю строку"}
	Obj={Mk=165 Mnemo="OutLn" Hint="Вывести переменную или константу и перевести строку"}
	Obj={Mk=100 Mnemo="TextInsert" Hint="Вставить фрагмент теста"}
	Obj={Mk=0 Mnemo="Reset" Hint="Сброс ФУ"}
	Obj={Mk=3 Mnemo="NewTab" Hint="Открыть новую вкладку консоли"}
	Obj={Mk=7 Mnemo="SearchOpen" Hint="Открыть диалог поиска"}
	Obj={Mk=135 Mnemo="ClearPage" Hint="Очистить текстовую вкладку (на входе номер вкладки, если на входе nil, то очищается текущая вкладка"}
	Obj={Mk=320 Mnemo="GoToLine" Hint="Перейти к строке с номером"}
	Obj={Mk=132 Mnemo="ExlOut" Hint="Передать в Excell (в нагузке указатель на объект для передачи"}
	Obj={Mk=139 Mnemo="ExlAccumAdd" Hint="Прибавить к ячейке Excel (изменение индексов не производится)"}
	Obj={Mk=129 Mnemo="ComentSet" Hint="Установить комментарий для выводимых с консоли данных (например, название лиска в Excell"}
	Obj={Mk=133 Mnemo="ExlRowSet" Hint="установить индекс строки Ecxel (индексы с 0)"}
	Obj={Mk=134 Mnemo="ExlColSet" Hint="установить индекс столбца Ecxel (индексы с 0)"}
	Obj={Mk=136 Mnemo="ExlIndexModeSet" Hint="Режим индексации (0 - без индексации, 1 - по строке, 2 - по столбцу)"}
	Obj={Mk=137 Mnemo="ExlLn" Hint="Перевод строки/стоблца"}
	Obj={Mk=138 Mnemo="ExlReset" Hint="Сброс указателя на объект Excel"}

	Obj={Mnemo="Formated print" Comment Hint="Форматированный вывод"
	Obj={Mk=340 Mnemo="PrintFormatSet" Hint="Установить шаблон вывода"}
	Obj={Mk=341 Mnemo="Print" Hint="Вывод переменной"}
	Obj={Mk=342 Mnemo="PrintOut" Hint="Принудительный вывод подготовленной строки"}
	Obj={Mk=343 Mnemo="PrintModeSet" Hint="Установить режим вывода (0- вывод по получению всех даннхы, 1 - ожидание МК PrintOut)"}
	Obj={Mk=344 Mnemo="PrintEndSet" Hint="Установить конец строки"}
	Obj={Mk=345 Mnemo="OutEndSet" Hint="Установить конец строки для вывода МК Out"}

	Obj={Mk=350 Mnemo="Print_0" Hint="Вывод аргумента с индексом 0"}
	Obj={Mk=351 Mnemo="Print_1" Hint="Вывод аргумента с индексом 1"}
	Obj={Mk=352 Mnemo="Print_2" Hint="Вывод аргумента с индексом 2"}
	Obj={Mk=353 Mnemo="Print_3" Hint="Вывод аргумента с индексом 3"}
	Obj={Mk=354 Mnemo="Print_4" Hint="Вывод аргумента с индексом 4"}
	Obj={Mk=355 Mnemo="Print_5" Hint="Вывод аргумента с индексом 5"}
	Obj={Mk=356 Mnemo="Print_6" Hint="Вывод аргумента с индексом 6"}
	Obj={Mk=357 Mnemo="Print_7" Hint="Вывод аргумента с индексом 7"}
	Obj={Mk=358 Mnemo="Print_8" Hint="Вывод аргумента с индексом 8"}
	Obj={Mk=359 Mnemo="Print_9" Hint="Вывод аргумента с индексом 9"}

	}
	Obj={Mnemo="File" Comment Hint="Операции над файлами"
		Obj={Mk=150 Mnemo="Open" Hint="Открыть файл"}
		Obj={Mk=151 Mnemo="Save" Hint="Сохранить файл"}
		Obj={Mk=153 Mnemo="SaveAll" Hint="Сохранить все файлы"}
		Obj={Mk=154 Mnemo="SaveAllAsk" Hint="Сохранить все файлы с запросом на сохранения (при нажатии на клавишу ""Отмена"" см. Мк 154)"}
		Obj={Mk=155 Mnemo="SaveCanselPointerSet" Hint="Установить ссылку на переменную, в которую записывается флаг отмены сохранения с запросом"}
		Obj={Mk=322 Mnemo="OpenProgSet" Hint="Установить программу, выполняемую при открытии файла"}
		Obj={Mk=325 Mnemo="FileNameLastPop" Hint="Выдать имя последнего открытого файла"}
		Obj={Mk=326 Mnemo="FileNameLastPopMk" Hint="Выдать милликоманду с имемем последнего открытого файла"}
		Obj={Mk=330 Mnemo="PageNameSet" Hint="Установить имя вкладки для запроса ссылки на строки"}
		Obj={Mk=331 Mnemo="PageStringsOut" Hint=" Выдать ссылку на строки по имени вкладки"}
		Obj={Mk=332 Mnemo="PageStringskOutMk" Hint=" Выдать Мк со ссылкой на строки по имени вкладки"}
	}
	Obj={Mnemo="Console window" Comment Hint="Управление окном консоли"
		Obj={Mk=1 Mnemo="ParentSet" Hint="Установить родительский графический элемент"}
		Obj={Mk=200 Mnemo="Focus" Hint="Дать фокус окну консоли"}
		Obj={Mk=205 Mnemo="CaptionSet" Hint="Установить заголовок окна консоли"}
		Obj={Mk=210 Mnemo="VisibleSet" Hint="Установить видимость окна консоли"}
		Obj={Mk=215 Mnemo="StateSet" Hint="Установить статус окна консоли"}
	}
	Obj={Mnemo="ProgramControl" Comment Hint="Операции с миллипрограммой"
		Obj={Mk=60 Mnemo="StartMkSet" Hint="Установить МК StartProgramMk"}
		Obj={Mk=61 Mnemo="StartProgSet" Hint="Установить МК StartProgramMp"}
		Obj={Mk=62 Mnemo="RestartMkSet" Hint="Установить МК RestartProgramMk"}
		Obj={Mk=63 Mnemo="RestartProgSet" Hint="Установить МК RestartProgramMp"}
		Obj={Mk=64 Mnemo="ResetMkSet" Hint="Установить МК ResetProgramMk"}
		Obj={Mk=65 Mnemo="ResetProgSet" Hint="Установить МК ResetProgramMp"}
		Obj={Mk=66 Mnemo="Start" Hint="Start Program Mk"}
		Obj={Mk=67 Mnemo="Restart" Hint="Restart Program Mk"}
		Obj={Mk=68 Mnemo="Reset" Hint="Reset Program Mk"}
		Obj={Mk=70 Mnemo="ConsMkSet" Hint="Установить милликоманду для введенной в консоли строки"}
		Obj={Mk=250 Mnemo="RootTabProgSet" Hint="Reset program Mk"}
		Obj={Mk=251 Mnemo="TestTabProgSet" Hint="Установить миллипрограмму для тестовой вкладки"}
		Obj={Mk=252 Mnemo="OutTabProgSet" Hint="Установить миллипрограмму для выводной вкладки"}
		Obj={Mk=253 Mnemo="ConTabProgSet" Hint="Установить миллипрограмму для консольной вкладки"}	}
	Obj={Mnemo="Service" Comment Hint="Служебные команды"
		Obj={Mk=2 Mnemo="Close" Hint="Закрыть"}
		Obj={Mk=9 Mnemo="MnemoListSet" Hint="Установить ссылку на список мнемоник"}
		Obj={Mk=10 Mnemo="TreeSearchMkSet" Hint="Установить милликоманду для выдачи поиска фрагмента текста в ОА-инструментальном дереве"}
		Obj={Mk=40 Mnemo="FUMarkSet" Hint="Установить марку FUMark"}
		Obj={Mk=110 Mnemo="StringsPop" Hint="Выдать ссылку на текст текущей вкладки (TStrings)"}
		Obj={Mk=115 Mnemo="StringsPopMk" Hint="Выдать милликоманду со ссылкой на текст текущей вкладки (TStrings)"}
	}
	Obj={Mnemo="PopupMenu" Hint="Работа со всплывающим меню подсказок вариантов ввода лексем" Comment
		Obj={Mnemo="PopupCallBackMkSet" Mk=298 Hint="Установить милликоманду для отправки номера МК приёма матрицы вариантов (МК на компилятор)"}
 		Obj={Mnemo="PopupStringMkSet" Mk=299 Hint="Установить милликоманду для отправки введеной строки (МК на компилятор)"}
 		Obj={Mnemo="PopupMatrixRequest" Mk=300 Hint="Послать на компилятор запрос таблицы мнемоник и часть введеной строки"}
 		Obj={Mnemo="PopupStringPopMk" Mk=302 Hint="Послать на компилятор милликоманду с запросом таблицы мнемоник и часть введеной строки"}
 		Obj={Mnemo="PopupMatrixSet" Mk=301 Hint="Прием таблицы с мнемониками"}
		Obj={Mnemo="PopupEnabled" Mk=297 Hint="Включить/выключить режим всплывающих подсказок"}
		Obj={Mnemo="PopupDestroy" Mk=305 Hint="Включить/выключить режим всплывающих подсказок"}
	}
	Obj={Mnemo="Hint" Hint="Работа со всплывающей подсказкой" Comment
 		Obj={Mnemo="HintSet" Mk=311 Hint="Установить сообщение во всплывающей подсказке"}
 		Obj={Mnemo="HintMkSet" Mk=310 Hint="Установить милликоманду для отправки запроса сообщения во всплывающей подсказки"}
 		Obj={Mnemo="HintRequest" Mk=312 Hint="Послать на компилятор запрос всплывающего сообщения"}

		Obj={Mnemo="LastFuMnemoSet" Mk=302 Hint="Установить поледнюю мнемонику ФУ"}
		Obj={Mnemo="LastFuMnemoPopMk" Mk=304 Hint="Выдать милликоманду с последней мнемоникой ФУ"}
	}
  Obj=CommonMkList
}
SchedulerMkList{
	Obj={Mk=0 Mnemo="Reset"  Hint="Сброс ФУ"}
	Obj={Mk=1 Mnemo="NCoresSet" Hint="Установить число процессоров в вычислительном узле"}
	Obj={Mk=5 Mnemo="ScheduleTimeSet" Hint="Установить время, затрачиваемое планировщиком для обработки запроса"}
	Obj={Mk=10 Mnemo="FUContextLoadFactorSet" Hint="Установить коэффициент времени загрузки образа ФУ"}
	Obj={Mk=15 Mnemo="FUContextSaveFactorSet" Hint="Установить коэффициент времени выгрузки образа ФУ"}
	Obj={Mk=20 Mnemo="RamSizeSett" Hint="Установить объем памяти вычислительного узла"}
	Obj={Mk=25 Mnemo="TimePointerSet" Hint="Установить ссылку на переменную с текущим модельным временем"}
	Obj={Mk=30 Mnemo="EventserContextSet" Hint="Установить контекст  Eventser"}
	Obj={Mk=35 Mnemo="EventserMkSet" Hint="Усновить милликоманду добавления события для Eventser"}

	Obj={Mk=40 Mnemo="CoreCountPop" Hint="Выдать количество занятых ядер"}
	Obj={Mk=44 Mnemo="CoreCountPopMk" Hint="Выдать милликоманду с количеством занятых ядер"}
	Obj={Mk=45 Mnemo="SchedulerMkQueuePop" Hint="Выдать количество милликоманд, находящихся в очереди к исполнению на ФУ"}
	Obj={Mk=49 Mnemo="SchedulerMkQueuePopMk" Hint="Выдать милликоманду с количеством милликоманд, находящихся в очереди к исполнению на ФУ"}
	Obj={Mk=47 Mnemo="SchedulerMkQueueMaxPop" Hint="Выдать максимальное количество милликоманд, находящихся в очереди к исполнению на ФУ"}
	Obj={Mk=48 Mnemo="SchedulerMkQueueMaxPopMk" Hint="Выдать милликоманду с максимальным количеством милликоманд, находящихся в очереди к исполнению на ФУ"}

	Obj={Mk=50 Mnemo="CoreRequestCountPop" Hint="Выдать количество запросов на ресурсы"}
	Obj={Mk=54 Mnemo="CoreRequestCountPopMk" Hint="Выдать милликоманду с количеством запросов на ресурсы"}
	Obj={Mk=55 Mnemo="RamPop" Hint="Выдать объем задайствованной в вычислительном процессе"}
	Obj={Mk=59 Mnemo="RamPopMk" Hint="Выдать милликомаду с объемом задйствованной в вычислительном процессе памяти"}
	Obj={Mk=64 Mnemo="EventsCountPopMk" Hint=" Выдать милликоманду с числом зафиксированных событий"}
	Obj={Mk=69 Mnemo="ContextChangeCountPopMk" Hint="Выдать милликоманду с числом зафиксированный смен контекстов у испольнительных устройств"}
	Obj={Mk=74 Mnemo="SchedulerMkQueuePopMk" Hint="Выдать милликоманду с количеством милликоманд, находящихся в очереди на ожидание вычислительные ресурсов"}
	Obj={Mk=75 Mnemo="CoreRequestSumPop" Hint="Выдать общее количество запросов на ресурсы"}
	Obj={Mk=76 Mnemo="CoreRequestSumPopMk" Hint="Выдать милликоманду с общим количеством запросов на ресурсы"}

	Obj={Mk=99 Mnemo="SelfSchedulerSet" Hint="Установить собственный планировщик"}
	Obj={Mk=100 Mnemo="CoreRequest" Hint="Запрос ресурсов"}
	Obj={Mk=105 Mnemo="CoreContinue" Hint="Запрос ФУ на продолжение работы на занятом ядре"}
	Obj={Mk=110 Mnemo="CoreFree" Hint="Освободить ядро"}
	Obj={Mk=115 Mnemo="MkQueue" Hint="Поставить/удалить милликоманду в/из очередь/и к ФУ"}

	Obj=CommonMkList
}
IsingFUMkList{
	Obj={Mk=0 Mnemo="Reset"  Hint=""}
	Obj={Mk=1 Mnemo="NeiborsQuantitySet" Hint=""}
	Obj={Mk=20 Mnemo="EnergySet" Hint=""}
	Obj={Mk=25 Mnemo="TemperatyreSet" Hint=""}
	Obj=CommonMkList
}
ProgExecMkList{
	Obj={Mk=0 Mnemo="Reset"  Hint="Сброс ФУ"}
	Obj={Mk=1 Mnemo="Set" Hint="Установить указатель на начало программы"}
	Obj={Mk=5 Mnemo="EnabledSet" Hint="Установить активный/пассивный режим"}
	Obj={Mk=10 Mnemo="Exec" Hint="Выполнить программу"}
	Obj={Mk=15 Mnemo="ExecTrue" Hint="Выполнить программу, если в нагрузке милликоманды true"}
	Obj={Mk=20 Mnemo="ExecFalse" Hint="Выполнить программу, если в нагрузке милликоманды false"}
  Obj=CommonMkList
}
ListBoxMkList{
	Obj={Mk=1 Mnemo="Create" Hint="Создать компонент ListBox (на входе может быть ссылка на родительсткий компонент)"}
	Obj={Mk=5 Mnemo="Set" Hint="Установить ссылку на компонент ListBox"}
	Obj={Mk=10 Mnemo="ParentSet" Hint="Установить ссылку на родительский графический элемент"}
	Obj={Mk=15 Mnemo="Del" Hint="Уничтожить компонент ListBox"}
	Obj={Mk=45 Mnemo="Clear" Hint="Очистить поле компонента ListBox"}
	Obj={Mk=50 Mnemo="VisibleSet" Hint="Установить свойство видимости"}
	Obj={Mk=55 Mnemo="AlignSet" Hint="Установить свойство Align"}
	Obj={Mk=60 Mnemo="ColomnsSet" Hint="Установить количество столбцов в таблице"}
	Obj={Mk=65 Mnemo="EnabledSet" Hint="Установить свойство активности"}
	Obj={Mk=70 Mnemo="MultiSelectSet" Hint="Установить свойство множественного выбора"}
	Obj={Mk=75 Mnemo="ShowHintSet" Hint="Установить свойство показа посказки"}
	Obj={Mk=80 Mnemo="StyleSet" Hint="Установить свойство Style"}
	Obj={Mk=85 Mnemo="HintSet" Hint="Установить флаг вывода всплывающей подсказки"}
	Obj={Mk=86 Mnemo="HintIndexSet" Hint="Установить индекс столбца/строки таблицы со строками выслывающей подсказки"}
	Obj={Mk=150 Mnemo="ConstMatrOut" Hint="Вывести матрицу констант"}
	Obj={Mk=155 Mnemo="IndexSet" Hint="Установить индекс для вывода массива"}
	Obj={Mk=160 Mnemo="OrientationSet" Hint="Установить ориентацию вывода матрицы"}
	Obj={Mk=200 Mnemo="TextMkSet" Hint="Установить милликоманду, прикрепляемую к выдаваемой текстовой строке"}
	Obj={Mk=210 Mnemo="SearchMkSet" Hint="Установить милликоманду для внешнего поиска"}
  Obj=CommonMkList
}
MainMenuMkList{
	Obj={Mnemo="FileNameSet" Mk=16 Hint="Установить рабочую дирректорию, где хранится файл с настройками"}
	Obj={Mnemo="MenuContextPop" Mk=70 Hint="Выдать указатель на контекст"}
	Obj={Mnemo="MenuContextPopMk" Mk=71 Hint="Выдать милликоманду с указателем на контекст"}
	Obj={Mnemo="IndexSet" Mk=1 Hint="Установить индекс к разделу"}
	Obj={Mnemo="SubIndexSet" Mk=2 Hint="Установить подиндекс к подразделу"}
	Obj={Mnemo="Sub2IndexSet" Mk=7 Hint="Установить втрой подиндекс к подразделу"}
	Obj={Mnemo="ItemCreate" Mk=5 Hint="Создать пункт меню в конце списка"}
	Obj={Mnemo="ItemFirstCreate" Mk=15 Hint="Создать пункт меню в начале списка"}
	Obj={Mnemo="ItemDel" Mk=137 Hint="Удалить пункт в меню"}
	Obj={Mnemo="NItemsSet" Mk=9 Hint="Установить максимальное количество пунктов подменю"}
	Obj={Mnemo="ItemCaptionSet" Mk=4 Hint="Подписать раздел"}
	Obj={Mnemo="DefaultItemSet" Mk=6 Hint="Присвоение раздела по умолчанию"}
	Obj={Mnemo="SubItemCheckedSet" Mk=8 Hint="Маркер ""галочка"""}
	Obj={Mnemo="ItemProgSet" Mk=40 Hint="Установить ссылку на подпрограмму обработки нажания на пункт меню"}
	Obj={Mnemo="SubItemProgSet" Mk=42 Hint="Установить ссылку на подпрограмму обработки нажания на подпункт меню"}
	Obj={Mnemo="MainMenuSet" Mk=100 Hint="Установить ссылку на компонент MainMenu"}
	Obj={Mnemo="EnabledFirstLavelSet" Mk=50 Hint="Сделать пункт на первом уровне меню активным (на входе номер пункта)"}
	Obj={Mnemo="EnabledFirstLavelReset" Mk=55 Hint="Сделать пункт меню  на первом уровне неактивным (на входе номер пункта)"}
	Obj={Mnemo="NewItemProgSet" Mk=59 Hint="Установить подпрограмму обработки события, назначаемую при создании пункта меню"}
	Obj={Mnemo="ItemCaptionsSave" Mk=80 Hint="Сохранить названия пунктов меню в файл"}
	Obj={Mnemo="ItemCaptionsLoad" Mk=82 Hint="Считать названия пунсктов меню из файла"}
	Obj={Mnemo="DoubleCaptionCheckSet" Mk=85 Hint="Установить флаг проверки на дублирование значений в спике  при добавлении нового пункта"}
	Obj={Mnemo="DoubleCaptionDel" Mk=135 Hint="Удалить пункты меню с одинаковыми надписями"}
	Obj={Mnemo="ItemClickToTop" Mk=140 Hint="Переместить выбранный пользователем пункт меню в начало списка"}
	Obj={Mnemo="Caption,Hint Out" Hint="Выдача имени и всплывающей подсказки пунка меню" Comment
		Obj={Mnemo="CaptionPop" Mk=120 Hint="Выдать имя пукнта меню"}
		Obj={Mnemo="CaptionPopMk" Mk=121 Hint="Выдать милликоманду с именем пункта меню"}
		Obj={Mnemo="HintPop" Mk=122 Hint="Выдать hint пункта меню"}
		Obj={Mnemo="CaptionPopMk" Mk=123 Hint="Выдать милликоманду с hint-ом пункта меню"}
		Obj={Mnemo="CaptionClickPop" Mk=130 Hint="Выдать имя нункта меню, который был выбран пользователем"}
		Obj={Mnemo="CaptionClickPopMk" Mk=131 Hint="Выдать милликоманду с именем пункта, который был выбран пользователем"}
		Obj={Mnemo="HintClickPop" Mk=132 Hint="Выдать hint пункта меню, который был выбран пользователем"}
		Obj={Mnemo="HintClickPopMk" Mk=133 Hint="Выдать милликоманду с hint-ом пункта меню, который был выбран пользователем"}
	}
  Obj=CommonMkList
}
RegexpFUMkList{
	Obj={Mnemo="Reset" Mk=0 Hint="Сброс ФУ"}
	Obj={Mnemo="PatternSet" Mk=20 Hint="Установка поискового шаблона (регулярное выражение)"}
	Obj={Mnemo="StringSet" Mk=21 Hint="Установка входной строки для поиска"}
	Obj={Mnemo="PatternSetStart" Mk=22 Hint="Установка поискового шаблона (регулярное выражение), затем запуск поиска"}
	Obj={Mnemo="StringSetStart" Mk=23 Hint="Установка входной строки для поиска, затем запуск поиска"}
	Obj={Mnemo="ResultMkSet" Mk=25 Hint="Установка милликоманды для отправки результата (первого найденного вхождения)"}
	Obj={Mnemo="ResultMatrMkSet" Mk=26 Hint="Установка милликоманды для отправки результата в формате массива/матрицы (все внайденные вхождения)"}
	Obj={Mnemo="ResultMatrPop" Mk=27 Hint="Выполнить милликоманду отправки результата в формате массива/матрицы"}
	Obj={Mnemo="ResultMatrPopMk" Mk=28 Hint="Установить и выполнить милликоманду отправки результата в формате массива/матрицы"}
	Obj={Mnemo="ResultProgSet" Mk=29 Hint="Установить миллипрограмму для отправки результата"}
	Obj={Mnemo="Start" Mk=30 Hint="Запуск поиска"}
	Obj={Mnemo="IndexOffsetSet" Mk=41 Hint="Установка стартового значения индекса при индексации входных строк. Используется в качестве милликоманды при приеме входной строки. (по умолчанию - 1000)"}
	Obj={Mnemo="ResultFUContextSet" Mk=42 Hint="Установка контекста ФУ, которое будет принимать результаты поиска"}
	Obj=CommonMkList
}
RegexpManagerMkList{
	Obj={Mnemo="RegexpFUSet" Mk=2 Hint="Установить эталонный контект ФУ Regex"}
	Obj={Mnemo="Clone" Mk=3 Hint="Клонирование нескольких обработчиков Regex"}
	Obj={Mnemo="StringPut" Mk=9 Hint="Получить строку на обработку"}
	Obj=CommonMkList
}
RegexpCollectorMkList{
	Obj={Mnemo="Reset" Mk=0 Hint="Сброс ФУ"}
	Obj={Mnemo="ReceiverFUContextSet" Mk=1 Hint="Установить контекст ФУ, которому будут пересылаться результаты"}
	Obj={Mnemo="ReceiverMkSet" Mk=2 Hint="Установить милликоманду, к которой будут прикрепляться результаты"}
	Obj={Mnemo="IcCountPopMk" Mk=54 Hint="Выдать милликоманду со значением счетчика принятытх ИП"}
	Obj=CommonMkList
}
EventserMkList{
	Obj={Mnemo="Reset" Mk=0 Hint="Сброс ФУ"}
	Obj={Mnemo="EventSet" Mk=1 Hint="Добавить событие"}
	Obj={Mnemo="EventWaitSet" Mk=151 Hint="Добавить ожидание событие"}
	Obj={Mnemo="ModelReset" Mk=5 Hint="Сброс параметров моделирования"}
	Obj={Mnemo="OutProgSet" Mk=10 Hint="Установить миллипрограмму для выдачи сообщений о событиях"}
	Obj={Mnemo="FinProgSet" Mk=15 Hint="Установить миллипрограмму, запускаемую по завершении моделирования"}
	Obj={Mnemo="OutMkSet" Mk=20 Hint="Установить милликоманду выдачи сообщений о событиях (сообщения формируются в виде стоки)"}
	Obj={Mnemo="ParallAccumSet" Mk=25 Hint="Установить значение аккумулятора общего коэффициента параллелизма"}
	Obj={Mnemo="CurrentTimePop" Mk=40 Hint="Выдать значение текущего времени"}
	Obj={Mnemo="CurrentTimePointPop" Mk=46 Hint="Выдать адрес ячейки памяти с текущим временем"}
	Obj={Mnemo="CurrentTimePointPopMk" Mk=50 Hint="Выдать милликоманду с адресом ячейки памяти с текущим модельным временем"}
	Obj={Mnemo="CurrentTimePopMk" Mk=50 Hint="Выдать милликоманду с текущим модельным временем"}

	Obj={Mnemo="EventRequestCapsPop" Mk=95 Hint="Выдать капсулу с устанавливаемым в настоящее время событием"}
	Obj={Mnemo="EventRequestCapsPopMk" Mk=96 Hint="Выдать милликоманду с капсулой с устанавливаемым в настоящее время событием"}

	Obj={Mnemo="EventRequestProgSet" Mk=97 Hint="Установить миллипрограмму, вызываемую при установике события"}
	Obj={Mnemo="EventCapsPop" Mk=98 Hint="Выдать указатель на капсулу с описанием текущего события"}
	Obj={Mnemo="EventCapsPopMk" Mk=99 Hint="Выдать милликоманду с указателем на капсулу с описанием текущего события"}

	Obj={Mnemo="FUContinueMkSet" Mk=55 Hint="Устновить милликоманду продолжения работы для управляемого ФУ"}
	Obj={Mnemo="CurrentParallelFactorPop" Mk=60 Hint="Выдать текущий коффициент параллелизма"}
	Obj={Mnemo="CurrentParallelFactorPopMk" Mk=64 Hint="Выдать милликоманду с текущим коффициентом параллелизма"}

	Obj={Mnemo="ParallelFactorPop" Mk=65 Hint="Выдать коффициент параллелизма"}
	Obj={Mnemo="ParallelFactorPopMk" Mk=69 Hint="Выдать милликоманду с коффициентом параллелизма"}
	Obj={Mnemo="DispParallelFactorPopMk" Mk=79 Hint="Выдать милликоманду с дисперсией коффициента параллелизма"}
	Obj={Mnemo="SKOParallelFactorPopMk" Mk=84 Hint="Выдать милликоманду с среднеквадратическим отклонением коффициента параллелизма"}

	Obj={Mnemo="NEUSet" Mk=85 Hint="Установить число исполнительных устройств в системе (для вычисления коэффициента использования оборудования"}
	Obj={Mnemo="UseFactorPopMk" Mk=90 Hint="Выдать милликоманду с коэффициентом использования оборудования"}

	Obj={Mnemo="EventsCountPopMk" Mk=74 Hint="Выдать милликоманду с числом произошедших событий"}

	Obj={Mnemo="Start" Mk=100 Hint="Начать моделирование  (в качестве нагрузки может передаваться указатель на описание события, которые поместиться в очередь событий)"}
	Obj={Mnemo="Stop" Mk=105 Hint="Остановить моделирование"}
	Obj=CommonMkList
}
ChartMkList{
	Obj={Mnemo="Reset" Mk=0 Hint="Сброс ФУ"}
	Obj={Mnemo="VisibleSet" Mk=4 Hint="Установить свойство видимость"}
	Obj={Mnemo="HeigthSet" Mk=6 Hint="Установить высоту"}
	Obj={Mnemo="WigthSet" Mk=8 Hint="Установить ширину"}
	Obj={Mnemo="TopSet" Mk=10 Hint="Установить верхнюю грань окна"}
	Obj={Mnemo="LeftSet" Mk=12 Hint="Установить координату элемента по горизонтали"}
	Obj={Mnemo="AlegnSet" Mk=14 Hint="Установить свойство Alegh"}
	Obj={Mnemo="ChartPop" Mk=18 Hint="Выдать ссылку на Chart"}
	Obj={Mnemo="ChartPopMk" Mk=22 Hint="Выдать милликоманду со ссылкой на Chart"}
	Obj={Mnemo="SeriaIndexSet" Mk=30 Hint="Установить Индекс диаграммы"}
	Obj={Mnemo="SeriaIndexSet" Mk=34 Hint="Установить Индекс Серии графика"}
	Obj={Mnemo="ChartCreat" Mk=40 Hint="Создать диаграмму и выдать ссылку на неё"}
	Obj={Mnemo="ChartSet" Mk=42 Hint="Задать ссылку на диаграмму"}
	Obj={Mnemo="ChartDel" Mk=43 Hint="Уничтожить диаграмму"}
	Obj={Mnemo="ChartPop" Mk=47 Hint="Выдать ссылку на диаграмму"}
	Obj={Mnemo="ChartPopMk" Mk=49 Hint="Выдать милликоманду со ссылкой на диаграмму"}
	Obj={Mnemo="SeriaLastIndexPop" Mk=54 Hint="Выдать индекс последней созданной серии"}
	Obj={Mnemo="SeriesCountPop" Mk=56 Hint="Выдать количество созданных серий"}
	Obj={Mnemo="SeriaDel" Mk=58 Hint="Удалить серию по индексу"}
	Obj={Mnemo="SeriaColorSet" Mk=60 Hint="Установить Цвет серии"}

	Obj={Mnemo="TitleSet" Mk=65 Hint="Установить заголовок"}
	Obj={Mnemo="TitleYSet" Mk=70 Hint="Установить метку оси Y"}
	Obj={Mnemo="TitleXSet" Mk=75 Hint="Установить метку оси X"}

	Obj={Mnemo="ExlOut" Mk=110 Hint="Выдать данные в Excel"}
	Obj={Mnemo="ExlAdd" Mk=112 Hint="Добавить данные в Excel"}
	Obj={Mnemo="ExlUkPop" Mk=113 Hint="Выдать указатель на текущий лист Excel"}
	Obj={Mnemo="ExlUkPopMk" Mk=114 Hint="Выдать милликоманду с указателем на текущий лист Excel"}
	Obj={Mnemo="HorizontalSet" Mk=115 Hint="Установить горизонтальный режим выдачи данных в Excel"}
	Obj={Mnemo="ExlRowSet" Mk=120 Hint="Устанвить строку Excel с которой надо начинать выводить данные"}
	Obj={Mnemo="ExlColSet" Mk=121 Hint="Устанвить столбец Excel с которой надо начинать выводить данные"}
	Obj={Mnemo="ExlChartDrawSet" Mk=125 Hint="Установить флаг рисования графика по переденнам в Excel данным"}
	Obj={Mnemo="ExlCapsionSet" Mk=127 Hint="Установить заголовок листа Excel"}
	Obj=WindowMkList
	Obj=CommonMkList
}
PlotMkList{
	Obj={Mnemo="Reset" Mk=0 Hint="Сброс ФУ"}
	Obj={Mnemo="SeriaCreat" Mk=1 Hint="Создать Серию (на входе номер вида серии)"}
	Obj={Mnemo="SeriaPointerPop" Mk=2 Hint="Выдать ссылку на  серию"}
	Obj={Mnemo="SeriaPointerPopMk" Mk=4 Hint="Выдать милликоманду со ссылкой на  серию"}
	Obj={Mnemo="ParentSet" Mk=3 Hint="Задать ссылку на родителя"}
	Obj={Mnemo="SeriaDel" Mk=5 Hint="Уничтожить График"}
	Obj={Mnemo="NPointersSet" Mk=6 Hint="Задать максимальное количество выводимых точек"}
	Obj={Mnemo="PlotModeSet" Mk=7 Hint="Задать режим рисования графика (0- обычный, 1 - ступенчатый)"}
	Obj={Mnemo="ColorSet" Mk=10 Hint="Задать Цвет"}
	Obj={Mnemo="GistogramModeSet" Mk=15 Hint="Установить режим диаграммы (чтобы график чертился ступеньками)"}
	Obj={Mnemo="XSet" Mk=50 Hint="Задать координату X"}
	Obj={Mnemo="YSet" Mk=64 Hint="Задать координату Y и вывести точку на график"}
	Obj={Mnemo="AccumAdd" Mk=62 Hint="Прибавить к аккумулятору (значение аккумулятора прибавляется к Y)"}
	Obj={Mnemo="AccumSub" Mk=63 Hint="Вычесть из аккумулятора (значение аккумулятора прибавляется к Y)"}
	Obj={Mnemo="StepSet" Mk=70 Hint="Задать шаг"}
	Obj={Mnemo="XCurrentSet" Mk=74 Hint="Установить текущую координату X"}
	Obj={Mnemo="YByStepSet" Mk=78 Hint="Вывести значение Y соотвественно шагу"}
	Obj={Mnemo="PenWidthSet" Mk=80 Hint="Установить ширину линии графика"}
	Obj={Mnemo="PenColorSet" Mk=84 Hint="Установить Цвет линии"}
	Obj=CommonMkList
}
IsingManagerMkList{
	Obj={Mnemo="Reset" Mk=0 Hint="Сброс ФУ"}
	Obj=CommonMkList
}
IsingTopManagerMkList{
	Obj={Mnemo="Reset" Mk=0 Hint="Сброс ФУ"}
	Obj=CommonMkList
}

Graph500EdgeGenMkList{
	Obj={Mnemo="Reset" Mk=0 Hint="Сброс ФУ"}
	Obj={Mnemo="ScaleSet" Mk=1 Hint="Установить scale (корень от числа вершин)"}
	Obj={Mnemo="EdgeSet" Mk=5 Hint="Установить число ребер в графе"}
	Obj={Mnemo="EdgeFactorSet" Mk=10 Hint="Установить число ребер с помощью коэффицента от числа вершин графа"}
	Obj={Mnemo="CollectorSet" Mk=20 Hint="Установить ссылку на сборщика результатов"}
	Obj={Mnemo="FUFieldRangeSet" Mk=25 Hint="Установить размерность поля для анализа графа (число ФУ на одной грани вычислительного поля)"}
	Obj={Mnemo="Run" Mk=100 Hint="Начать тест (генерацию FU для анализа графа) (на входе количество шагов моделирования - по уморчанию прогонятеся 64 итарации)"}
	Obj=CommonMkList
}
Graph500CollectorMkList{
	Obj={Mnemo="Reset" Mk=0 Hint="Сброс ФУ"}
	Obj={Mnemo="GraphGenSet" Mk=1 Hint="Устновить ссылку на генератор графа"}
	Obj={Mnemo="PointSet" Mk=50 Hint="Принять номер вершины с итераций"}
	Obj={Mnemo="CountPopMk" Mk=35 Hint="Выдать милликоманду со значением счетчика вершин"}
	Obj={Mnemo="TraceLongPopMk" Mk=40 Hint="Выдать милликоманду со средней длиной пути в графе"}
	Obj={Mnemo="IterationSet" Mk=20 Hint="Установить номер текущей итерации"}
	Obj={Mnemo="TraceLongIterationPopMk" Mk=55 Hint="Выдать длину пути для итерации"}
	Obj={Mnemo="TraceLongIterationPopMkList" Mk=60 Hint="Выдать длину пути для итерации"}

	Obj=CommonMkList
}
GatewayFileMkList{
	Obj={Mnemo="Reset" Mk=0 Hint="Сброс ФУ"}
	Obj={Mnemo="FileNameSet" Mk=5 Hint="Задать имя файла"}
	Obj={Mnemo="MkSet" Mk=9 Hint="Задать милликоманду, прикрепляемую к считанному из файла индексному массиву"}
	Obj={Mnemo="IndexVectRead" Mk=13 Hint="Считать капсулу и выдать милликоманду с капсулой на Шину"}
	Obj={Mnemo="IndexVectLength" Mk=17 Hint="Установить длину записываемого в файл индексного массива"}
	Obj={Mnemo="IndexVectWrite" Mk=21 Hint="Записать индексный массив в файл"}
	Obj={Mnemo="IndexCounterPointerPop" Mk=25 Hint="Выдать ссылку на индексный счётчик"}
	Obj={Mnemo="IndexCounterPop" Mk=29 Hint="Выдать значение индексного счётчика"}
	Obj={Mnemo="IndexCounterPointerSet" Mk=33 Hint="Установить ссылку на индексный счётчик"}
	Obj={Mnemo="IndexVectPointPop" Mk=37 Hint="Выдать ссылку на индексный файл"}
	Obj={Mnemo="TextFile" Comment Hint="Работа с текстовым файлом"
		Obj={Mnemo="SeparatorSet" Mk=50 Hint="Установить разделитель выводимых значений"}
		Obj={Mnemo="OpenFileWrite" Mk=55 Hint="Открыть текстовый файл на запись"}
		Obj={Mnemo="CloseFile" Mk=60 Hint="Закрыть файл"}
		Obj={Mnemo="LnOut" Mk=130 Hint="Записать значение в файл с новой строки"}
		Obj={Mnemo="Out" Mk=160 Hint="Записать значение в файл"}
		Obj={Mnemo="OutLn" Mk=165 Hint="Записать значение в файл и перевести строку"}
	}
  Obj=CommonMkList
}
ElectricFieldManagerMkList{
	Obj={Mnemo="NetCreat" Mk=1 Hint="Генерация вычислительной сетки"}
	Obj={Mnemo="NetDispose" Mk=2 Hint="Сбросить поле ФУ"}
	Obj={Mnemo="NetReset" Mk=3 Hint="Уничтожить поле ФУ"}
	Obj={Mnemo="IndexSet" Mk=4 Hint="Установить индекс сегмента"}
//	Obj={Mnemo="NSet" Mk=5 Hint="Установить ширину вычислительного поля"}
//	Obj={Mnemo="MSet" Mk=10 Hint="Установить высоту вычислительного поля"}
//	Obj={Mnemo="LSet" Mk=15 Hint="Установить глубину вычислительного поля"}
	Obj={Mnemo="EpsSet" Mk=20 Hint="Установить величину относительной диэлектрической проницаемости"}
	Obj={Mnemo="NetSchedulerSet" Mk=25 Hint="Установить ссылку на планировщик для текущего сегмента сетки"}
	Obj={Mnemo="XSet" Mk=100 Hint="Установить координату текущего ФУ вычислительной сетки по x"}
	Obj={Mnemo="YSet" Mk=102 Hint="Установить координату текущего ФУ вычислительной сетки по y"}
	Obj={Mnemo="ZSet" Mk=104 Hint="Установить координату текущего ФУ вычислительной сетки по z"}
	Obj={Mnemo="PotensialPopMk" Mk=40 Hint="Выдать милликоманду с потенциалом текущей точки"}
	Obj={Mnemo="ExPopMk" Mk=45 Hint="Выдать милликоманду с проекцией напряженности текущей точки на ось x "}
	Obj={Mnemo="ExPop" Mk=49 Hint="Выдать проекцию напряженности поля на ось x"}
	Obj={Mnemo="EyPopMk" Mk=50 Hint="Выдать милликоманду с проекцией напряженности текущей точки на ось y"}
	Obj={Mnemo="EyPop" Mk=54 Hint="Выдать проекцию напряженности поля на ось y"}
	Obj={Mnemo="EzPopMk" Mk=55 Hint="Выдать милликоманду с проекцией напряженности текущей точки на ось z"}
	Obj={Mnemo="EzPop" Mk=59 Hint="Выдать проекцию напряженности поля на ось z"}

	Obj={Mnemo="PotensialMatrPopMk" Mk=70 Hint="Выдать матрицу со значениями потенциала"}
	Obj={Mnemo="ExMatrPopMk" Mk=75 Hint="Выдать матрицу со значениями проекции напряженности поля на ось x"}
	Obj={Mnemo="EyMatrPopMk" Mk=80 Hint="Выдать матрицу со значениями проекции напряженности поля на ось y"}
	Obj={Mnemo="EzMatrPopMk" Mk=85 Hint="Выдать матрицу со значениями проекции напряженности поля на ось z"}

	Obj={Mnemo="PotensialMatrAllPopMk" Mk=94 Hint="Выдать общую матрицу со значениями потенциала"}
	Obj={Mnemo="ExMatrAllPopMk" Mk=95 Hint="Выдать общую матрицу со значениями проекции напряженности поля на ось x"}
	Obj={Mnemo="EyMatrAllPopMk" Mk=96 Hint="Выдать общую матрицу со значениями проекции напряженности поля на ось y"}
	Obj={Mnemo="EzMatrAllPopMk" Mk=97 Hint="Выдать общую матрицу со значениями проекции напряженности поля на ось z"}

	Obj={Mnemo="PotensialSet" Mk=110 Hint="Установить потенциал в точку сетки и начать волну вычислений"}
	Obj={Mnemo="FieldManualMode" Mk=120 Hint="Установка режима моделирования для всех узлов вычислительной сетки"}

	Obj={Mnemo="TopLeftPopMk" Mk=125 Hint="Выдать милликоманду с указателем на контекст левого верхнего ФУ вычислительной сетки"}
	Obj={Mnemo="TopRightPopMk" Mk=126 Hint="Выдать милликоманду с указателем на контекст правого верхнего ФУ вычислительной сетки"}
	Obj={Mnemo="BottomLeftPopMk" Mk=127 Hint="Выдать милликоманду с указателем на контекст левого нижнего ФУ вычислительной сетки"}
	Obj={Mnemo="BottomRightPopMk" Mk=128 Hint="Выдать милликоманду с указателем на контекст правого нижнего ФУ вычислительной сетки"}

	Obj={Mnemo="IndexOffsetXSet" Mk=130 Hint="Установить смещение индексов у ФУ вычислительного поля по X"}
	Obj={Mnemo="IndexOffsetYSet" Mk=131 Hint="Установить смещение индексов у ФУ вычислительного поля по Y"}
	Obj={Mnemo="IndexOffsetZSet" Mk=132 Hint=" Установить смещение индексов у ФУ вычислительного поля по Z"}

	Obj={Mnemo="Modeling" Comment Hint="Моделирование вычислительного процесса"
		Obj={Mnemo="CalcTimeSet" Mk=93 Hint="Установить время вычислений на исполнительном ФУ"}
	}

	Obj=CommonMkList
}
CmpFUMkList{
 	Obj={Mnemo="Set" Mk=1 Hint="Установить сравниваемое значение"}
 	Obj={Mnemo="Cmp" Mk=5 Hint="Сравнить нагрузку"}
 	Obj={Mnemo="CmpZero" Mk=10 Hint="Сравнить нагрузку с нулем"}
 	Obj={Mnemo="Pop" Mk=15 Hint="Выдать эталон для сравнения"}
 	Obj={Mnemo="PopMk" Mk=16 Hint="Выдать милликоманду с эталоном для сравнения"}
 	Obj={Mnemo="ValPop" Mk=15 Hint="Выдать последнее сравниваемое значение"}
 	Obj={Mnemo="ValPopMk" Mk=16 Hint="Выдать милликоманду с последним сравниваемым значением"}
 	Obj={Mnemo="ValPop" Mk=20 Hint="Выдать эталонное значение"}
 	Obj={Mnemo="EF" Mk=40 Hint="Выдать флаг эквивалентности"}
 	Obj={Mnemo="NEF" Mk=40 Hint="Выдать флаг неэквивалентности"}
 	Obj={Mnemo="BF" Mk=45 Hint="Выдать флаг больше"}
 	Obj={Mnemo="LF" Mk=50 Hint="Выдать флаг меньше"}
 	Obj={Mnemo="BEF" Mk=55 Hint="Выдать флаг больше или равно"}
 	Obj={Mnemo="LEF" Mk=60 Hint="Выдать флаг меньше или равно"}
 	Obj={Mnemo="ErrF" Mk=70 Hint="Выдать флаг ошибки при вычислениях"}
	Obj={Mnemo="EqProgSet" Mk=100 Hint="Установить ссылку на миллипрограмму, запускаемую в случае установки флага равно"}
	Obj={Mnemo="NonEqProgSet" Mk=125 Hint="Установить ссылку на миллипрограмму, запускаемую в случае установки флага не равно"}
 	Obj={Mnemo="GreaterProgSet" Mk=105 Hint="Установить ссылку на миллипрограмму, запускаемую в случае установки флага больше"}
	Obj={Mnemo="LessProgSet" Mk=110 Hint="Установить ссылку на миллипрограмму, запускаемую в случае установки флага меньше"}
	Obj={Mnemo="GreaterEqProgSet" Mk=115 Hint="Установить ссылку на миллипрограмму, запускаемую в случае установки флага больше равно"}
	Obj={Mnemo="LessEqProgSet" Mk=120 Hint="Установить ссылку на миллипрограмму, запускаемую в случае установки флага меньше равно"}

 	Obj={Mnemo="CaseValSet" Mk=200 Hint="Установить переменную для множественного выбора"}
 	Obj={Mnemo="CaseRangeSet" Mk=201 Hint="Установить интервал (вторую границу) для множественного выбора"}
 	Obj={Mnemo="CaseProgSet" Mk=202 Hint="Установить программу для множественного выбора"}
 	Obj={Mnemo="CaseClear" Mk=203 Hint="Очистить список значений для множественного выбора"}
 	Obj={Mnemo="CaseElseSet" Mk=204 Hint="Установить указатель на программу, выполняемую при несовпадении во множественном выборе"}
 	Obj={Mnemo="Case" Mk=205 Hint="Произвести множественный выбор"}

	Obj=CommonMkList
}
SygnalAnalyserMkList{
 	Obj={Mnemo="MaxSet" Mk=1 Hint="Установить  максимальное значение"}
 	Obj={Mnemo="MinSet" Mk=3 Hint="Установить минимальное значение"}
 	Obj={Mnemo="InversSet" Mk=21 Hint="Установить инверсию сигнала"}
 	Obj={Mnemo="DataSet" Mk=5 Hint="Установить текущее значение"}
 	Obj={Mnemo="DataPop" Mk=7 Hint="Выдать текущее значение входного 	сигнала"}
 	Obj={Mnemo="DataNormalizedPop" Mk=9 Hint="Выдать относительное текущее значение"}
 	Obj={Mnemo="ThresholdIndexSet" Mk=45 Hint="Установить индекс порога"}
 	Obj={Mnemo="ThresholdTypeSet" Mk=29 Hint="Установить тип порога (0 -по абсолютному, 1- по относительному, 2 - по выходному значению)"}
 	Obj={Mnemo="ThresholdSet" Mk=33 Hint="Установить значение порога для реакции"}
 	Obj={Mnemo="ThresholdGreaterProgSet" Mk=37 Hint="Установить миллипрограмму, запускаемую по событию ""больше"" "}
 	Obj={Mnemo="ThresholdLessProgSet" Mk=41 Hint="Установить миллипрограмму, запускаемую по событию ""меньше"" "}
 	Obj={Mnemo="ActionEnabledSet" Mk=59 Hint="Включить/выключить реакции"}
 	Obj={Mnemo="DataProgSet" Mk=100 Hint="Установить ссылку на подпрограмму, запускаемую по приходе данных"}
 	Obj={Mnemo="MaxOutSet" Mk=15 Hint="Установить максимальное значение для выходного сигнала"}
 	Obj={Mnemo="MinOutSet" Mk=17 Hint="Установить минимальное значение для выходного сигнала"}
 	Obj={Mnemo="PointsQuantitySet" Mk=45 Hint="Установить количество точек сигнала для анализа"}
 	Obj={Mnemo="MaxMinPointsQuantitySet" Mk=49 Hint="Установить количество точек для вычисления максимального и минимального значений"}
 	Obj={Mnemo="MaxMinNormalizedPointsQuantitySet" Mk=140 Hint="Установить количество точек для вычисления максимального и минимального значений для относительного значения"}
	Obj=CommonMkList
}
ToolBarMkList{
 	Obj={Mnemo="ParentSet" Mk=1 Hint="Установить  ссылку на родителя"}

 	Obj={Mnemo="VisibleSet" Mk=5 Hint="Установить видимость"}
 	Obj={Mnemo="WidthSet" Mk=10 Hint="Установить ширину компонента"}
 	Obj={Mnemo="HeightSet" Mk=15 Hint="Установить высоту компонента"}
	Obj={Mnemo="EnabledSet" Mk=20 Hint="Установить активность"}
 	Obj={Mnemo="WrapableSet" Mk=25 Hint="Установить перемещение кнопок на след строку"}
 	Obj={Mnemo="ButtonWidthSet" Mk=30 Hint="Установить ширину кнопок"}
	Obj={Mnemo="ButtonHeightSet" Mk=35 Hint="Установить высоту кнопок"}
 	Obj={Mnemo="TransparentSet" Mk=40 Hint="Установить разрешение изменение размера"}
 	Obj={Mnemo="ColorSet" Mk=45 Hint="Установить цвет"}
	Obj=CommonMkList
}
GraphMkList{
	Obj={Mnemo="Reset" Mk=0 Hint="Сброс ФУ"}
	Obj={Mnemo="ParentSet" Mk=800 Hint="Установить родительский графический объект"}
	Obj={Mnemo="Focus" Mk=801 Hint="Дать фокус ввода окну с графиком"}
	Obj={Mnemo="VisibleSet" Mk=4 Hint="Установить свойство видимость"}
	Obj={Mnemo="HeigthSet" Mk=6 Hint="Установить высоту"}
	Obj={Mnemo="WigthSet" Mk=8 Hint="Установить ширину"}
	Obj={Mnemo="TopSet" Mk=10 Hint="Установить верхнюю грань окна"}
	Obj={Mnemo="LeftSet" Mk=12 Hint="Установить координату элемента по горизонтали"}
	Obj={Mnemo="AlegnSet" Mk=14 Hint="Установить свойство Alegh"}
	Obj={Mnemo="ChartPop" Mk=18 Hint="Выдать ссылку на Chart"}
	Obj={Mnemo="ChartPopMk" Mk=22 Hint="Выдать милликоманду со ссылкой на Chart"}
	Obj={Mnemo="SeriaIndexSet" Mk=30 Hint="Установить Индекс диаграммы"}
	Obj={Mnemo="SeriaIndexSet" Mk=34 Hint="Установить Индекс Серии графика"}
	Obj={Mnemo="ChartCreat" Mk=40 Hint="Создать диаграмму и выдать ссылку на неё"}
	Obj={Mnemo="ChartSet" Mk=42 Hint="Задать ссылку на диаграмму"}
	Obj={Mnemo="ChartDel" Mk=43 Hint="Уничтожить диаграмму"}
	Obj={Mnemo="ChartPop" Mk=47 Hint="Выдать ссылку на диаграмму"}
	Obj={Mnemo="ChartPopMk" Mk=49 Hint="Выдать милликоманду со ссылкой на диаграмму"}
	Obj={Mnemo="SeriaLastIndexPop" Mk=54 Hint="Выдать индекс последней созданной серии"}
	Obj={Mnemo="SeriesCountPop" Mk=56 Hint="Выдать количество созданных серий"}
	Obj={Mnemo="SeriaDel" Mk=58 Hint="Удалить серию по индексу"}
	Obj={Mnemo="SeriaColorSet" Mk=60 Hint="Установить Цвет серии"}
	Obj={Mnemo="XStepSet" Mk=95 Hint="Установить шаг для Х"}

	Obj={Mnemo="XSet" Mk=80 Hint="Установить координату X"}
	Obj={Mnemo="YSet" Mk=85 Hint="Установить координату Y и прорисовать точку"}
	Obj={Mnemo="SeriaCreat" Mk=90 Hint="Создать новый график"}

	Obj={Mnemo="TitleSet" Mk=65 Hint="Установить заголовок"}
	Obj={Mnemo="TitleYSet" Mk=70 Hint="Установить метку оси Y"}
	Obj={Mnemo="TitleXSet" Mk=75 Hint="Установить метку оси X"}

	Obj={Mnemo="Focus" Mk=100 Hint="Дать фокус окну с графиком"}
	Obj={Mnemo="Caption" Mk=105 Hint="Установить заголовок индивидуального окна для графика"}
	Obj=CommonMkList
}
SignalGenMkList{
	Obj={Mnemo="ActivSet" Mk=2 Hint="Установить активность "}
	Obj={Mnemo="MKSet" Mk=6 Hint="Установить Милликоманду"}
	Obj={Mnemo="IntervalSet" Mk=10 Hint="Установить интервал"}

	Obj={Mnemo="ModeSet" Mk=14 Hint="Установить Режим"}
	Obj={Mnemo="TimeSet" Mk=18 Hint="Установить номер текущего такта"}
	Obj={Mnemo="TimeOut" Mk=19 Hint="Выдать номер текущего такта"}
	Obj={Mnemo="BusSet" Mk=22 Hint="Установить контекст шины"}
	Obj={Mnemo="ActProgSet" Mk=26 Hint="Установить ссылку на подпрограмму при событии активиции"}
	Obj={Mnemo="Out" Mk=30 Hint="Выдать сгенерированное значение"}

	Obj={Mnemo="TopSet" Mk=40 Hint="Установить Верхний уровень"}
	Obj={Mnemo="DownSet" Mk=44 Hint="Установить нижний предел"}
	Obj={Mnemo="TopLevelDuration" Mk=48 Hint="Длительность верхнего уровня"}
	Obj={Mnemo="DownLevelDuration" Mk=52 Hint="Длительность нижнего уровня"}
	Obj={Mnemo="ForwardFrontSet" Mk=56 Hint="Установить передний фронт"}	
	Obj={Mnemo="BackforwardFrontSet" Mk=60 Hint="Установить задний фронт"}
	Obj={Mnemo="ModeOfSignal" Mk=64 Hint="Режим сигнала"}

	Obj={Mnemo="AmplitudeSet" Mk=200 Hint="Задать амплитуду"}
	Obj={Mnemo="PeriodSet" Mk=204 Hint="Задать длительность периода"}
	Obj={Mnemo="FazaSet" Mk=208 Hint="Сдвиг фазы"}
	Obj={Mnemo="VertShiftSet" Mk=212 Hint="Сдвиг по Y"}

	Obj={Mnemo="MassIntervPointSet" Mk=230 Hint="Установить ссылку на массив с интервалами"}
	Obj={Mnemo="MassIntervPointSetStart" Mk=232 Hint="Установить ссылку на массив с интервалами и запустить генерацию"}
	Obj={Mnemo="IndTimeSet" Mk=236 Hint="Установить индекс такта"}

	Obj=CommonMkList
}
CapsuleViewerMkList{
	Obj={Mnemo="Set" Mk=1 Hint="Установить ссылку на отображаемую капсулу"}
	Obj={Mnemo="Redraw" Mk=6 Hint="Установить ссылку на отображаемую капсулу"}
	Obj={Mnemo="MnemoAtrSet" Mk=2 Hint="Установить ссылка на таблицу мнемоник атрибутов"}
	Obj={Mnemo="ExpendAll" Mk=8 Hint="Развернуть все подписки"}
	Obj={Mnemo="ExpendAllAuto" Mk=9 Hint="Режим автоматического разворачивания всего списка"}
	Obj={Mnemo="ExpendAuto" Mk=11 Hint="Режим автоматического разворачивания списка при наведении на него указателя мыши"}
	Obj={Mnemo="MnemoFUSet" Mk=150 Hint="Установить указатель на таблицу с описаниями ФУ"}
	Obj={Mnemo="FontSizeSet" Mk=820 Hint="Установить величину шрифта"}
	Obj={Mk=350 Mnemo="TextPeaceOutMkSet" Hint="Установить Мк вывода фрагмента текста"}

Obj=WindowMkList
	Obj=CommonMkList
}
StreamFloatAluMkList{
	Obj={Mnemo="OperandsReset" Mk=1 Hint="Сброс операндов"}
	Obj={Mnemo="AutoDisactiveModeSet" Mk=4 Hint="Установить режим автоматической дизактивации ФУ после выдачи результата вычислений"}

	Obj={Mnemo="ReceiverMkSet" Mk=5 Hint="Установить милликоманду для потребителя (автоматически создается новая запись описания потребителя"}
	Obj={Mnemo="ReceiverMkSet Operatins" Comment Hint="Установка миллкоманд для потребителй результата для различных операций"
		Obj={Mnemo="C1_ReceiverMkSet" Mk=105 Hint="Установить милликоманду для потребителя (автоматически создается новая запись описания потребителя"}
		Obj={Mnemo="C2_ReceiverMkSet" Mk=205 Hint="Установить милликоманду для потребителя (автоматически создается новая запись описания потребителя"}
		Obj={Mnemo="C3_ReceiverMkSet" Mk=305 Hint="Установить милликоманду для потребителя (автоматически создается новая запись описания потребителя"}
		Obj={Mnemo="C4_ReceiverMkSet" Mk=405 Hint="Установить милликоманду для потребителя (автоматически создается новая запись описания потребителя"}
	}
	Obj={Mnemo="ReceiverContextSet" Mk=10 Hint="Установить контекст ФУ-потребителя"}
	Obj={Mnemo="ReceiverContextSet Operations" Comment Hint="Установка миллкоманд для потребителй результата для различных операций"
		Obj={Mnemo="C1_ReceiverContextSet" Mk=110 Hint="Установить контекст ФУ-потребителя"}
		Obj={Mnemo="C2_ReceiverContextSet" Mk=210 Hint="Установить контекст ФУ-потребителя"}
		Obj={Mnemo="C3_ReceiverContextSet" Mk=310 Hint="Установить контекст ФУ-потребителя"}
		Obj={Mnemo="C4_ReceiverContextSet" Mk=410 Hint="Установить контекст ФУ-потребителя"}
	}
	Obj={Mnemo="ReceiversReset" Mk=15 Hint="Сбросить список потребителей"}
	Obj={Mnemo="FiringProgSet" Mk=8 Hint="Установить указатель на подпрограмму, запускаемую при активизации вершины (получении результата выполнения операции)"}
	Obj={Mnemo="PopMk" Mk=17 Hint="Выдать результат выполнения операииции"}
	Obj={Mnemo="AngleModeSet" Mk=48 Hint="Установить режим измерения угла (0- радиены, 1 - градусы"}

	Obj={Mnemo="Arifmetical" Comment Hint="Арифметические функции"
		Obj={Mnemo="NOperandsSet" Mk=79 Hint="Установить число операндов для оперций с накоплением"}
		Obj={Mnemo="Sum" Mk=80 Hint="Сложение с накоплением"}
		Obj={Mnemo="Sub" Mk=81 Hint="Вычитание с накоплением"}
		Obj={Mnemo="Mul" Mk=82 Hint="Умножение с накоплением"}
		Obj={Mnemo="Div" Mk=83 Hint="Деление с накоплением"}

		Obj={Mnemo="Sum1" Mk=60 Hint="Первое слагаемое"}
		Obj={Mnemo="Sum2" Mk=61 Hint="Второе слагаемое"}
		Obj={Mnemo="Sub1" Mk=62 Hint="Вычитаемое"}
		Obj={Mnemo="Sub2" Mk=63 Hint="Вычитатель"}
		Obj={Mnemo="Mul1" Mk=64 Hint="Умножаемое"}
		Obj={Mnemo="Mul2" Mk=65 Hint="Умножитель"}
		Obj={Mnemo="Div1" Mk=66 Hint="Делимое"}
		Obj={Mnemo="Div2" Mk=67 Hint="Делитель"}
		Obj={Mnemo="Sqr" Mk=68 Hint="Квадрат"}
		Obj={Mnemo="Sqrt" Mk=69 Hint="Квадратный корень"}
	 	Obj={Mnemo="1 operation" Comment Hint="Первая оперция"
			Obj={Mnemo="C1_NOperandsSet" Mk=79 Hint="Установить число операндов для оперций с накоплением"}
			Obj={Mnemo="C1_Sum" Mk=180 Hint="Сложение с накоплением"}
			Obj={Mnemo="C1_Sub" Mk=181 Hint="Вычитание с накоплением"}
			Obj={Mnemo="C1_Mul" Mk=182 Hint="Умножение с накоплением"}
			Obj={Mnemo="C1_Div" Mk=183 Hint="Деление с накоплением"}

			Obj={Mnemo="C1_Sum1" Mk=160 Hint="Первое слагаемое"}
			Obj={Mnemo="C1_Sum2" Mk=161 Hint="Второе слагаемое"}
			Obj={Mnemo="C1_Sub1" Mk=162 Hint="Вычитаемое"}
			Obj={Mnemo="C1_Sub2" Mk=163 Hint="Вычитатель"}
			Obj={Mnemo="C1_Mul1" Mk=164 Hint="Умножаемое"}
			Obj={Mnemo="C1_Mul2" Mk=165 Hint="Умножитель"}
			Obj={Mnemo="C1_Div1" Mk=166 Hint="Делимое"}
			Obj={Mnemo="C1_Div2" Mk=167 Hint="Делитель"}
			Obj={Mnemo="C1_Sqr" Mk=168 Hint="Квадрат"}
			Obj={Mnemo="C1_Sqrt" Mk=169 Hint="Квадратн корень"}
		}
	 	Obj={Mnemo="2 operation" Comment Hint="Первая оперция"
			Obj={Mnemo="C2_NOperandsSet" Mk=279 Hint="Установить число операндов для оперций с накоплением"}
			Obj={Mnemo="C2_Sum" Mk=280 Hint="Сложение с накоплением"}
			Obj={Mnemo="C2_Sub" Mk=281 Hint="Вычитание с накоплением"}
			Obj={Mnemo="C2_Mul" Mk=282 Hint="Умножение с накоплением"}
			Obj={Mnemo="C2_Div" Mk=283 Hint="Деление с накоплением"}

			Obj={Mnemo="C2_Sum1" Mk=260 Hint="Первое слагаемое"}
			Obj={Mnemo="C2_Sum2" Mk=261 Hint="Второе слагаемое"}
			Obj={Mnemo="C2_Sub1" Mk=262 Hint="Вычитаемое"}
			Obj={Mnemo="C2_Sub2" Mk=263 Hint="Вычитатель"}
			Obj={Mnemo="C2_Mul1" Mk=264 Hint="Умножаемое"}
			Obj={Mnemo="C2_Mul2" Mk=265 Hint="Умножитель"}
			Obj={Mnemo="C2_Div1" Mk=266 Hint="Делимое"}
			Obj={Mnemo="C2_Div2" Mk=267 Hint="Делитель"}
			Obj={Mnemo="C2_Sqr" Mk=268 Hint="Квадрат"}
			Obj={Mnemo="C2_Sqrt" Mk=269 Hint="Квадратн корень"}
		}
	 	Obj={Mnemo="3 operation" Comment Hint="Первая оперция"
			Obj={Mnemo="C3_NOperandsSet" Mk=379 Hint="Установить число операндов для оперций с накоплением"}
			Obj={Mnemo="C3_Sum" Mk=380 Hint="Сложение с накоплением"}
			Obj={Mnemo="C3_Sub" Mk=381 Hint="Вычитание с накоплением"}
			Obj={Mnemo="C3_Mul" Mk=382 Hint="Умножение с накоплением"}
			Obj={Mnemo="C3_Div" Mk=383 Hint="Деление с накоплением"}

			Obj={Mnemo="C3_Sum1" Mk=360 Hint="Первое слагаемое"}
			Obj={Mnemo="C3_Sum2" Mk=361 Hint="Второе слагаемое"}
			Obj={Mnemo="C3_Sub1" Mk=362 Hint="Вычитаемое"}
			Obj={Mnemo="C3_Sub2" Mk=363 Hint="Вычитатель"}
			Obj={Mnemo="C3_Mul1" Mk=364 Hint="Умножаемое"}
			Obj={Mnemo="C3_Mul2" Mk=365 Hint="Умножитель"}
			Obj={Mnemo="C3_Div1" Mk=366 Hint="Делимое"}
			Obj={Mnemo="C3_Div2" Mk=367 Hint="Делитель"}
			Obj={Mnemo="C3_Sqr" Mk=368 Hint="Квадрат"}
			Obj={Mnemo="C3_Sqrt" Mk=369 Hint="Квадратн корень"}
		}
	 	Obj={Mnemo="4 operation" Comment Hint="Первая оперция"
			Obj={Mnemo="C4_NOperandsSet" Mk=479 Hint="Установить число операндов для оперций с накоплением"}
			Obj={Mnemo="C4_Sum" Mk=480 Hint="Сложение с накоплением"}
			Obj={Mnemo="C4_Sub" Mk=481 Hint="Вычитание с накоплением"}
			Obj={Mnemo="C4_Mul" Mk=482 Hint="Умножение с накоплением"}
			Obj={Mnemo="C4_Div" Mk=483 Hint="Деление с накоплением"}

			Obj={Mnemo="C4_Sum1" Mk=460 Hint="Первое слагаемое"}
			Obj={Mnemo="C4_Sum2" Mk=461 Hint="Второе слагаемое"}
			Obj={Mnemo="C4_Sub1" Mk=462 Hint="Вычитаемое"}
			Obj={Mnemo="C4_Sub2" Mk=463 Hint="Вычитатель"}
			Obj={Mnemo="C4_Mul1" Mk=464 Hint="Умножаемое"}
			Obj={Mnemo="C4_Mul2" Mk=465 Hint="Умножитель"}
			Obj={Mnemo="C4_Div1" Mk=466 Hint="Делимое"}
			Obj={Mnemo="C4_Div2" Mk=467 Hint="Делитель"}
			Obj={Mnemo="C4_Sqr" Mk=468 Hint="Квадрат"}
			Obj={Mnemo="C4_Sqrt" Mk=469 Hint="Квадратн корень"}
		}
	}
	Obj={Mnemo="Trigonometrical" Comment Hint="Тригонометрические функции"
		Obj={Mnemo="Sin" Mk=70 Hint="Синус"}
		Obj={Mnemo="Cos" Mk=71 Hint="Косинус"}
		Obj={Mnemo="Tg" Mk=72 Hint="Тангенс"}
		Obj={Mnemo="Ctg" Mk=73 Hint="Котангенс"}
		Obj={Mnemo="Asin" Mk=74 Hint="Арксинус"}
		Obj={Mnemo="Acos" Mk=75 Hint="Арккосинус"}
		Obj={Mnemo="Atg" Mk=76 Hint="Арктангенс"}
		Obj={Mnemo="1 operation" Comment Hint="Первая оперция"
			Obj={Mnemo="C1_Sin" Mk=170 Hint="Синус"}
			Obj={Mnemo="C1_Cos" Mk=171 Hint="Косинус"}
			Obj={Mnemo="C1_Tg" Mk=172 Hint="Тангенс"}
			Obj={Mnemo="C1_Ctg" Mk=173 Hint="Котангенс"}
			Obj={Mnemo="C1_Asin" Mk=174 Hint="Арксинус"}
			Obj={Mnemo="C1_Acos" Mk=175 Hint="Арккосинус"}
			Obj={Mnemo="C1_Atg" Mk=176 Hint="Арктангенс"}
		}
		Obj={Mnemo="2 operation" Comment Hint="Первая оперция"
			Obj={Mnemo="C2_Sin" Mk=270 Hint="Синус"}
			Obj={Mnemo="C2_Cos" Mk=271 Hint="Косинус"}
			Obj={Mnemo="C2_Tg" Mk=272 Hint="Тангенс"}
			Obj={Mnemo="C2_Ctg" Mk=273 Hint="Котангенс"}
			Obj={Mnemo="C2_Asin" Mk=274 Hint="Арксинус"}
			Obj={Mnemo="C2_Acos" Mk=275 Hint="Арккосинус"}
			Obj={Mnemo="C2_Atg" Mk=276 Hint="Арктангенс"}
		}
		Obj={Mnemo="3 operation" Comment Hint="Первая оперция"
			Obj={Mnemo="C3_Sin" Mk=370 Hint="Синус"}
			Obj={Mnemo="C3_Cos" Mk=371 Hint="Косинус"}
			Obj={Mnemo="C3_Tg" Mk=372 Hint="Тангенс"}
			Obj={Mnemo="C3_Ctg" Mk=373 Hint="Котангенс"}
			Obj={Mnemo="C3_Asin" Mk=374 Hint="Арксинус"}
			Obj={Mnemo="C3_Acos" Mk=375 Hint="Арккосинус"}
			Obj={Mnemo="C3_Atg" Mk=376 Hint="Арктангенс"}
		}
		Obj={Mnemo="4 operation" Comment Hint="Первая оперция"
			Obj={Mnemo="C4_Sin" Mk=470 Hint="Синус"}
			Obj={Mnemo="C4_Cos" Mk=471 Hint="Косинус"}
			Obj={Mnemo="C4_Tg" Mk=472 Hint="Тангенс"}
			Obj={Mnemo="C4_Ctg" Mk=473 Hint="Котангенс"}
			Obj={Mnemo="C4_Asin" Mk=474 Hint="Арксинус"}
			Obj={Mnemo="C4_Acos" Mk=475 Hint="Арккосинус"}
			Obj={Mnemo="C4_Atg" Mk=476 Hint="Арктангенс"}
		}
	}
	Obj={Mnemo="Modeling" Comment Hint="Настройка параметров ФУ для моделирования"
		Obj={Mnemo="RegLoadTimeSet" Mk=49 Hint="Установить время записи во внутрений регистр"}
		Obj={Mnemo="Arifmetical" Comment Hint="Арифметические функции"
			Obj={Mnemo="SumTimeSet" Mk=20 Hint="Установить время суммирования"}
			Obj={Mnemo="SubTimeSet" Mk=22 Hint="Установить время вычитания"}
			Obj={Mnemo="MulTimeSet" Mk=24 Hint="Установить время умножения"}
			Obj={Mnemo="DivTimeSet" Mk=26 Hint="Установить время деления"}
			Obj={Mnemo="SqrTimeSet" Mk=28 Hint="Установить время вычисления квадрата"}
			Obj={Mnemo="SqrtTimeSet" Mk=30 Hint="Установить время вычисления квадратного корня"}
		}
		Obj={Mnemo="Trigonometrical" Comment Hint="Тригонометрические функции"
			Obj={Mnemo="SinTimeSet" Mk=32 Hint="Установить время вычисления синуса"}
			Obj={Mnemo="CosTimeSet" Mk=34 Hint="Установить время вычисления косинуса"}
			Obj={Mnemo="TgTimeSet" Mk=36 Hint="Установить время вычисления тангенса"}
			Obj={Mnemo="CtgTimeSet" Mk=38 Hint="Установить время ычисления котангенса"}
			Obj={Mnemo="AsinTimeSet" Mk=40 Hint="Установить время вычисления арксинуса"}
			Obj={Mnemo="AcosTimeSet" Mk=42 Hint="Установить время вычисления арккосинуса"}
			Obj={Mnemo="AtgTimeSet" Mk=44 Hint="Установить время вычисления квадратного арктангенса"}
		}
	}
	Obj=CommonMkList
}
GantMkList{
	Obj={Mnemo="CurrentTimeRefSet" Mk=1 Hint="Установить ссылку ячейку памяти, где хранится текущее модельное время"}
	Obj={Mnemo="EventSet" Mk=50 Hint="Принять сведения о событии"}
	Obj={Mnemo="OperandsSet" Mk=51 Hint="Передать операнды для ФУ"}
	Obj={Mnemo="Draw" Mk=55 Hint="Вывести график"}

	Obj={Mnemo="TimeAtrSet" Mk=40 Hint="Установить атрибут временнОй отметки"}
	Obj={Mnemo="CountAtrSet" Mk=42 Hint="Установить атрибут счетчика"}

	Obj=WindowMkList;
	Obj=CommonMkList
}
ArrayAluMkList{
	Obj={Mnemo="Array1Create" Mk=1 Hint="Создать и инициализировать первый массив (если первый массив создан, то производится его инициализация)"}
	Obj={Mnemo="Array1Ini" Mk=14 Hint="Инициализировать первый массив (если первый массив создан, то производится его инициализация)"}
	Obj={Mnemo="Array1Del" Mk=11 Hint="Удалить первый массив"}
	Obj={Mnemo="Array2Del" Mk=12 Hint="Удалить второй массив"}
	Obj={Mnemo="ArrayRezDel" Mk=13 Hint="Удалить результирующий массив"}
	Obj={Mnemo="Array pointer" Hint="Операции с указателями на массивы" Comment
		Obj={Mnemo="Array1Set" Mk=2 Hint="Установить ссылку на первый массив"}
		Obj={Mnemo="Array2Set" Mk=3 Hint="Установить ссылку на второй массив"}
		Obj={Mnemo="ArrayRezSet" Mk=4 Hint="Установить ссылку на результирующий массив"}
		Obj={Mnemo="Array1Pop" Mk=5 Hint="Выдать ссылку на первый массив"}
		Obj={Mnemo="Array2Pop" Mk=6 Hint="Выдать ссылку на второй массив"}
		Obj={Mnemo="ArrayRezPop" Mk=7 Hint="Выдать ссылку на результирующий массив"}
		Obj={Mnemo="Array1PopMk" Mk=8 Hint="Выдать милликоманду со ссылкой на первый массив"}
		Obj={Mnemo="Array2PopMk" Mk=9 Hint="Выдать милликоманду со ссылкой на второй массив"}
		Obj={Mnemo="ArrayRezPopMk" Mk=10 Hint="Выдать милликоманду со ссылкой на результирующий массив"}
	}
	Obj={Mnemo="Index work" Hint="Операции с индексами ячейки массива" Comment
		Obj={Mnemo="Dim0Set" Mk=60 Hint="Установить 1-ю координату ячейки массива"}
		Obj={Mnemo="Dim1Set" Mk=61 Hint="Установить 2-ю координату ячейки массива"}
		Obj={Mnemo="Dim2Set" Mk=62 Hint="Установить 3-ю координату ячейки массива"}
		Obj={Mnemo="Dim3Set" Mk=63 Hint="Установить 4-ю координату ячейки массива"}
		Obj={Mnemo="Dim4Set" Mk=64 Hint="Установить 5-ю координату ячейки массива"}
		Obj={Mnemo="Dim5Set" Mk=65 Hint="Установить 6-ю координату ячейки массива"}
		Obj={Mnemo="Dim6Set" Mk=66 Hint="Установить 7-ю координату ячейки массива"}
		Obj={Mnemo="Dim7Set" Mk=67 Hint="Установить 8-ю координату ячейки массива"}
	}
	Obj={Mnemo="Cell work" Hint="Операции с ячейкой массива" Comment
		Obj={Mnemo="IndexModeSet" Mk=19 Hint="Уставовить режим индекса (0 - обычный режим, 1 - со смещением индекса после записи/чтени ячейки)"}
		Obj={Mnemo="CellSet" Mk=20 Hint="Установить значение ячейки первого массива"}
		Obj={Mnemo="CellAdd" Mk=21 Hint="Прибавить к значению ячейки первого массива"}
		Obj={Mnemo="CellSub" Mk=22 Hint="Вычесть из значения ячейки первого массива"}
		Obj={Mnemo="CellMul" Mk=23 Hint="Умножить на значение ячейки первого массива"}
		Obj={Mnemo="CellDiv" Mk=24 Hint="Разделить значение ячейки первого массива"}
		Obj={Mnemo="Cell2Set" Mk=25 Hint="Установить значение ячейки второго массива"}
		Obj={Mnemo="Cell2Add" Mk=26 Hint="Прибавить к значению ячейки второго массива"}
		Obj={Mnemo="Cell2Add" Mk=27 Hint="Вычестьиз значения ячейки второго массива"}
		Obj={Mnemo="Cell2Add" Mk=28 Hint="Умножить значение ячейки второго массива"}
		Obj={Mnemo="Cell2Add" Mk=29 Hint="Разделить значение из ячейки второго массива"}
	}
	Obj={Mnemo="Matrix work" Hint="Сложение, вычитание, умножение, деление матриц массивами" Comment
		Obj={Mnemo="Add" Mk=90 Hint="Сложить матрицы"}
		Obj={Mnemo="Sub" Mk=91 Hint="Вычесть матрицы"}
		Obj={Mnemo="Mul" Mk=92 Hint="Умножить матрицы"}
		Obj={Mnemo="Div" Mk=93 Hint="Делить матрицы"}
	}
	Obj={Mnemo="Matirx const work" Hint="Сложение, вычитание, умножение, деление на константу" Comment
		Obj={Mnemo="AddConst" Mk=95 Hint="Прибавить константу к элементам массива"}
		Obj={Mnemo="SubConst" Mk=96 Hint="Вычесть константу из элементов массива"}
		Obj={Mnemo="MulConst" Mk=97 Hint="Умножить на константу элементы массива"}
		Obj={Mnemo="DivConst" Mk=98 Hint="Делить на константу элементы массива"}
	}
	Obj=CommonMkList
}
MessageBoxMkList{
	Obj={Mnemo="MessageShow" Mk=1 Hint="Показать сообщение (в нагрузке сообщение)"}
	Obj={Mnemo="MessageSet" Mk=5 Hint="Установить сообщение"}
	Obj={Mnemo="CaptionSet" Mk=6 Hint="Установить заголовок"}
	Obj={Mnemo="TypeSet" Mk=7 Hint="Установить тип сообщения"}
	Obj={Mnemo="AbortProgSet" Mk=20 Hint="Установить подпрограмму по нажатию кнопки Abort"}
	Obj={Mnemo="CanselProgSet" Mk=21 Hint="Установить подпрограмму по нажатию кнопки Cansel"}
	Obj={Mnemo="IgnoreProgSet" Mk=22 Hint="Установить подпрограмму по нажатию кнопки Ignore"}
	Obj={Mnemo="NoProgSet" Mk=23 Hint="Установить подпрограмму по нажатию кнопки No"}
	Obj={Mnemo="OkProgSet" Mk=24 Hint="Установить подпрограмму по нажатию кнопки Ok"}
	Obj={Mnemo="RetryProgSet" Mk=25 Hint="Установить подпрограмму по нажатию кнопки Retry"}
	Obj={Mnemo="YesProgSet" Mk=26 Hint="Установить подпрограмму по нажатию кнопки Yes"}
	Obj=CommonMkList
}
TextBoxMkList{
	Obj={Mnemo="Input" Mk=1 Hint="Ввести текстовую строку"}
	Obj={Mnemo="EnterProgSet" Mk=5 Hint="Установить ссылку на миллипограмму, вызываемую по вводу текста"}
	Obj={Mnemo="EnterEmptyProg" Mk=6 Hint="Установить ссылку на миллипограмму, вызываемую по вводу текста"}
	Obj={Mnemo="ReceiverMkSet" Mk=10 Hint="Установить милликоманду, прикрепляемую к введенной строке"}
	Obj={Mnemo="ReceiverMkClear" Mk=11 Hint="Очистить список милликоманд для получателей введенной строки"}
	Obj=CommonMkList
}

StrindGridMkList{
//	Obj={Mnemo="ParentSet" Mk=1 Hint="Установить родителя"}
	Obj={Mnemo="MatrOut" Mk=350 Hint="Вывести матрицу"}
	Obj={Mnemo="DigitsSet" Mk=200 Hint="Установить число десятичных знаков при выводе дробного числа"}
	Obj={Mnemo="PrecisionSet" Mk=201 Hint="Установить число десятичных знаков после зяпятой при выводе дробного числа"}
//	Obj={Mnemo= Mk= Hint=""}
	Obj=WindowMkList
	Obj=CommonMkList
}

//	 Obj={Mnemo= Mk="" Hint=""}

	\\ Заполнение таблиц милликоманд для набора типов ФУ
Bus={FuTypeIndexes.RowSet=0 FuTypeMkTrees.RowSet=0 FuTypeMkTrees.IndexModeSet=2
	FuTypeIndexes.CellSet=0 FuTypeMkTrees.CellSet=ZeroFUMkList
	FuTypeIndexes.CellSet=1 FuTypeMkTrees.CellSet=BusMkList!
	FuTypeIndexes.CellSet=2 FuTypeMkTrees.CellSet=ZeroFUMkList
	FuTypeIndexes.CellSet=3 FuTypeMkTrees.CellSet=OutLogConMkList!
	FuTypeIndexes.CellSet=4 FuTypeMkTrees.CellSet=AutomatMkList!
	FuTypeIndexes.CellSet=5 FuTypeMkTrees.CellSet=MemManagerMkList!
	FuTypeIndexes.CellSet=6 FuTypeMkTrees.CellSet=CounterMkList!
	FuTypeIndexes.CellSet=7 FuTypeMkTrees.CellSet=ZeroFUMkList
	FuTypeIndexes.CellSet=8 FuTypeMkTrees.CellSet=FindMkList!
	FuTypeIndexes.CellSet=9 FuTypeMkTrees.CellSet=ListMkList!
	FuTypeIndexes.CellSet=10 FuTypeMkTrees.CellSet=BoolALUMkList!
	FuTypeIndexes.CellSet=11 FuTypeMkTrees.CellSet=FloatALUMkList!
	FuTypeIndexes.CellSet=12 FuTypeMkTrees.CellSet=IntALUMkList!
	FuTypeIndexes.CellSet=13 FuTypeMkTrees.CellSet= VarManagerMkList!
	FuTypeIndexes.CellSet=14 FuTypeMkTrees.CellSet=TimerMkList!
	FuTypeIndexes.CellSet=15 FuTypeMkTrees.CellSet=FormMkList!
	FuTypeIndexes.CellSet=16 FuTypeMkTrees.CellSet=PointMatrixMkList!
	FuTypeIndexes.CellSet=17 FuTypeMkTrees.CellSet=ZeroFUMkList
	FuTypeIndexes.CellSet=18 FuTypeMkTrees.CellSet=ZeroFUMkList
	FuTypeIndexes.CellSet=19 FuTypeMkTrees.CellSet=ZeroFUMkList
	FuTypeIndexes.CellSet=20 FuTypeMkTrees.CellSet=ZeroFUMkList
	FuTypeIndexes.CellSet=21 FuTypeMkTrees.CellSet=MatrixMkList!
	FuTypeIndexes.CellSet=22 FuTypeMkTrees.CellSet=ZeroFUMkList
	FuTypeIndexes.CellSet=23 FuTypeMkTrees.CellSet=ZeroFUMkList
	FuTypeIndexes.CellSet=24 FuTypeMkTrees.CellSet=OpenGLМкList!
	FuTypeIndexes.CellSet=25 FuTypeMkTrees.CellSet=SignalGenMkList!
	FuTypeIndexes.CellSet=26 FuTypeMkTrees.CellSet=ZeroFUMkList
	FuTypeIndexes.CellSet=27 FuTypeMkTrees.CellSet=ZeroFUMkList
	FuTypeIndexes.CellSet=28 FuTypeMkTrees.CellSet=ZeroFUMkList
	FuTypeIndexes.CellSet=29 FuTypeMkTrees.CellSet=SygnalAnalyserMkList!
	FuTypeIndexes.CellSet=30 FuTypeMkTrees.CellSet=ZeroFUMkList
	FuTypeIndexes.CellSet=31 FuTypeMkTrees.CellSet=InterpreterMkList!
	FuTypeIndexes.CellSet=32 FuTypeMkTrees.CellSet=ChartMkList!
	FuTypeIndexes.CellSet=33 FuTypeMkTrees.CellSet=PlotMkList!
	FuTypeIndexes.CellSet=34 FuTypeMkTrees.CellSet=ZeroFUMkList
	FuTypeIndexes.CellSet=35 FuTypeMkTrees.CellSet=ZeroFUMkList
	FuTypeIndexes.CellSet=36 FuTypeMkTrees.CellSet=ZeroFUMkList
	FuTypeIndexes.CellSet=37 FuTypeMkTrees.CellSet=ZeroFUMkList
	FuTypeIndexes.CellSet=38 FuTypeMkTrees.CellSet=ZeroFUMkList
	FuTypeIndexes.CellSet=39 FuTypeMkTrees.CellSet=GatewayFileMkList!
	FuTypeIndexes.CellSet=40 FuTypeMkTrees.CellSet=OATreeViewMkList!
	FuTypeIndexes.CellSet=41 FuTypeMkTrees.CellSet=ZeroFUMkList
	FuTypeIndexes.CellSet=42 FuTypeMkTrees.CellSet=ZeroFUMkList
	FuTypeIndexes.CellSet=43 FuTypeMkTrees.CellSet=StrindGridMkList!
	FuTypeIndexes.CellSet=44 FuTypeMkTrees.CellSet=ZeroFUMkList
	FuTypeIndexes.CellSet=45 FuTypeMkTrees.CellSet=ZeroFUMkList
	FuTypeIndexes.CellSet=46 FuTypeMkTrees.CellSet=ZeroFUMkList
	FuTypeIndexes.CellSet=47 FuTypeMkTrees.CellSet=ZeroFUMkList
	FuTypeIndexes.CellSet=48 FuTypeMkTrees.CellSet=MainMenuMkList!
	FuTypeIndexes.CellSet=49 FuTypeMkTrees.CellSet=ZeroFUMkList
	FuTypeIndexes.CellSet=50 FuTypeMkTrees.CellSet=ZeroFUMkList
	FuTypeIndexes.CellSet=51 FuTypeMkTrees.CellSet=ZeroFUMkList
	FuTypeIndexes.CellSet=52 FuTypeMkTrees.CellSet=ZeroFUMkList
	FuTypeIndexes.CellSet=53 FuTypeMkTrees.CellSet=SringsSourceMkList!
	FuTypeIndexes.CellSet=54 FuTypeMkTrees.CellSet=LexicaFUMkList!
	FuTypeIndexes.CellSet=55 FuTypeMkTrees.CellSet=ZeroFUMkList
	FuTypeIndexes.CellSet=56 FuTypeMkTrees.CellSet=OATreeAnalyzerMkList!
	FuTypeIndexes.CellSet=57 FuTypeMkTrees.CellSet=ConsoleMkList!
	FuTypeIndexes.CellSet=58 FuTypeMkTrees.CellSet=ListBoxMkList!
	FuTypeIndexes.CellSet=59 FuTypeMkTrees.CellSet=SchedulerMkList!
	FuTypeIndexes.CellSet=60 FuTypeMkTrees.CellSet=ProgExecMkList!
	FuTypeIndexes.CellSet=61 FuTypeMkTrees.CellSet=IsingFUMkList!
	FuTypeIndexes.CellSet=62 FuTypeMkTrees.CellSet=RegexpFUMkList!
	FuTypeIndexes.CellSet=63 FuTypeMkTrees.CellSet=EventserMkList!
	FuTypeIndexes.CellSet=64 FuTypeMkTrees.CellSet=IsingManagerMkList!
	FuTypeIndexes.CellSet=65 FuTypeMkTrees.CellSet=IsingTopManagerMkList!
	FuTypeIndexes.CellSet=66 FuTypeMkTrees.CellSet=RegexpManagerMkList!
	FuTypeIndexes.CellSet=67 FuTypeMkTrees.CellSet=RegexpCollectorMkList!
	FuTypeIndexes.CellSet=68 FuTypeMkTrees.CellSet=StreamFloatAluMkList!
	FuTypeIndexes.CellSet=69 FuTypeMkTrees.CellSet=Graph500EdgeGenMkList!
	FuTypeIndexes.CellSet=70 FuTypeMkTrees.CellSet=Graph500CollectorMkList!
	FuTypeIndexes.CellSet=71 FuTypeMkTrees.CellSet=ElectricFieldManagerMkList!
	FuTypeIndexes.CellSet=72 FuTypeMkTrees.CellSet=CmpFUMkList!
	FuTypeIndexes.CellSet=73 FuTypeMkTrees.CellSet=ToolBarMkList!
	FuTypeIndexes.CellSet=74 FuTypeMkTrees.CellSet=GraphMkList!
	FuTypeIndexes.CellSet=75 FuTypeMkTrees.CellSet=CapsuleViewerMkList!
	FuTypeIndexes.CellSet=76 FuTypeMkTrees.CellSet=LoadMatrixMkList!
	FuTypeIndexes.CellSet=77 FuTypeMkTrees.CellSet=GantMkList!
	FuTypeIndexes.CellSet=78 FuTypeMkTrees.CellSet=ArrayAluMkList!
	FuTypeIndexes.CellSet=79 FuTypeMkTrees.CellSet=MessageBoxMkList!
	FuTypeIndexes.CellSet=80 FuTypeMkTrees.CellSet=TextBoxMkList!

\\ StrMkList
	FuTypeIndexes.CellSet=81 FuTypeMkTrees.CellSet=
{
	Obj={Mk=1 Mnemo="Set" Hint="Установить обрабатываемую строку"}
	Obj={Mk=2 Mnemo="Pop" Hint="Выдать обрабатываемую строку"}
	Obj={Mk=3 Mnemo="PopMk" Hint="Выдать милликоманду с обрабатываемой строкой"}
	Obj={Mk=4 Mnemo="PointSet" Hint="Установить указатель на обрабатываемую строку"}
	Obj={Mk=5 Mnemo="PointPop" Hint="Выдать ссылку на обрабатываемую строку"}

	Obj={Mk=10 Mnemo="SubSet" Hint="Установить подстроку"}
	Obj={Mk=11 Mnemo="SubPop" Hint="Выдать подстроку"}
	Obj={Mk=12 Mnemo="SubPopMk" Hint="Выдать милликоманду с подстрокой"}

	Obj={Mk=15 Mnemo="ConcatLeft" Hint="Конкатенация слева (если в нагрузке nil, то происходит конкатенация подстроки)"}
	Obj={Mk=16 Mnemo="ConcatRight" Hint="Конкатенация справа (если в нагрузке nil, то происходит конкатенация подстроки) "}
	Obj={Mk=17 Mnemo="PosSet" Hint="Установить номер символа, с которого начинается поиск подстроки"}
	Obj={Mk=18 Mnemo="SubLeft" Hint="Выделить подстроку слева (в нагрузке количество выделяемых символов)"}
	Obj={Mk=35 Mnemo="SubRight" Hint="Вырезать подстроку справа (в нагрузке количество выделяемых символов)"}
	Obj={Mk=19 Mnemo="SubLeftCut" Hint="Вырезать подстроку слева (в нагрузке количество выделяемых символов)"}
	Obj={Mk=20 Mnemo="SubRightCut" Hint="Вырезать подстроку справа (в нагрузке количество выделяемых символов)"}
	Obj={Mk=22 Mnemo="Sub" Hint="Выделить подстроку (в нагрузке количество выделяемых символов)"}
	Obj={Mk=23 Mnemo="SubCut" Hint="Вырезать подстроку (в нагрузке количество выделяемых символов)"}
	Obj={Mk=24 Mnemo="SubSearch" Hint="Найти подстроку"}
	Obj={Mk=25 Mnemo="SubSearchCut" Hint="Найти подстроку и вырезать её"}
	Obj={Mk=21 Mnemo="SubPosSet" Hint="Установить начало диапазона для выделения подстроки"}
	Obj={Mk=26 Mnemo="SubPosPop" Hint="Выдать позицию, с которой начинается найденная подстрока"}
	Obj={Mk=27 Mnemo="SubPosPopMk" Hint="Выдать миддикоманду с позицией, с которой начинается найденная подстрока"}
	Obj={Mk=28 Mnemo="Flag" Hint="Выдать флаг сравнения строк"}
	Obj={Mk=29 Mnemo="FlagMk" Hint="Выдать милликоманду с флагом сравнения строк"}
	Obj={Mk=30 Mnemo="Cmp" Hint="Сравнить строки"}
	Obj={Mk=31 Mnemo="CmpRight" Hint="Поиск подстроки справа"}
	Obj={Mk=32 Mnemo="CmpRightCut" Hint="Поиск подстроки справа и удаление подстраки в случае удачного поиска"}
	Obj={Mk=33 Mnemo="CmpLeft" Hint="Поиск подстроки слева"}
	Obj={Mk=34 Mnemo="CmpLeftCut" Hint="Поиск подстроки слева и удаление подстраки в случае удачного поиска"}

	Obj={Mk=40 Mnemo="LengthPop" Hint="Выдать длину строки"}
	Obj={Mk=41 Mnemo="LengthPopMk" Hint="Выдать милликоманду с длиной строки"}
	Obj={Mk=42 Mnemo="SubLengthPop" Hint="Выдать длину подстроки"}
	Obj={Mk=43 Mnemo="SubLengthPopMk" Hint="Выдать милликоманду с длиной подстроки"}
	Obj={Mnemo="Prog exec and switch" Hint="Запуск программ по условиям и ветвление программы" Comment
		Obj={Mk=50 Mnemo="EmptyExec" Hint="Запустить подпрограмму, если текущая строка является пустой"}
		Obj={Mk=51 Mnemo="NotEmptyExec" Hint="Запустить подпрограмму, если текущая строка не является пустой"}
		Obj={Mk=52 Mnemo="SubEmptyExec" Hint="Запустить подпрограмму, если текущая подстрока является пустой"}
		Obj={Mk=53 Mnemo="SubNotEmptyExec" Hint="Запустить подпрограмму, если текущая подстрока не является пустой"}
		Obj={Mk=54 Mnemo="SuccessProgExec" Hint="Запустить программу, если сравнение строк было удачным"}
		Obj={Mk=55 Mnemo="FailProgExec" Hint="Запустить программу, если сравнение строк было неудачным"}
		Obj={Mk=56 Mnemo="SuccessProgSet" Hint="Установить программу, запускаемую, если сравнение строк было удачным"}
		Obj={Mk=57 Mnemo="FailProgSetFailProgSet" Hint="Установить программу, запускаемую, если сравнение строк было неудачным"}
	}

	Obj=CommonMkList
}
\\ TemperatManagerMkList
	FuTypeIndexes.CellSet=82 FuTypeMkTrees.CellSet=
{
	Obj={Mk=10 Mnemo="Index1Set" Hint="Устанвить первый индекс текущего ФУ в поле"}
	Obj={Mk=11 Mnemo="Index2Set" Hint="Устанвить второй индекс текущего ФУ в поле"}
	Obj={Mk=12 Mnemo="Index3Set" Hint="Устанвить третий индекс текущего ФУ в поле"}
	Obj={Mk=20 Mnemo="TemperatEnvironmentSet" Hint="Установить температуру окружающей среды"}
	Obj={Mk=21 Mnemo="TemperatConstSet" Hint="Установить постоянную температуру в точке"}
	Obj={Mk=30 Mnemo="Create" Hint="Создать вычислительное поле"}
	Obj={Mk=40 Mnemo="TopTemperatSet" Hint="Установить температуру на верхней границе поля"}
	Obj={Mk=41 Mnemo="LeftTemperatSet" Hint="Установить температуру на левой границе поля"}
	Obj={Mk=42 Mnemo="BottomTemperatSet" Hint="Установить температуру на нижней границе поля"}
	Obj={Mk=43 Mnemo="RightTemperatSet" Hint="Установить температуру на правой границе поля"}
	Obj={Mk=44 Mnemo="FrontTemperatSet" Hint="Установить температуру на передней границе поля"}
	Obj={Mk=45 Mnemo="BackTemperatSet" Hint="Установить температуру на задней границе поля"}
	Obj={Mk=50 Mnemo="WallsTemperatSet" Hint="Установить температуру на всех границах поля"}
	Obj={Mk=55 Mnemo="MatrPop" Hint="Записать результат вычислений с ФУ в матрицу и выдать указатель на неё"}
	Obj={Mk=56 Mnemo="MatrPopMk" Hint="Записать результат вычислений с ФУ в матрицу и выдать милликоманду с указателем на неё"}
	Obj={Mk=70 Mnemo="WaveTopLeft" Hint="Волна с верхнего левого угла"}
	Obj={Mk=71 Mnemo="WaveBottomLeft" Hint="Волна с нижнего левого угла"}
	Obj={Mk=72 Mnemo="WaveBottomRight" Hint="Волна с нижнего правого угла"}
	Obj={Mk=73 Mnemo="WaveTopRight" Hint="Волна с верхнего правого угла"}
	Obj={Mk=90 Mnemo="Waves" Hint="Запустить волны расчета (в качестве нагрузки может передаваться количество итераций расчета)"}

	Obj={Mk=95 Mnemo="PrecisionAbsolutePop" Hint="Вывести абсолютную погрешность"}
	Obj={Mk=96 Mnemo="PrecisionAbsolutePopMK" Hint="Вывести малликоманду с абсолютной погрешностью"}
	Obj={Mk=97 Mnemo="PrecisionRelativePop" Hint="Вывести относительную погрешность"}
	Obj={Mk=98 Mnemo="PrecisionRelativePopMk" Hint="Вывести милликоманду с относительной погрешностью"}
	Obj={Mk=100 Mnemo="NetToManualMode" Hint="Перевести ФУ вычисилтельной сетки в режим моделирования"}

	Obj={Mk=110 Mnemo="LoadTimeSet" Hint="Установить время считывания данных для ФУ вычислительной сетки"}
	Obj={Mk=111 Mnemo="CalcTimeSet" Hint="Установить время вычисления температуры для ФУ вычислительной сетки"}
	Obj={Mk=120 Mnemo="ModelindField" Hint="Начать моделирование одного поля"}
	Obj={Mk=125 Mnemo="WavesSequence2D" Hint="Последовательный запуск вычислительных волн (в нагрузке число итераций)"}

	Obj=CommonMkList
}

\\ FUTemperatManagerMkList
	FuTypeIndexes.CellSet=83 FuTypeMkTrees.CellSet=
{
	Obj={Mk=1 Mnemo="FQSet" Hint="Установить коэффициент"}
	Obj={Mk=2 Mnemo="Mk1ReSet" Hint="Установить милликоманду для реальной части первого ФУ-приемника"}
	Obj={Mk=3 Mnemo="Mk2ReSet" Hint="Установить милликоманду для реальной части второго ФУ-приемника"}
	Obj={Mk=4 Mnemo="Mk1ImSet" Hint="Установить милликоманду для мнимой части первого ФУ-приемника"}
	Obj={Mk=5 Mnemo="Mk2ImSet" Hint="Установить милликоманду для мнимой части второго ФУ-приемника"}
	Obj={Mk=6 Mnemo="KSet" Hint="Установить номер в последовательности ФУ"}
	Obj={Mk=7 Mnemo="StSet" Hint="Установить номер яруса"}
	Obj={Mk=20 Mnemo="Re1Set" Hint="Установить реальную часть первого числа"}
	Obj={Mk=21 Mnemo="Im1Set" Hint="Установить мнимую часть первого числа"}
	Obj={Mk=22 Mnemo="Re2Set" Hint="Установить реальную часть второго числа"}
	Obj={Mk=23 Mnemo="Im2Set" Hint="Установить мнимую часть второго числа"}
	Obj=CommonMkList
}
// GatewaySimulatMkList
	FuTypeIndexes.CellSet=84 FuTypeMkTrees.CellSet=
{
	Obj={Mk=4 Mnemo="ChenelNew" Hint="Создать канал и установить приемника"}
	Obj={Mk=5 Mnemo="ChennelPop" Hint="Выдать ссылку на созданных канал"}
	Obj={Mk=6 Mnemo="ChennelPopMk" Hint="Выдать милликоманду со ссылкой на созданный канал"}

	Obj={Mk=10 Mnemo="CountSet" Hint="Установить счетчик количества сшиваемых узлов сетки"}
	Obj={Mk=15 Mnemo="Node1Set" Hint="Установить первый и второй узел, с которых наобходимо произвести соединенеие узлов"}
	Obj={Mk=16 Mnemo="Node2Set" Hint="Установить первый и второй узел, с которых наобходимо произвести соединенеие узлов"}
	Obj={Mk=20 Mnemo="SewElectrField" Hint="Сшить поля для теста по расчету электрического поля (в нагрузке направление сшивания 0 - вправо, 1 - вверх, 2 - влево, 3 - вниз)"}
	Obj={Mk=30 Mnemo="SluceTimeSet" Hint="Установить время задержки передачи милликоманды через шлюз"}
	Obj={Mk=35 Mnemo="ForvardTransCountPopMk" Hint="Выдать милликоману с числом пройденных через шлюз милликоманд туда"}
	Obj={Mk=37 Mnemo="BackTransCountPopMk" Hint="Выдать милликоману с числом пройденных через шлюз милликоманд обратно"}
	Obj={Mk=38 Mnemo="TransCountPopMk" Hint="Выдать милликоману с числом пройденных через шлюз милликоманд туда и обратно"}

	Obj={Mk=50 Mnemo="ForvardQueueCountPopMk" Hint="Выдать число милликоманд, ожидающищх передачу туда"}
	Obj={Mk=52 Mnemo="BackQueueCountPopMk" Hint="Выдать число милликоманд, ожидающищх передачу туда"}
	Obj={Mk=54 Mnemo="ForvardBackQueueCountPopMk" Hint="Выдать число милликоманд, ожидающищх передачу туда"}

	Obj={Mk=90 Mnemo="ServiseLengthSet" Hint="Установить длину служебного сообщения одного кадра"}
	Obj={Mk=92 Mnemo="KadrLengthSet" Hint="Установить длину пакет"}
	Obj={Mk=94 Mnemo="AcceptTimeSet" Hint="Установить время подтверждения передачи пакета"}
	Obj={Mk=96 Mnemo="WaitTimeSet" Hint="Установить время подтверждения передачи"}
	Obj={Mk=98 Mnemo="ByteTimeSet" Hint="Установить время передачи одного байта по линии связи"}

	Obj={Mk=100 Mnemo="PorobFuncSet" Hint="Установить закон распределения помех (0-нет 1 - равномерный, 2- экспоненциальный, 3 - эрланг, 4- нормальный)"}
	Obj={Mk=101 Mnemo="AlphaSet" Hint="Альфа для экспоненциального распределения"}
	Obj={Mk=102 Mnemo="KSet" Hint=" параметр k распределения Эралнга"}
	Obj={Mk=103 Mnemo="OSet" Hint="Параметр О распределения Эрланга"}
	Obj={Mk=104 Mnemo="MuSet" Hint="Коэффицент мю нормального распределения"}
	Obj={Mk=105 Mnemo="SigmaSet" Hint="Коэффицент сигма для номрального распределения"}
	Obj={Mk=106 Mnemo="PFailSet" Hint="вероятность ошибки для равномерного распределения при передаче одного бита информации"}
	Obj={Mk=108 Mnemo="RateSet" Hint="Скорость передачи бит за еденицу модельного воемени"}
	Obj=CommonMkList
}

// ALUMkList
	FuTypeIndexes.CellSet=85 FuTypeMkTrees.CellSet=
{
	Obj={Mk=1 Mnemo="Calc" Hint="Вычислить арифметическое выражение"}
	Obj={Mk=4 Mnemo="AngleModeSet" Hint="Установить режим измерения улов (0-рад, 1-град)"}
	Obj={Mk=5 Mnemo="ExprOut" Hint="Выдать ссылку на арифметическое выражение"}
	Obj={Mk=6 Mnemo="ExprOutMk" Hint="Выдать милликоманду со ссылкой на арифметическое выражение"}
	Obj={Mk=9 Mnemo="CalcSet" Hint="Установить указатель на ОА арифметический граф"}
	Obj={Mk=12 Mnemo="CalcOut" Hint="Выдать указатель на ОА арифметический граф"}
	Obj={Mk=13 Mnemo="CalcutMk" Hint="Выдать МК с указателем на ОА арифметический граф"}
	Obj={Mk=10 Mnemo="SampleSet" Hint="Установить указатель на ИК с шаблоном для инициализации переменных"}
	Obj={Mk=14 Mnemo="SampleOutMk" Hint="Выдать МК с шаблоном"}
	Obj={Mk=11 Mnemo="SampleVarReset" Hint="брос значений всех переменных шаблона"}
	Obj={Mk=15 Mnemo="VarSet" Hint="становить значение пеменной из шаблона"}
	Obj={Mk=16 Mnemo="VarCalc" Hint="Установить значение пеменной из шаблона и вычислить выражение"}
	Obj={Mk=17 Mnemo="AutoSampleVarResetSet" Hint="Установить флаг автоматической очистки переменных шаблона (по умолчанию true)"}
	Obj={Mk=18 Mnemo="ListDefaultProgSet" Hint="Установить программу, выполняющуюся в случае ложности всех предикатов из списка"}

	Obj={Mk=100 Mnemo="Set" Hint="Установить значение в аккумулятор"}
	Obj={Mk=101 Mnemo="NegSet" Hint="Установить инверсное значение в аккумулятор"}
	Obj={Mk=112 Mnemo="InvSet" Hint="Устновить обратное заначение в аккумулятор"}
	Obj={Mk=98 Mnemo="Inc" Hint="Интримент (в нагрузке указатель на переменную)"}
	Obj={Mk=99 Mnemo="Dec" Hint="Декремент (в нагрузке указатель на переменную)"}

	Obj={Mnemo="Out" Hint="Выдача результатов вычислений" Comment
		Obj={Mk=115 Mnemo="Out" Hint=""}
		Obj={Mk=117 Mnemo="NegOut" Hint=""}
		Obj={Mk=120 Mnemo="InvOut" Hint=""}
		Obj={Mk=122 Mnemo="OutMk" Hint=""}
		Obj={Mk=125 Mnemo="NegPopMk" Hint=""}
		Obj={Mk=127 Mnemo="InvPopMk" Hint=""}
		Obj={Mk=130 Mnemo="OutMkSet" Hint="Установить милликоманду, которая выдается по окончанию вычислений"}
		Obj={Mk=132 Mnemo="OutSet" Hint="Установить адрес ячейки памяти, куда записывается результат"}
		Obj={Mk=135 Mnemo="IntOut" Hint=""}
		Obj={Mk=137 Mnemo="IntOutMk" Hint=""}
		Obj={Mk=140 Mnemo="RoundOut" Hint=""}
		Obj={Mk=142 Mnemo="RoundOutMk" Hint=""}
	}
	Obj={Mnemo="C commands" Hint="Команды языка Си" Comment
		Obj={Mk=70 Mnemo="CycleModeSet" Hint="Установить режим цикла 0 - нет цикла, 1- цикл с предусловием, 2 - цикл с постусловием, 3 - множественный выбор"}
		Obj={Mk=60 Mnemo="IfSet" Hint="""Если"" (в нагрузке логическое выражение условия)"}
		Obj={Mk=62 Mnemo="ThenProgSet" Hint="Установить ссылку на подпрограмму, выполняющуюся при выполнении условия"}
		Obj={Mk=63 Mnemo="CycleBlockProgSet" Hint="Установить ссылку на подпрограмму, выполняющую роль тела цикла (для цикла for)"}
		Obj={Mk=65 Mnemo="ElseProgSet" Hint="Установить ссылку на подпрограмму, выполняющуюся при невыполнении условия"}
		Obj={Mk=67 Mnemo="IfRun" Hint="Провирить условие и запустить соответствующую подпрограмму  (в нагрузке указатель на логическое выражение)"}

		Obj={Mk=72 Mnemo="CaseStartSet" Hint="Установить начало интервала для множественного выбора (создать новый интервал)"}
		Obj={Mk=73 Mnemo="CaseEndSet" Hint="Установить конец для множественного выбора"}
		Obj={Mk=74 Mnemo="CaseProgSet" Hint="Установить программу для множественного выбора"}
	}
	Obj={Mnemo="Arithmetic" Hint="Арифметические операции" Comment
		Obj={Mk=200 Mnemo="Add" Hint=""}
		Obj={Mk=202 Mnemo="Sub" Hint=""}
		Obj={Mk=203 Mnemo="Mul" Hint=""}
		Obj={Mk=205 Mnemo="Sqr" Hint=""}
		Obj={Mk=210 Mnemo="SqrAdd" Hint=""}
		Obj={Mk=212 Mnemo="SqrSub" Hint=""}
		Obj={Mk=215 Mnemo="Sqrt" Hint=""}
		Obj={Mk=220 Mnemo="Div" Hint=""}
		Obj={Mk=222 Mnemo="DivInt" Hint=""}
		Obj={Mk=223 Mnemo="Mod" Hint=""}
		Obj={Mk=530 Mnemo="Max" Hint=""}
		Obj={Mk=531 Mnemo="Min" Hint=""}
	}
	Obj={Mnemo="trigonometric" Hint="Арифметические операции" Comment
		Obj={Mk=225 Mnemo="Sin" Hint=""}
		Obj={Mk=230 Mnemo="Cos" Hint=""}
		Obj={Mk=235 Mnemo="Tg" Hint=""}
		Obj={Mk=240 Mnemo="Ctg" Hint=""}
	}
	Obj={Mnemo="Boolean" Hint="Логиские операции" Comment
		Obj={Mk=300 Mnemo="Not" Hint=""}
		Obj={Mk=305 Mnemo="And" Hint=""}
		Obj={Mk=310 Mnemo="Or" Hint=""}
		Obj={Mk=315 Mnemo="Xor" Hint=""}
		Obj={Mk=330 Mnemo="EQ" Hint=""}
		Obj={Mk=335 Mnemo="Less" Hint=""}
		Obj={Mk=340 Mnemo="Big" Hint=""}
		Obj={Mk=345 Mnemo="LessEQ" Hint=""}
		Obj={Mk=350 Mnemo="BiggerEQ" Hint=""}
	}
	Obj={Mnemo="C-operators" Hint="Выдача результатов вычислений" Comment
		Obj={Mk=60 Mnemo="If" Hint=" ""Если"" (в нагрузке логическое выражение условия)"}
		Obj={Mk=62 Mnemo="ThenProgSet" Hint="Установить ссылку на подпрограмму, выполняющуюся при выполнении условия"}
		Obj={Mk=63 Mnemo="BodyProgSet" Hint="Установить ссылку на подпрограмму, выполняющую роль тела цикла"}
		Obj={Mk=65 Mnemo="ElseProgSet" Hint="Установить ссылку на подпрограмму, выполняющуюся при невыполнении условия"}
		Obj={Mk=67 Mnemo="IfRun" Hint="Провирить условие и запустить соответствующую подпрограмму  (в нагрузке указатель на логическое выражение)"}
		Obj={Mk=70 Mnemo="CycleModeSet" Hint="Установить режим цикла 0 - нет цикла, 1- цикл с предусловием, 2 - цикл с постусловием"}
	}
	Obj=CommonMkList
}
// OAGraphMkList
	FuTypeIndexes.CellSet=86 FuTypeMkTrees.CellSet=
{
	Obj={Mk=1 Mnemo="Set" Hint="Установить указатель на капсулу"}
	Obj={Mk=2 Mnemo="Set2" Hint="Установить указатель на вторую капсулу"}
	Obj={Mk=3 Mnemo="Pop" Hint="Выдать ссылку на ОА-граф"}
	Obj={Mk=4 Mnemo="PopMk" Hint="Выдать милликонмаду со ссылкой на ОА-граф"}

	Obj={Mk=5 Mnemo="GraphStatistic" Hint="Сбор статистики по ОА-графу"}
		Obj={Mnemo="Statistic out" Hint="Логиские операции" Comment
		Obj={Mk=50 Mnemo="IcCountPop" Hint="Выдать количество ИП"}
		Obj={Mk=51 Mnemo="IcCountPopMk" Hint="Выдать милликоманду с количеством ИП"}
		Obj={Mk=52 Mnemo="CapsCountPop" Hint="Выдать количество капсул"}
		Obj={Mk=53 Mnemo="CapsCountPopMk" Hint="Выдать милликоманду с количеством капсул"}
		Obj={Mk=54 Mnemo="ReferensesCountPop" Hint="Выдать количество ссылок"}
		Obj={Mk=55 Mnemo="ReferensesCountPopMk" Hint="Выдать милликоманду с количеством ссылок"}
		Obj={Mk=56 Mnemo="LinesCountPop" Hint="Выдать количество линий в списке"}
		Obj={Mk=57 Mnemo="LinesCountPopMk" Hint="Выдать милликоманду с количеством линий в списке"}
		Obj={Mk=58 Mnemo="ListLevelsCountPop" Hint="Выдать максимальное количество уровней в списке"}
		Obj={Mk=59 Mnemo="ListLevelsCountPopMk" Hint="Выдать милликоманду с максимальным количеством уровней в списке"}
	}
	Obj={Mnemo="Id work" Comment Hint="Индексный режим"
		Obj={Mnemo="IdModeSet" Mk=9 Hint="Установить режим автоматической простановки идентификаторов информационных капсул (если в нагрузке nil, то режим устанавливается)"}
		Obj={Mnemo="IdPointerSet" Mk=10 Hint="Установить ссылку на счетчик индексов капсул (если Load=nil, то указатель ставится на внутренний счетчик; автоматически устанавливается индексный режим)"}
		Obj={Mnemo="IdSet" Mk=11 Hint="Установить значение счетчика индексов капсул"}
		Obj={Mnemo="IdPointerPop" Mk=12 Hint="Выдать указатель на счетчик идекаторов капсул"}
		Obj={Mnemo="IdPointerPopMk" Mk=13 Hint="Выдать милликоманду с указателем на счетчик идекаторов капсул"}
	}
	Obj=CommonMkList
}

// MatrMulSource
	FuTypeIndexes.CellSet=87 FuTypeMkTrees.CellSet=
{
  Obj={Mk=1 Mnemo="MatrASet" Hint="Установить указатель на первую матрицу"}
  Obj={Mk=2 Mnemo="MatrBSet" Hint="Установить указатель на первую матрицу"}
  Obj={Mk=6 Mnemo="MatrCSet" Hint="Установить указатель на результитирующую матрицу"}
  Obj={Mk=3 Mnemo="MatrCPop" Hint="Выдать ссылку на результирующую мартицу (если ссылка ранее не установлена, то матрица создается))"}
  Obj={Mk=4 Mnemo="MatrCPopMk" Hint="Выдать милликоманду с результирующей мартицей (если ссылка ранее не установлена, то матрица создается)"}
  Obj={Mk=5 Mnemo="ReceiverSet" Hint="Установить указатель приёмник"}
  Obj={Mk=9 Mnemo="ModeSet" Hint="Задать режим работы ФУ: 0 - последовательная выдача массивов, 1 - оптимальная выдача массивов, 10 - сетка"}

  Obj={Mk=10 Mnemo="MulCountPop" Hint="Выдать количетво одновременно происходящих перемножений"}
  Obj={Mk=11 Mnemo="MulCountPopMk" Hint="Выдать милликоманду с количетвом одновременно происходящих перемножений"}

  Obj={Mk=20 Mnemo="SegNXSet" Hint="Установить ширину сегмента вычислительного поля"}
  Obj={Mk=21 Mnemo="SegNYSet" Hint="Установить высоту сегмента вычислительного поля"}
  Obj={Mk=24 Mnemo="GatewaySchedulerTemplateSet" Hint="Установить шаблон планировщика для шлюза"}
  Obj={Mk=25 Mnemo="GatewayTemplateSet" Hint="Установить ссылку на эталон шлюза"}
  Obj={Mk=26 Mnemo="ScherdulerTemplateSet" Hint="Установить ссылку на эталон планировщика"}
  Obj={Mk=27 Mnemo="SegColSet" Hint="Установить текущий сегмент по горизонтали"}
  Obj={Mk=28 Mnemo="SegRowSet" Hint="Установить текущий сегмент по вертикали"}
  Obj={Mk=30 Mnemo="RowSet" Hint="Установить индекс текущего сегмента сетки по Y"}
  Obj={Mk=31 Mnemo="ColSet" Hint="Установить индекс текущего сегмента сетки по X"}
  Obj={Mk=35 Mnemo="RoutingModeSet" Hint="Установить режим маршрутизации (0 - по краю, 1-по диагонали)"}
  Obj={Mk=40 Mnemo="SourceMkQueueCorrectSet" Hint="Корректировать статистику по входным данных"}

  Obj={Mk=38 Mnemo="SourceLocatSet" Hint="Установить координаты источника данных"}
  Obj={Mk=39 Mnemo="CollectorLocatSet" Hint="Установить координаты приемника (сборщика) данных"}

  Obj={Mk=89 Mnemo="NetDestroy" Hint="Уничтожить вычислительную сетку"}
  Obj={Mk=90 Mnemo="IniStart" Hint="Инициализировать поле элементов матрицы и начать вычисления результирующей матрицы"}
  Obj={Mk=91 Mnemo="Ini" Hint="Инициализировать поле элементов матрицы"}
  Obj={Mk=92 Mnemo="Start" Hint="Начать вычисление элементов результирующей матрицы"}
  Obj={Mk=100 Mnemo="LoadTimeSet" Hint="Установить время задержки считывания значения"}
  Obj={Mk=101 Mnemo="MulTimeSet" Hint="Установить время перемножения"}
  Obj={Mk=102 Mnemo="BusTimeSet" Hint="Установить время пересылки по широковещательной шине"}
  Obj={Mk=103 Mnemo="GenerateTimeSet" Hint="Установить время генерации данных"}

  Obj={Mk=130 Mnemo="NCoresSegSet" Hint="Установить количество вычислительных устройств на текущем сегмента"}
  Obj={Mk=131 Mnemo="SchedulerSegContextPop" Hint="Выдать ссылку на контекст планировщика текущего сегмента"}
  Obj={Mk=132 Mnemo="SchedulerSegContextPopMk" Hint="Выдать милликоманду со ссылкой на контекст планировщика текущего сегмента"}

  Obj={Mnemo="Modeling results" Hint="Результаты моделирования" Comment
    Obj={Mk=110 Mnemo="MkCountMaxPop" Hint="Выдать максамальное количество Мк в очереди на ожидание ресурсов"}
    Obj={Mk=111 Mnemo="MkCountMaxPopMk" Hint="Выдать милликоманду с максамальным количеством Мк в очереди на ожидание ресурсов"}
    Obj={Mk=108 Mnemo="MkCountMaxSumPop" Hint="Выдать сумму максамальных очередей Мк на ожидание ресурсов по всей системе"}
    Obj={Mk=109 Mnemo="MkCountMaxSumPopMk" Hint="Выдать милликоманду с суммой максамальных очередей Мк на ожидание ресурсов по всей системе"}
    Obj={Mk=106 Mnemo="MkCountPop" Hint="Выдвть общее количество Мк в очереди на ожидание ресурсов на вычислительных узлах"}
    Obj={Mk=107 Mnemo="MkCountPopMk" Hint="Выдвть милликоманду с общим количеством Мк в очереди на ожидание ресурсов на вычислительных узлах"}

    Obj={Mk=112 Mnemo="CoreCountPop" Hint="Выдать общее количество работающих процессорных ядер"}
    Obj={Mk=113 Mnemo="CoreCountPopMk" Hint="Выдать милликоманду с общим количеством работающих процессорных ядер"}

    Obj={Mk=115 Mnemo="GatewayMkQueuePop" Hint="Выдать общее количество милликоманд в очереди на шлюзах"}
    Obj={Mk=116 Mnemo="GatewayMkQueuePopMk" Hint="Выдать милликоманду с общим количеством милликоманд на шлюзах"}
    Obj={Mk=117 Mnemo="GatewayMkQueueMaxPop" Hint="Выдать максимальное количество милликоманд в очереди на шлюзе"}
    Obj={Mk=118 Mnemo="GatewayMkQueueMaxPopMk" Hint="Выдать милликоманду с максимальным количеством милликоманд в очереди на шлюзе"}
    Obj={Mk=119 Mnemo="GatewayMkQueueMaxSumPop" Hint="Выдать сумму максимальных очередей на шлюзах"}
    Obj={Mk=122 Mnemo="GatewayMkQueueMaxSumPopMk" Hint="Выдать милликоманду с суммой максимальных очередей на шлюзах"}

    Obj={Mk=140 Mnemo="NodeMkQueuePop" Hint="Выдать общее количество милликоманд в очереди на шлюзах и на планировщике"}
    Obj={Mk=141 Mnemo="NodeMkQueuePopMk" Hint="Выдать милликоманду с общим количеством милликоманд на шлюзах и на планировщике"}
    Obj={Mk=142 Mnemo="NodeMkQueueMaxPop" Hint="Выдать максимальное количество милликоманд в очереди на шлюзе и планировщике"}
    Obj={Mk=143 Mnemo="NodeMkQueueMaxPopMk" Hint="Выдать милликоманду с максимальным количеством милликоманд в очереди на шлюзе и планировщике"}
    Obj={Mk=144 Mnemo="NodeMkQueueMaxSumPop" Hint="Выдать сумму максимальных очередей на шлюзах и планировщиках"}
    Obj={Mk=145 Mnemo="NodeMkQueueMaxSumPopMk" Hint="Выдать милликоманду с суммой максимальных очередей на шлюзах и планировщиках"}

    Obj={Mk=120 Mnemo="SchedulerMkQueueMaxMatrPop" Hint="Выдать матрицу с максимальными очередями Мк для сегментов ФУ"}
    Obj={Mk=121 Mnemo="SchedulerMkQueueMaxMatrPopMk" Hint="Выдать милликоманду с матрицей с максимальными очередями Мк для сегментов ФУ"}

    Obj={Mk=125 Mnemo="GatewayMkQueueMaxMatrPop" Hint="Выдать матрицу с максимальными очередями Мк для шлюзов на сегментов ФУ"}
    Obj={Mk=126 Mnemo="GatewayMkQueueMaxMatrPopMk" Hint="Выдать милликоманду с матрицей с максимальными очередями Мк для шлюзов сегментов ФУ"}

    Obj={Mk=127 Mnemo="NodeMkQueueMaxMatrPop" Hint="Выдать матрицу с суммой максимальных очередей Мк на шлюзах и на планировщике для сегментов ФУ"}
    Obj={Mk=128 Mnemo="NodeMkQueueMaxMatrPopMk" Hint="Выдать милликоманду с матрицей с максимальных очередей Мк на шлюзах и на планировщике для сегментов ФУ"}
  }
  Obj=CommonMkList
}

// MatrMulCollectorMkList
	FuTypeIndexes.CellSet=88 FuTypeMkTrees.CellSet=
{
  Obj={Mk=1 Mnemo="Set" Hint="Установить ссылку на результирующий масссив"}
  Obj={Mk=2 Mnemo="SetStrOffset" Hint="Установить смещение StrOffsetSet"}
  Obj={Mk=3 Mnemo="Pop" Hint="Выдать ссылку на результирующий массив"}
  Obj={Mk=4 Mnemo="PopMk" Hint="Выдать милликоманду со ссылкой на результирующий массив"}
  Obj={Mk=5 Mnemo="IndexSet" Hint="Установить индекс текущего массива/итерации"}
  Obj={Mk=6 Mnemo="NIteratPop" Hint="Выдать количество результирующих массивов"}
  Obj={Mk=7 Mnemo="NIteratPopMk" Hint="Выдать милликоманду с количеством результирующих массивов"}
  Obj={Mk=10 Mnemo="FiringMkSet" Hint="Установить милликоманду для выдачи результирующего массива по завершению вычислений"}
  Obj={Mk=11 Mnemo="FiringProgSet" Hint="Установить милликоманду, запускаемую по завершению вычислений"}
  Obj={Mk=13 Mnemo="NIteratPop" Hint="Выдать количество перемноженных матриц"}
  Obj={Mk=14 Mnemo="NIteratPopMk" Hint="Выдать малликоманду с количеством перемноженных матриц"}
  Obj={Mk=99 Mnemo="SelfSchedulerSet" Hint="становить собственный планировщик"}
  Obj={Mk=100 Mnemo="SaveTimeSet" Hint="Установить время приема и записи результата в итоговый массив"}
  Obj={Mk=110 Mnemo="RezMatrDestroy" Hint="Уничножить результирующие матрицы"}

  Obj=CommonMkList
}

// ControlCubeMkList
	FuTypeIndexes.CellSet=89 FuTypeMkTrees.CellSet=
{
  Obj={Mk=1 Mnemo="Val1Set" Hint="Принять текущую координату первое значение"}
  Obj={Mk=2 Mnemo="Val2Set" Hint="Принять текущую координату второе значение"}
  Obj={Mk=3 Mnemo="Val3Set" Hint="Принять текущую координату третье значение"}
  Obj={Mk=4 Mnemo="Val4Set" Hint="Принять текущую координату четвертое значение"}
  Obj={Mk=5 Mnemo="Val5Set" Hint="Принять текущую координату пятое значение"}
  Obj={Mk=6 Mnemo="Val6Set" Hint="Принять текущую координату шестое значение"}
  Obj={Mk=7 Mnemo="Val7Set" Hint="Принять текущую координату седьмое значение"}
  Obj={Mk=8 Mnemo="Val8Set" Hint="Принять текущую координату восьмое значение"}
  Obj={Mk=20 Mnemo="WorkSet" Hint="Установить активный режим"}
  Obj={Mk=21 Mnemo="DimSet" Hint="Установить размерность"}
  Obj={Mk=22 Mnemo="IndexDimSet" Hint="Установить индекс измерения"}
\\  Obj={Mk=25 Mnemo="VertexDimSet" Hint="Установить размерность по текущей оси"}
  Obj={Mk=27 Mnemo="IndexSet" Hint="Установить индекс"}
  Obj={Mk=30 Mnemo="VergeSet" Hint="Установить границу"}
  Obj={Mk=35 Mnemo="Index1Set" Hint="Установить первый индекс"}
  Obj={Mk=40 Mnemo="Index2Set" Hint="Установить второй индекс"}
  Obj={Mk=45 Mnemo="ProgCellSet" Hint="Установить указатель на миллипрограмму для ячейки поля решений"}
  Obj={Mk=50 Mnemo="ProgModeSet" Hint="Программный режим (0 - запускать программу только один раз при попадании значений в область, 1 - каждый раз при обновлении начений)"}

  Obj=CommonMkList
}

// GausManagerMkList
	FuTypeIndexes.CellSet=90 FuTypeMkTrees.CellSet=
{
  Obj={Mk=1 Mnemo="MatrSet" Hint="Установить ссылку на матрицу"}
  Obj={Mk=2 Mnemo="BSet" Hint=""}
  Obj={Mk=3 Mnemo="BSet" Hint=""}
  Obj={Mk=10 Mnemo="ResultPop" Hint=""}
  Obj={Mk=11 Mnemo="ResultPopMk" Hint=""}

  Obj=CommonMkList
}

// LingvoListMkList
	FuTypeIndexes.CellSet=91 FuTypeMkTrees.CellSet=
{
  Obj={Mk=1 Mnemo="ListSet" Hint="Установить указатель на список"}
  Obj={Mk=2 Mnemo="ListAdd" Hint="Добавить список у уже существующему"}
  Obj={Mk=3 Mnemo="ListDelSet" Hint=""}
  Obj={Mk=4 Mnemo="ListTreeDelSet" Hint=""}
  Obj={Mk=8 Mnemo="ListPop" Hint="Выдать указатель на список"}
  Obj={Mk=9 Mnemo="ListPopMk" Hint="Выдать милликоманду с указателем на список"}
  Obj={Mk=10 Mnemo="AutoForkSet" Hint="Установить режим автоматического расфоркивания (по умолчанию true)"}
  Obj={Mk=11 Mnemo="ErrMessageSet" Hint="Установить сообщение об ошибке"}
  Obj={Mk=12 Mnemo="ErrMessageMkSet" Hint="Установить милликоманду для выдачи сообщения об ошибке"}
  Obj={Mk=13 Mnemo="StepProgSet" Hint="Установить программу для каждого шага преобрзования"}
  Obj={Mk=19 Mnemo="DirectSet" Hint="Установить направление обхода (false - прямой обход; true - обратный обход)"}
  Obj={Mk=20 Mnemo="RootAdd" Hint="Добавить строку к списку"}
  Obj={Mk=21 Mnemo="RootCopyAdd" Hint="Добавить копию строки к списку"}
  Obj={Mk=22 Mnemo="RootTreeCopyAdd" Hint="Добавить копию ОА-дерева к списку"}

  Obj={Mk=33 Mnemo="TraversalAbort" Hint="Остановить обход веток ОА-списка"}
  Obj={Mk=34 Mnemo="FindAbort" Hint="Остановить поисек по ОА-списку"}

  Obj={Mk=35 Mnemo="CharPosAtrSet" Hint="Установить атрибут ИП, задающей номер текущего символа"}
  Obj={Mk=36 Mnemo="CharPosRefSet" Hint="Установить ссылку на регистр хранящий номер текущего символа"}
  Obj={Mk=37 Mnemo="SemPropAtrSet" Hint="Установить атрибут семантических свойст слова"}

  Obj={Mnemo="AutoAgree" Hint="Автоматическое семантико-морфологическое согласование слов" Comment
    Obj={Mk=25 Mnemo="AutoAgreeAtrSet" Hint="Установить атрибут для нахождения списка согласования слов"}
    Obj={Mk=26 Mnemo="AutoAgreeMkSet" Hint="Установить милликоманду для согласования слов"}
    Obj={Mk=27 Mnemo="AutoAgreeLeftAtrSet" Hint="Установить атрибут для нахождения списка согласования слов слева"}
    Obj={Mk=28 Mnemo="AutoAgreeLeftMkSet" Hint="Установить милликоманду для согласования слов слева"}
    Obj={Mk=29 Mnemo="AutoAgreeRightAtrSet" Hint="Установить атрибут для нахождения списка согласования слов справа"}
    Obj={Mk=30 Mnemo="AutoAgreeRightMkSet" Hint="Установить милликоманду для согласования слов справа"}
  }
  Obj={Mnemo="Statistisc" Hint="Статистика по ОА-графу" Comment
     Obj={Mk=40 Mnemo="CountersReset" Hint="Сбросить все счетчики статистики"}
     Obj={Mk=49 Mnemo="StatistEnableSet" Hint="Установить режим подсчета статистики (по умолчанию true)"}
     Obj={Mk=41 Mnemo="IpCompireCounterMkSet" Hint="Установить Мк для выдачи количества сравнения ИП"}
     Obj={Mk=42 Mnemo="IpCounterMkSet" Hint="Установить Мк для выдачи количества ИП в ОА-графеУстановить Мк для выдачи количества ИП в ОА-графе"}
     Obj={Mk=43 Mnemo="CapsCounterMkSet" Hint="Установить Мк для выдачи количества ИК в ОА-графе"}
     Obj={Mk=44 Mnemo="IpCompireCounterOutMk" Hint="Выдать Мк с количеством сравнения ИП"}
     Obj={Mk=45 Mnemo="IpCounterOutMk" Hint="Выдать Мк с количеством ИП в ОА-графе"}
     Obj={Mk=46 Mnemo="CapsCounterOutMk" Hint="Выдать Мк с количеством ИК в ОА-графе"}
     Obj={Mk=47 Mnemo="IpMaxOutMk" Hint="Выдать Мк с максимальным количеством ИП в ОА-графе"}
     Obj={Mk=48 Mnemo="CapsMaxOutMk" Hint="Выдать Мк с максимальным количеством ИК в ОА-графе"}
}
  Obj={Mnemo="Find" Hint="Поиск информации" Comment
	Obj={Mk=66 Mnemo="FindOr" Hint="Поиск ИЛИ в текущей строке списка"}
	Obj={Mk=67 Mnemo="FindAnd" Hint="Поиск И в текущей строке списка"}
	Obj={Mk=68 Mnemo="FindAndAtr" Hint="Поиск И по атрибутам в текущей строке списка"}

	Obj={Mk=70 Mnemo="Prev2_FindOr" Hint="Поиск ИЛИ во второй предыдущей ИК"}
	Obj={Mk=71 Mnemo="Prev2_FindAnd" Hint="Поиск И во второй предыдущей ИК"}
	Obj={Mk=72 Mnemo="Prev2_FindAndAtr" Hint="Поиск И по атрибутам во второй предыдущей ИК"}
	Obj={Mk=73 Mnemo="Prev_FindOr" Hint="Поиск ИЛИ в предыдущей ИК"}
	Obj={Mk=74 Mnemo="Prev_FindAnd" Hint="Поиск И в предыдущей ИК"}
	Obj={Mk=75 Mnemo="Prev_FindAndAtr" Hint="Поиск И по атрибутам в предыдущей ИК"}
	Obj={Mk=76 Mnemo="Line_FindOr" Hint="Поиск ИЛИ в текущей ИК"}
	Obj={Mk=77 Mnemo="Line_FindAnd" Hint="Поиск И в текущей ИК"}
	Obj={Mk=78 Mnemo="Line_FindAndAtr" Hint="Поиск И по атрибутам в текущей ИК"}
	Obj={Mk=79 Mnemo="Next_FindOr" Hint="Поиск ИЛИ в следующей текущей ИК"}
	Obj={Mk=80 Mnemo="Next_FindAnd" Hint="Поиск И в следующей текущей ИК"}
	Obj={Mk=81 Mnemo="Next_FindAndAtr" Hint="Поиск И по атрибутам в следующей текущей ИК"}
	Obj={Mk=82 Mnemo="Next2_FindOr" Hint="Поиск ИЛИ во второй следующей текущей ИК"}
	Obj={Mk=83 Mnemo="Next2_FindAnd" Hint="Поиск И во второй следующей текущей ИК"}
	Obj={Mk=84 Mnemo="Next2_FindAndAtr" Hint="Поиск И по атрибутам во второй следующей текущей ИК"}
  }
  Obj={Mnemo="Navigation" Comment Hint="Навигация по ОА-графу"
   Obj={Mnemo="Down" Mk=320 Hint="Спуститься на нижний уровень (в нагрузке атрибут ИП)"}
   Obj={Mnemo="Up"   Mk=321 Hint="Подняться на верхний уровень (в нагрузке атрибут ИП, для спуска на новый нижний уровень)"}
   Obj={Mnemo="UpStep"   Mk=322 Hint="Подняться на верхний уровень и продолжить поиск (в нагрузке атрибут ИП, для спуска на новый нижний уровень)"}

   Obj={Mnemo="Prev2_Down"   Mk=323 Hint="Спуститься на нижний уровень на втором левом шаге (в нагрузке атрибут ИП)"}
   Obj={Mnemo="Prev2_Up"     Mk=324 Hint="Спуститься на нижний уровень на втором левом шаге (в нагрузке атрибут ИП)"}
   Obj={Mnemo="Prev2_UpStep" Mk=325 Hint="Спуститься на нижний уровень и продолжить поиск на втором левом шаге (в нагрузке атрибут ИП)"}

   Obj={Mnemo="Prev_Down"    Mk=326 Hint="Спуститься на нижний уровень на первом левом шаге (в нагрузке атрибут ИП)"}
   Obj={Mnemo="Prev_Up"      Mk=327 Hint="Спуститься на нижний уровень на первом левом шаге (в нагрузке атрибут ИП)"}
   Obj={Mnemo="Prev_UpStep"  Mk=328 Hint="Спуститься на нижний уровень и продолжить поиск на первом левом шаге (в нагрузке атрибут ИП)"}

   Obj={Mnemo="Line_Down"    Mk=329 Hint="Спуститься на нижний уровень на нулевом шаге (в нагрузке атрибут ИП)"}
   Obj={Mnemo="Line_Up"      Mk=330 Hint="Спуститься на нижний уровень на нулевом шаге (в нагрузке атрибут ИП)"}
   Obj={Mnemo="Line_UpStep"  Mk=331 Hint="Спуститься на нижний уровень и продолжить поиск на нулевом шаге (в нагрузке атрибут ИП)"}

   Obj={Mnemo="Next_Down"    Mk=332 Hint="Спуститься на нижний уровень на первом правом шаге (в нагрузке атрибут ИП)"}
   Obj={Mnemo="Next_Up"      Mk=333 Hint="Спуститься на нижний уровень на первом правом (в нагрузке атрибут ИП)"}
   Obj={Mnemo="Next_UpStep"  Mk=334 Hint="Спуститься на нижний уровень и продолжить поиск на первом правом (в нагрузке атрибут ИП)"}

   Obj={Mnemo="Next2_Down"   Mk=335 Hint="Спуститься на нижний уровень на втором правом шаге (в нагрузке атрибут ИП)"}
   Obj={Mnemo="Next2_Up"     Mk=336 Hint="Спуститься на нижний уровень на втором правом шаге (в нагрузке атрибут ИП)"}
   Obj={Mnemo="Next2_UpStep" Mk=337 Hint="Спуститься на нижний уровень и продолжить поиск  на втором правом шаге (в нагрузке атрибут ИП)"}
  }
  Obj={Mnemo="IC work" Comment Hint="Работа с капсулами"
   Obj={Mnemo="Add" Mk=200 Hint="Присоединить ИК"}
   Obj={Mnemo="CopyAdd" Mk=201 Hint="Присоединить копию ИК"}
   Obj={Mnemo="TreeCopyAdd" Mk=202 Hint="Присоединить копию ОА-графа"}
   Obj={Mnemo="Pop" Mk=203 Hint="Выдать линию"}
   Obj={Mnemo="PopMk" Mk=204 Hint="Выдать милликоманду с линией"}
   Obj={Mnemo="Excl" Mk=205 Hint="Исключить линию из списка и выдать ссылку на исключенную линию"}
   Obj={Mnemo="ExclMk" Mk=206 Hint="Исключить линию из списка и выдать милликоманду со ссылкой на исключенную линию"}
   Obj={Mnemo="DelMk" Mk=207 Hint="Удалить линию (перед удалением выдается ссылка на нее пото происходит удаление)"}
   Obj={Mnemo="DelTreeMk" Mk=208 Hint="Удалить линим с ОА-графов (перед удалением выдается ссылка на нее пото происходит удаление)"}
   Obj={Mnemo="Set" Mk=209 Hint="Установить указатель линии на капсулу"}
   Obj={Mnemo="CopySet" Mk=210 Hint="Установить указатель линии на копию капсулы"}
   Obj={Mnemo="TreeCopySet" Mk=211 Hint="Установить указатель линии на копию ОА-графа"}

   Obj={Mnemo="Prev2_Add" Mk=212 Hint="Присоединить ИК"}
   Obj={Mnemo="Prev2_CopyAdd" Mk=213 Hint="Присоединить копию ИК"}
   Obj={Mnemo="Prev2_TreeCopyAdd" Mk=214 Hint="Присоединить копию ОА-графа"}
   Obj={Mnemo="Prev2_Pop" Mk=215 Hint="Выдать линию"}
   Obj={Mnemo="Prev2_PopMk" Mk=216 Hint="Выдать милликоманду с линией"}
   Obj={Mnemo="Prev2_Excl" Mk=217 Hint="Исключить линию из списка и выдать ссылку на исключенную линию"}
   Obj={Mnemo="Prev2_ExclMk" Mk=218 Hint="Исключить линию из списка и выдать милликоманду со ссылкой на исключенную линию"}
   Obj={Mnemo="Prev2_DelMk" Mk=219 Hint="Удалить линию (перед удалением выдается ссылка на нее пото происходит удаление)"}
   Obj={Mnemo="Prev2_DelTreeMk" Mk=220 Hint="Удалить линим с ОА-графов (перед удалением выдается ссылка на нее пото происходит удаление)"}
   Obj={Mnemo="Prev2_Set" Mk=221 Hint="Установить указатель на линию"}
   Obj={Mnemo="Prev2_CopySet" Mk=222 Hint="Установить указатель линии на копию капсулы"}
   Obj={Mnemo="Prev2_TreeCopySet" Mk=223 Hint="Установить указатель линии на копию ОА-графа"}

   Obj={Mnemo="Prev_Add" Mk=224 Hint="Присоединить ИК"}
   Obj={Mnemo="Prev_CopyAdd" Mk=225 Hint="Присоединить копию ИК"}
   Obj={Mnemo="Prev_TreeCopyAdd" Mk=226 Hint="Присоединить копию ОА-графа"}
   Obj={Mnemo="Prev_Pop" Mk=227 Hint="Выдать линию"}
   Obj={Mnemo="Prev_PopMk" Mk=228 Hint="Выдать милликоманду с линией"}
   Obj={Mnemo="Prev_Excl" Mk=229 Hint="Исключить линию из списка и выдать ссылку на исключенную линию"}
   Obj={Mnemo="Prev_ExclMk" Mk=230 Hint="Исключить линию из списка и выдать милликоманду со ссылкой на исключенную линию"}
   Obj={Mnemo="Prev_DelMk" Mk=231 Hint="Удалить линию (перед удалением выдается ссылка на нее пото происходит удаление)"}
   Obj={Mnemo="Prev_DelTreeMk" Mk=232 Hint="Удалить линим с ОА-графов (перед удалением выдается ссылка на нее пото происходит удаление)"}
   Obj={Mnemo="Prev_Set" Mk=233 Hint="Установить указатель на линию"}
   Obj={Mnemo="Prev_CopySet" Mk=234 Hint="Установить указатель линии на копию капсулы"}
   Obj={Mnemo="Prev_TreeCopySet" Mk=235 Hint="Установить указатель линии на копию ОА-графа"}

   Obj={Mnemo="Line_Add" Mk=236 Hint="Присоединить ИК"}
   Obj={Mnemo="Line_CopyAdd" Mk=237 Hint="Присоединить копию ИК"}
   Obj={Mnemo="Line_TreeCopyAdd" Mk=238 Hint="Присоединить копию ОА-графа"}
   Obj={Mnemo="Line_Pop" Mk=239 Hint="Выдать линию"}
   Obj={Mnemo="Line_PopMk" Mk=240 Hint="Выдать милликоманду с линией"}
   Obj={Mnemo="Line_Excl" Mk=241 Hint="Исключить линию из списка и выдать ссылку на исключенную линию"}
   Obj={Mnemo="Line_ExclMk" Mk=242 Hint="Исключить линию из списка и выдать милликоманду со ссылкой на исключенную линию"}
   Obj={Mnemo="Line_DelMk" Mk=243 Hint="Удалить линию (перед удалением выдается ссылка на нее пото происходит удаление)"}
   Obj={Mnemo="Line_DelTreeMk" Mk=244 Hint="Удалить линим с ОА-графов (перед удалением выдается ссылка на нее пото происходит удаление)"}
   Obj={Mnemo="Line_Set" Mk=245 Hint="Установить указатель на линию"}
   Obj={Mnemo="Line_CopySet" Mk=246 Hint="Установить указатель линии на копию капсулы"}
   Obj={Mnemo="Line_TreeCopySet" Mk=247 Hint="Установить указатель линии на копию ОА-графа"}

   Obj={Mnemo="Next_Add" Mk=248 Hint="Присоединить ИК"}
   Obj={Mnemo="Next_CopyAdd" Mk=249 Hint="Присоединить копию ИК"}
   Obj={Mnemo="Next_TreeCopyAdd" Mk=250 Hint="Присоединить копию ОА-графа"}
   Obj={Mnemo="Next_Pop" Mk=251 Hint="Выдать линию"}
   Obj={Mnemo="Next_PopMk" Mk=252 Hint="Выдать милликоманду с линией"}
   Obj={Mnemo="Next_Excl" Mk=253 Hint="Исключить линию из списка и выдать ссылку на исключенную линию"}
   Obj={Mnemo="Next_ExclMk" Mk=254 Hint="Исключить линию из списка и выдать милликоманду со ссылкой на исключенную линию"}
   Obj={Mnemo="Next_DelMk" Mk=255 Hint="Удалить линию (перед удалением выдается ссылка на нее пото происходит удаление)"}
   Obj={Mnemo="Next_DelTreeMk" Mk=256 Hint="Удалить линим с ОА-графов (перед удалением выдается ссылка на нее пото происходит удаление)"}
   Obj={Mnemo="Next_Set" Mk=257 Hint="Установить указатель на линию"}
   Obj={Mnemo="Next_CopySet" Mk=258 Hint="Установить указатель линии на копию капсулы"}
   Obj={Mnemo="Next_TreeCopySet" Mk=259 Hint="Установить указатель линии на копию ОА-графа"}

   Obj={Mnemo="Next2_Add" Mk=260 Hint="Присоединить ИК"}
   Obj={Mnemo="Next2_CopyAdd" Mk=261 Hint="Присоединить копию ИК"}
   Obj={Mnemo="Next2_TreeCopyAdd" Mk=262 Hint="Присоединить копию ОА-графа"}
   Obj={Mnemo="Next2_Pop" Mk=263 Hint="Выдать линию"}
   Obj={Mnemo="Next2_PopMk" Mk=264 Hint="Выдать милликоманду с линией"}
   Obj={Mnemo="Next2_Excl" Mk=265 Hint="Исключить линию из списка и выдать ссылку на исключенную линию"}
   Obj={Mnemo="Next2_ExclMk" Mk=266 Hint="Исключить линию из списка и выдать милликоманду со ссылкой на исключенную линию"}
   Obj={Mnemo="Next2_DelMk" Mk=267 Hint="Удалить линию (перед удалением выдается ссылка на нее пото происходит удаление)"}
   Obj={Mnemo="Next2_DelTreeMk" Mk=268 Hint="Удалить линим с ОА-графов (перед удалением выдается ссылка на нее пото происходит удаление)"}
   Obj={Mnemo="Next2_Set" Mk=269 Hint="Установить указатель на линию"}
   Obj={Mnemo="Next2_CopySet" Mk=270 Hint="Установить указатель линии на копию капсулы"}
   Obj={Mnemo="Next2_TreeCopySet" Mk=271 Hint="Установить указатель линии на копию ОА-графа"}
 }
  Obj={Mnemo="IP work" Comment Hint="Работа с информационными парами"
   Obj={Mnemo="IpExcl"       Mk=350 Hint="Исключить ИП из ИК и выдать указатель на ИП"}
   Obj={Mnemo="IpExclMk"     Mk=351 Hint="Исключить ИП из ИК и выдать милликоманду с указателем на ИП"}
   Obj={Mnemo="IpDel"        Mk=352 Hint="Удать ИП"}
   Obj={Mnemo="IpDelMk"      Mk=353 Hint="Исключить ИП из ИК, выдать милликоманду с указателем на нее и удалить ИП"}
   Obj={Mnemo="IpAtrPop"     Mk=354 Hint="Выдать атрибут ИП"}
   Obj={Mnemo="IpAtrPopMk"   Mk=355 Hint="Выдать милликоманду с атрибутом ИП"}
   Obj={Mnemo="IpAtrSet"     Mk=356 Hint="Записать атрибут"}
   Obj={Mnemo="IpPointOut"   Mk=357 Hint="Выдать указатель из ИП"}
   Obj={Mnemo="IpPointOutMk" Mk=358 Hint="Выдать милликоманду с поинтером из ИП"}
   Obj={Mnemo="IpPointPop"   Mk=359 Hint="Выдать указатель из ИП"}
   Obj={Mnemo="IpPointPopMk" Mk=360 Hint="Выдать милликоманду с поинтером из ИП"}
   Obj={Mnemo="IpPointSet"   Mk=361 Hint="Установить поинтер"}
   Obj={Mnemo="IpDataSet"    Mk=362 Hint="Установить данные в ИП"}

   Obj={Mnemo="Prev2_IpExcl"       Mk=363 Hint="Исключить ИП из ИК и выдать указатель на ИП"}
   Obj={Mnemo="Prev2_IpExclMk"     Mk=364 Hint="Исключить ИП из ИК и выдать милликоманду с указателем на ИП"}
   Obj={Mnemo="Prev2_IpDel"        Mk=365 Hint="Удать ИП"}
   Obj={Mnemo="Prev2_IpDelMk"      Mk=366 Hint="Исключить ИП из ИК, выдать милликоманду с указателем на нее и удалить ИП"}
   Obj={Mnemo="Prev2_IpAtrPop"     Mk=367 Hint="Выдать атрибут ИП"}
   Obj={Mnemo="Prev2_IpAtrPopMk"   Mk=368 Hint="Выдать милликоманду с атрибутом ИП"}
   Obj={Mnemo="Prev2_IpAtrSet"     Mk=369 Hint="Записать атрибут"}
   Obj={Mnemo="Prev2_IpPointOut"   Mk=370 Hint="Выдать указатель из ИП"}
   Obj={Mnemo="Prev2_IpPointOutMk" Mk=371 Hint="Выдать милликоманду с поинтером из ИП"}
   Obj={Mnemo="Prev2_IpPointPop"   Mk=372 Hint="Выдать указатель из ИП"}
   Obj={Mnemo="Prev2_IpPointPopMk" Mk=373 Hint="Выдать милликоманду с поинтером из ИП"}
   Obj={Mnemo="Prev2_IpPointSet"   Mk=374 Hint="Установить поинтер"}
   Obj={Mnemo="Prev2_IpDataSet"    Mk=375 Hint="Установить данные в ИП"}

   Obj={Mnemo="Prev_IpExcl"       Mk=376 Hint="Исключить ИП из ИК и выдать указатель на ИП"}
   Obj={Mnemo="Prev_IpExclMk"     Mk=377 Hint="Исключить ИП из ИК и выдать милликоманду с указателем на ИП"}
   Obj={Mnemo="Prev_IpDel"        Mk=378 Hint="Удать ИП"}
   Obj={Mnemo="Prev_IpDelMk"      Mk=379 Hint="Исключить ИП из ИК, выдать милликоманду с указателем на нее и удалить ИП"}
   Obj={Mnemo="Prev_IpAtrPop"     Mk=380 Hint="Выдать атрибут ИП"}
   Obj={Mnemo="Prev_IpAtrPopMk"   Mk=381 Hint="Выдать милликоманду с атрибутом ИП"}
   Obj={Mnemo="Prev_IpAtrSet"     Mk=382 Hint="Записать атрибут"}
   Obj={Mnemo="Prev_IpPointOut"   Mk=383 Hint="Выдать указатель из ИП"}
   Obj={Mnemo="Prev_IpPointOutMk" Mk=384 Hint="Выдать милликоманду с поинтером из ИП"}
   Obj={Mnemo="Prev_IpPointPop"   Mk=385 Hint="Выдать указатель из ИП"}
   Obj={Mnemo="Prev_IpPointPopMk" Mk=386 Hint="Выдать милликоманду с поинтером из ИП"}
   Obj={Mnemo="Prev_IpPointSet"   Mk=387 Hint="Установить поинтер"}
   Obj={Mnemo="Prev_IpDataSet"    Mk=388 Hint="Установить данные в ИП"}

   Obj={Mnemo="Line_IpExcl"       Mk=389 Hint="Исключить ИП из ИК и выдать указатель на ИП"}
   Obj={Mnemo="Line_IpExclMk"     Mk=390 Hint="Исключить ИП из ИК и выдать милликоманду с указателем на ИП"}
   Obj={Mnemo="Line_IpDel"        Mk=391 Hint="Удать ИП"}
   Obj={Mnemo="Line_IpDelMk"      Mk=392 Hint="Исключить ИП из ИК, выдать милликоманду с указателем на нее и удалить ИП"}
   Obj={Mnemo="Line_IpAtrPop"     Mk=393 Hint="Выдать атрибут ИП"}
   Obj={Mnemo="Line_IpAtrPopMk"   Mk=394 Hint="Выдать милликоманду с атрибутом ИП"}
   Obj={Mnemo="Line_IpAtrSet"     Mk=395 Hint="Записать атрибут"}
   Obj={Mnemo="Line_IpPointOut"   Mk=396 Hint="Выдать указатель из ИП"}
   Obj={Mnemo="Line_IpPointOutMk" Mk=397 Hint="Выдать милликоманду с поинтером из ИП"}
   Obj={Mnemo="Line_IpPointPop"   Mk=398 Hint="Выдать указатель из ИП"}
   Obj={Mnemo="Line_IpPointPopMk" Mk=390 Hint="Выдать милликоманду с поинтером из ИП"}
   Obj={Mnemo="Line_IpPointSet"   Mk=400 Hint="Установить поинтер"}
   Obj={Mnemo="Line_IpDataSet"    Mk=401 Hint="Установить данные в ИП"}

   Obj={Mnemo="Next_IpExcl"       Mk=402 Hint="Исключить ИП из ИК и выдать указатель на ИП"}
   Obj={Mnemo="Next_IpExclMk"     Mk=403 Hint="Исключить ИП из ИК и выдать милликоманду с указателем на ИП"}
   Obj={Mnemo="Next_IpDel"        Mk=404 Hint="Удать ИП"}
   Obj={Mnemo="Next_IpDelMk"      Mk=405 Hint="Исключить ИП из ИК, выдать милликоманду с указателем на нее и удалить ИП"}
   Obj={Mnemo="Next_IpAtrPop"     Mk=406 Hint="Выдать атрибут ИП"}
   Obj={Mnemo="Next_IpAtrPopMk"   Mk=407 Hint="Выдать милликоманду с атрибутом ИП"}
   Obj={Mnemo="Next_IpAtrSet"     Mk=408 Hint="Записать атрибут"}
   Obj={Mnemo="Next_IpPointOut"   Mk=409 Hint="Выдать указатель из ИП"}
   Obj={Mnemo="Next_IpPointOutMk" Mk=410 Hint="Выдать милликоманду с поинтером из ИП"}
   Obj={Mnemo="Next_IpPointPop"   Mk=411 Hint="Выдать указатель из ИП"}
   Obj={Mnemo="Next_IpPointPopMk" Mk=412 Hint="Выдать милликоманду с поинтером из ИП"}
   Obj={Mnemo="Next_IpPointSet"   Mk=413 Hint="Установить поинтер"}
   Obj={Mnemo="Next_IpDataSet"    Mk=414 Hint="Установить данные в ИП"}

   Obj={Mnemo="Next2_IpExcl"       Mk=415 Hint="Исключить ИП из ИК и выдать указатель на ИП"}
   Obj={Mnemo="Next2_IpExclMk"     Mk=416 Hint="Исключить ИП из ИК и выдать милликоманду с указателем на ИП"}
   Obj={Mnemo="Next2_IpDel"        Mk=417 Hint="Удать ИП"}
   Obj={Mnemo="Next2_IpDelMk"      Mk=418 Hint="Исключить ИП из ИК, выдать милликоманду с указателем на нее и удалить ИП"}
   Obj={Mnemo="Next2_IpAtrPop"     Mk=419 Hint="Выдать атрибут ИП"}
   Obj={Mnemo="Next2_IpAtrPopMk"   Mk=420 Hint="Выдать милликоманду с атрибутом ИП"}
   Obj={Mnemo="Next2_IpAtrSet"     Mk=421 Hint="Записать атрибут"}
   Obj={Mnemo="Next2_IpPointOut"   Mk=422 Hint="Выдать указатель из ИП"}
   Obj={Mnemo="Next2_IpPointOutMk" Mk=423 Hint="Выдать милликоманду с поинтером из ИП"}
   Obj={Mnemo="Next2_IpPointPop"   Mk=424 Hint="Выдать указатель из ИП"}
   Obj={Mnemo="Next2_IpPointPopMk" Mk=425 Hint="Выдать милликоманду с поинтером из ИП"}
   Obj={Mnemo="Next2_IpPointSet"   Mk=426 Hint="Установить поинтер"}
   Obj={Mnemo="Next2_IpDataSet"    Mk=427 Hint="Установить данные в ИП"}
 }
  Obj={Mnemo="ProgSet" Hint="Установка подпрограмм для событий" Comment
   Obj={Mnemo="RootRowDelProgSet" Mk=97 Hint="Подрограмма, запускаемая при удалении линии из корневого списка (списка первого уровня)"}
   Obj={Mnemo="ListDelProgSet" Mk=98 Hint="Подрограмма, запускаемая при удалении всего списка"}

   Obj={Mnemo="DownNoProgSet" Mk=99 Hint="Установить ссылку на подпрограмму, запускаемую при невозможности спуска на уровень ниже"}
 }
   Obj={Mnemo="AutoBranchDelMkSet" Mk=96 Hint="Установить милликоманду, запускаемую при неудаче согласования слов (по умолчанию ForkTreeDel)"}
//   Obj={Mnemo="AutoLexDelModeSet" Mk=95 Hint="Режим удаления сцепляемой лексемы (0 - не удалятьб 1 - исключать линию списка, 2 - удалять линию, 3 - удалять линию вместе с ОА-деревом) (по умолчанию режим 3)"}

  Obj={Mnemo="Accum work" Hint="Работа с аккумулятором (для сравнения друх ИК между собой)" Comment
	Obj={Mnemo="Accum_Set"  Mk=700 Hint="Установить в аккумулятор указатель на капсулу (первый аккумулятор)"}
	Obj={Mnemo="Accum2_Set" Mk=701 Hint="Установить в аккумулятор указатель на капсулу (второй аккумулятор)"}
	Obj={Mnemo="Accum3_Set" Mk=702 Hint="Установить в аккумулятор указатель на капсулу (третий аккумулятор)"}
	Obj={Mnemo="Accum4_Set" Mk=703 Hint="Установить в аккумулятор указатель на капсулу (четвертый аккумулятор)"}
	Obj={Mnemo="Accum5_Set" Mk=704 Hint="Установить в аккумулятор указатель на капсулу (пятый аккумулятор)"}

	Obj={Mnemo="Accum_ProgSet"  Mk=705 Hint="Установить программу по успехи и неуспеху поиска (ссылки на подпрограмы передаются в виде ОА-списка) (первый аккумулятор)"}
	Obj={Mnemo="Accum2_ProgSet" Mk=706 Hint="Установить программу по успехи и неуспеху поиска (ссылки на подпрограмы передаются в виде ОА-списка) (второй аккумулятор)"}
     Obj={Mnemo="Accum3_ProgSet" Mk=707 Hint="Установить программу по успехи и неуспеху поиска (ссылки на подпрограмы передаются в виде ОА-списка) (третий аккумулятор)"}
	Obj={Mnemo="Accum4_ProgSet" Mk=708 Hint="Установить программу по успехи и неуспеху поиска (ссылки на подпрограмы передаются в виде ОА-списка) (четвертый аккумулятор)"}
	Obj={Mnemo="Accum4_ProgSet" Mk=709 Hint="Установить программу по успехи и неуспеху поиска (ссылки на подпрограмы передаются в виде ОА-списка) (пятый аккумулятор)"}

	Obj={Mnemo="Accum_Or"  Mk=710 Hint="Сравнить по правилу ИЛИ (первый аккумулятор)"}
	Obj={Mnemo="Accum2_Or" Mk=711 Hint="Сравнить по правилу ИЛИ (второй аккумулятор)"}
	Obj={Mnemo="Accum3_Or" Mk=712 Hint="Сравнить по правилу ИЛИ (третий аккумулятор)"}
	Obj={Mnemo="Accum4_Or" Mk=713 Hint="Сравнить по правилу ИЛИ (четвертый аккумулятор)"}
	Obj={Mnemo="Accum5_Or" Mk=714 Hint="Сравнить по правилу ИЛИ (пятый аккумулятор)"}

	Obj={Mnemo="Accum_And"  Mk=715 Hint="Сравнить по правилу И (первый аккумулятор)"}
	Obj={Mnemo="Accum2_And" Mk=716 Hint="Сравнить по правилу И  (второй аккумулятор)"}
	Obj={Mnemo="Accum3_And" Mk=717 Hint="Сравнить по правилу И (третий аккумулятор)"}
	Obj={Mnemo="Accum4_And" Mk=718 Hint="Сравнить по правилу И (четвертый аккумулятор)"}
	Obj={Mnemo="Accum5_And" Mk=719 Hint="Сравнить по правилу И (пятый аккумулятор)"}

	Obj={Mnemo="Accum_AndAtr"  Mk=720 Hint="Сравнить по правилу И по атрибуту (первый аккумулятор)"}
	Obj={Mnemo="Accum2_AndAtr" Mk=721 Hint="Сравнить по правилу И по атрибуту (второй аккумулятор)"}
	Obj={Mnemo="Accum3_AndAtr" Mk=722 Hint="Сравнить по правилу И по атрибуту (второй аккумулятор)"}
	Obj={Mnemo="Accum4_AndAtr" Mk=723 Hint="Сравнить по правилу И по атрибуту (четвертый аккумулятор)"}
	Obj={Mnemo="Accum5_AndAtr" Mk=724 Hint="Сравнить по правилу И по атрибуту (пятый аккумулятор)"}

	Obj={Mnemo="OrAccum"  Mk=725 Hint="Сравнить по правилу ИЛИ (первый аккумулятор)"}
	Obj={Mnemo="OrAccum2" Mk=726 Hint="Сравнить по правилу ИЛИ (второй аккумулятор)"}
	Obj={Mnemo="OrAccum3" Mk=727 Hint="Сравнить по правилу ИЛИ (третий аккумулятор)"}
	Obj={Mnemo="OrAccum4" Mk=728 Hint="Сравнить по правилу ИЛИ (четвертый аккумулятор)"}
	Obj={Mnemo="OrAccum5" Mk=729 Hint="Сравнить по правилу ИЛИ (пятый аккумулятор)"}

	Obj={Mnemo="AndAccum"  Mk=730 Hint="Сравнить по правилу И (первый аккумулятор)"}
	Obj={Mnemo="AndAccum2" Mk=731 Hint="Сравнить по правилу И (второй аккумулятор)"}
	Obj={Mnemo="AndAccum3" Mk=732 Hint="Сравнить по правилу И (третий аккумулятор)"}
	Obj={Mnemo="AndAccum4" Mk=733 Hint="Сравнить по правилу И (четвертый аккумулятор)"}
	Obj={Mnemo="AndAccum5" Mk=734 Hint="Сравнить по правилу И (пятый аккумулятор)"}

	Obj={Mnemo="AndAtrAccum"  Mk=735 Hint="Сравнить по правилу И по атрубуту (первый аккумулятор)"}
	Obj={Mnemo="AndAtrAccum2" Mk=736 Hint="Сравнить по правилу И по атрубуту (второй аккумулятор)"}
	Obj={Mnemo="AndAtrAccum3" Mk=737 Hint="Сравнить по правилу И по атрубуту (третий аккумулятор)"}
	Obj={Mnemo="AndAtrAccum4" Mk=738 Hint="Сравнить по правилу И по атрубуту"}
	Obj={Mnemo="AndAtrAccum5" Mk=739 Hint="Сравнить по правилу И по атрубуту"}
  }

  Obj={Mnemo="AtrLoad work" Hint="Работа с заразервированными атрибутами" Comment
	Obj={Mnemo="Atr1Set" Mk=745 Hint="Установить атрибут для поиска"}
	Obj={Mnemo="Atr2Set" Mk=746 Hint="Установить атрибут дка"}
	Obj={Mnemo="Atr3Set" Mk=747 Hint="Установить атрибут для поиска"}
//	Obj={Mnemo="Atr4Set" Mk=498 Hint="Установить атрибут для поиска"}
//	Obj={Mnemo="Atr5Set" Mk=499 Hint="Установить атрибут для поиска"}

	Obj={Mnemo="Atr1PointOut"      Mk=430 Hint="Выдать указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Atr1PointOutMk"    Mk=431 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Atr1PointPop"      Mk=432 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Atr1PointPopMk"    Mk=433 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Atr1DataPop"       Mk=434 Hint="Выдать данные из нагрузки ИП с атрибутом Atr"}
	Obj={Mnemo="Atr1IpOut"         Mk=435 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Atr1IpOutMk"       Mk=436 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Atr1IpPop"         Mk=436 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Atr1IpPopMk"       Mk=438 Hint="Переместить милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Atr1AtrSet"        Mk=439 Hint="Выдать указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Atr1DataSet"       Mk=440 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Atr1PointSet"      Mk=441 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Atr1IcAdd"         Mk=442 Hint="Прицепить к ИК из нагрузки из ИП с атрибутом Atr ИК из нагрзуки Мк"}
	Obj={Mnemo="Atr1IcCopyAdd"     Mk=443 Hint="Прицепить к ИК из нагрузки из ИП с атрибутом Atr копию ИК из нагрзуки Мк"}
	Obj={Mnemo="Atr1IcTreeCopyAdd" Mk=444 Hint="Прицепить к ИК из нагрузки из ИП с атрибутом Atr копию ОА-графа из нагрзуки Мк"}
	Obj={Mnemo="Atr1LoadPointSet " Mk=445 Hint="Установить указатель в ИП из нагрузки ИП с атрибутом Atr"}

	Obj={Mnemo="Atr2PointOut"      Mk=446 Hint="Выдать указатель из из ИП с атрибутом Atr"}
	Obj={Mnemo="Atr2PointOutMk"    Mk=447 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Atr2PointPop"      Mk=448 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Atr2PointPopMk"    Mk=449 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Atr2DataPop"       Mk=450 Hint="Выдать данные из нагрузки ИП с атрибутом Atr"}
	Obj={Mnemo="Atr2IpOut"         Mk=451 Hint="Выдать указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Atr2IpOutMk"       Mk=452 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Atr2IpPop"         Mk=453 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Atr2IpPopMk"       Mk=454 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Atr2AtrSet"        Mk=455 Hint="Выдать указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Atr2DataSet"       Mk=456 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Atr2PointSet"      Mk=457 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Atr2IcAdd"         Mk=458 Hint="Прицепить к ИК из нагрузки из ИП с атрибутом Atr ИК из нагрзуки Мк"}
	Obj={Mnemo="Atr2IcCopyAdd"     Mk=459 Hint="Прицепить к ИК из нагрузки из ИП с атрибутом Atr копию ИК из нагрзуки Мк"}
	Obj={Mnemo="Atr2IcTreeCopyAdd" Mk=460 Hint="Прицепить к ИК из нагрузки из ИП с атрибутом Atr копию ОА-графа из нагрзуки Мк"}
	Obj={Mnemo="Atr2LoadPointSet " Mk=461 Hint="Установить указатель в ИП из нагрузки ИП с атрибутом Atr"}

	Obj={Mnemo="Atr3PointOut"      Mk=462 Hint="Выдать указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Atr3PointOutMk"    Mk=463 Hint="Выдать милликоманду с указателем ИП с атрибутом Atr"}
	Obj={Mnemo="Atr3PointPop"      Mk=464 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Atr3PointPopMk"    Mk=465 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Atr3DataPop"       Mk=466 Hint="Выдать данные из нагрузки ИП с атрибутом Atr"}
	Obj={Mnemo="Atr3IpOut"         Mk=467 Hint="Выдать указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Atr3IpOutMk"       Mk=468 Hint="Выдать милликоманду с указателем ИП с атрибутом Atr"}
	Obj={Mnemo="Atr3IpPop"         Mk=469 Hint="Выдать указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Atr3IpPopMk"       Mk=470 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Atr3AtrSet"        Mk=471 Hint="Выдать указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Atr3DataSet"       Mk=472 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Atr3PointSet"      Mk=473 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Atr3IcAdd"         Mk=474 Hint="Прицепить к ИК из нагрузки из ИП с атрибутом Atr ИК из нагрзуки Мк"}
	Obj={Mnemo="Atr3IcCopyAdd"     Mk=475 Hint="Прицепить к ИК из нагрузки из ИП с атрибутом Atr копию ИК из нагрзуки Мк"}
	Obj={Mnemo="Atr3IcTreeCopyAdd" Mk=476 Hint="Прицепить к ИК из нагрузки из ИП с атрибутом Atr копию ОА-графа из нагрзуки Мк"}
	Obj={Mnemo="Atr3LoadPointSet " Mk=477 Hint="Установить указатель в ИП из нагрузки ИП с атрибутом Atr"}

	Obj={Mnemo="Prev2_Atr1PointOut"      Mk=478 Hint="Выдать указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev2_Atr1PointOutMk"    Mk=479 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev2_Atr1PointPop"      Mk=480 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev2_Atr1PointPopMk"    Mk=481 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev2_Atr1DataPop"       Mk=482 Hint="Выдать данные из нагрузки ИП с атрибутом Atr"}
	Obj={Mnemo="Prev2_Atr1IpOut"         Mk=483 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev2_Atr1IpOutMk"       Mk=484 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev2_Atr1IpPop"         Mk=485 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev2_Atr1IpPopMk"       Mk=486 Hint="Переместить милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev2_Atr1AtrSet"        Mk=487 Hint="Выдать указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev2_Atr1DataSet"       Mk=488 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev2_Atr1PointSet"      Mk=489 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev2_Atr1IcAdd"         Mk=490 Hint="Прицепить к ИК из нагрузки из ИП с атрибутом Atr ИК из нагрзуки Мк"}
	Obj={Mnemo="Prev2_Atr1IcCopyAdd"     Mk=491 Hint="Прицепить к ИК из нагрузки из ИП с атрибутом Atr копию ИК из нагрзуки Мк"}
	Obj={Mnemo="Prev2_Atr1IcTreeCopyAdd" Mk=492 Hint="Прицепить к ИК из нагрузки из ИП с атрибутом Atr копию ОА-графа из нагрзуки Мк"}
	Obj={Mnemo="Prev2_Atr1LoadPointSet " Mk=493 Hint="Установить указатель в ИП из нагрузки ИП с атрибутом Atr"}

	Obj={Mnemo="Prev2_Atr2PointOut"      Mk=494 Hint="Выдать указатель из из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev2_Atr2PointOutMk"    Mk=495 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev2_Atr2PointPop"      Mk=496 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev2_Atr2PointPopMk"    Mk=497 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev2_Atr2DataPop"       Mk=498 Hint="Выдать данные из нагрузки ИП с атрибутом Atr"}
	Obj={Mnemo="Prev2_Atr2IpOut"         Mk=499 Hint="Выдать указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev2_Atr2IpOutMk"       Mk=500 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev2_Atr2IpPop"         Mk=501 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev2_Atr2IpPopMk"       Mk=502 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev2_Atr2AtrSet"        Mk=503 Hint="Выдать указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev2_Atr2DataSet"       Mk=504 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev2_Atr2PointSet"      Mk=505 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev2_Atr2IcAdd"         Mk=506 Hint="Прицепить к ИК из нагрузки из ИП с атрибутом Atr ИК из нагрзуки Мк"}
	Obj={Mnemo="Prev2_Atr2IcCopyAdd"     Mk=507 Hint="Прицепить к ИК из нагрузки из ИП с атрибутом Atr копию ИК из нагрзуки Мк"}
	Obj={Mnemo="Prev2_Atr2IcTreeCopyAdd" Mk=508 Hint="Прицепить к ИК из нагрузки из ИП с атрибутом Atr копию ОА-графа из нагрзуки Мк"}
	Obj={Mnemo="Prev2_Atr2LoadPointSet " Mk=509 Hint="Установить указатель в ИП из нагрузки ИП с атрибутом Atr"}

	Obj={Mnemo="Prev2_Atr3PointOut"      Mk=510 Hint="Выдать указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev2_Atr3PointOutMk"    Mk=511 Hint="Выдать милликоманду с указателем ИП с атрибутом Atr"}
	Obj={Mnemo="Prev2_Atr3PointPop"      Mk=512 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev2_Atr3PointPopMk"    Mk=513 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev2_Atr3DataPop"       Mk=514 Hint="Выдать данные из нагрузки ИП с атрибутом Atr"}
	Obj={Mnemo="Prev2_Atr3IpOut"         Mk=515 Hint="Выдать указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev2_Atr3IpOutMk"       Mk=516 Hint="Выдать милликоманду с указателем ИП с атрибутом Atr"}
	Obj={Mnemo="Prev2_Atr3IpPop"         Mk=517 Hint="Выдать указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev2_Atr3IpPopMk"       Mk=518 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev2_Atr3AtrSet"        Mk=519 Hint="Выдать указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev2_Atr3DataSet"       Mk=520 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev2_Atr3PointSet"      Mk=521 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev2_Atr3IcAdd"         Mk=522 Hint="Прицепить к ИК из нагрузки из ИП с атрибутом Atr ИК из нагрзуки Мк"}
	Obj={Mnemo="Prev2_Atr3IcCopyAdd"     Mk=523 Hint="Прицепить к ИК из нагрузки из ИП с атрибутом Atr копию ИК из нагрзуки Мк"}
	Obj={Mnemo="Prev2_Atr3IcTreeCopyAdd" Mk=524 Hint="Прицепить к ИК из нагрузки из ИП с атрибутом Atr копию ОА-дерева из нагрзуки Мк"}
	Obj={Mnemo="Prev2_Atr3LoadPointSet " Mk=525 Hint="Установить указатель в ИП из нагрузки ИП с атрибутом Atr"}

	Obj={Mnemo="Prev_Atr1PointOut"      Mk=526 Hint="Выдать указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev_Atr1PointOutMk"    Mk=527 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev_Atr1PointPop"      Mk=528 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev_Atr1PointPopMk"    Mk=529 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev_Atr1DataPop"       Mk=530 Hint="Выдать данные из нагрузки ИП с атрибутом Atr"}
	Obj={Mnemo="Prev_Atr1IpOut"         Mk=531 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev_Atr1IpOutMk"       Mk=532 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev_Atr1IpPop"         Mk=533 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev_Atr1IpPopMk"       Mk=534 Hint="Переместить милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev_Atr1AtrSet"        Mk=535 Hint="Выдать указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev_Atr1DataSet"       Mk=536 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev_Atr1PointSet"      Mk=537 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev_Atr1IcAdd"         Mk=538 Hint="Прицепить к ИК из нагрузки из ИП с атрибутом Atr ИК из нагрзуки Мк"}
	Obj={Mnemo="Prev_Atr1IcCopyAdd"     Mk=539 Hint="Прицепить к ИК из нагрузки из ИП с атрибутом Atr копию ИК из нагрзуки Мк"}
	Obj={Mnemo="Prev_Atr1IcTreeCopyAdd" Mk=540 Hint="Прицепить к ИК из нагрузки из ИП с атрибутом Atr копию ОА-графа из нагрзуки Мк"}
	Obj={Mnemo="Prev_Atr1LoadPointSet " Mk=541 Hint="Установить указатель в ИП из нагрузки ИП с атрибутом Atr"}

	Obj={Mnemo="Prev_Atr2PointOut"      Mk=542 Hint="Выдать указатель из из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev_Atr2PointOutMk"    Mk=543 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev_Atr2PointPop"      Mk=544 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev_Atr2PointPopMk"    Mk=545 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev_Atr2DataPop"       Mk=546 Hint="Выдать данные из нагрузки ИП с атрибутом Atr"}
	Obj={Mnemo="Prev_Atr2IpOut"         Mk=547 Hint="Выдать указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev_Atr2IpOutMk"       Mk=548 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev_Atr2IpPop"         Mk=549 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev_Atr2IpPopMk"       Mk=550 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev_Atr2AtrSet"        Mk=551 Hint="Выдать указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev_Atr2DataSet"       Mk=552 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev_Atr2PointSet"      Mk=553 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev_Atr2IcAdd"         Mk=554 Hint="Прицепить к ИК из нагрузки из ИП с атрибутом Atr ИК из нагрзуки Мк"}
	Obj={Mnemo="Prev_Atr2IcCopyAdd"     Mk=555 Hint="Прицепить к ИК из нагрузки из ИП с атрибутом Atr копию ИК из нагрзуки Мк"}
	Obj={Mnemo="Prev_Atr2IcTreeCopyAdd" Mk=556 Hint="Прицепить к ИК из нагрузки из ИП с атрибутом Atr копию ОА-графа из нагрзуки Мк"}
	Obj={Mnemo="Prev_Atr2LoadPointSet " Mk=557 Hint="Установить указатель в ИП из нагрузки ИП с атрибутом Atr"}

	Obj={Mnemo="Prev_Atr3PointOut"      Mk=558 Hint="Выдать указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev_Atr3PointOutMk"    Mk=559 Hint="Выдать милликоманду с указателем ИП с атрибутом Atr"}
	Obj={Mnemo="Prev_Atr3PointPop"      Mk=560 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev_Atr3PointPopMk"    Mk=561 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev_Atr3DataPop"       Mk=562 Hint="Выдать данные из нагрузки ИП с атрибутом Atr"}
	Obj={Mnemo="Prev_Atr3IpOut"         Mk=563 Hint="Выдать указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev_Atr3IpOutMk"       Mk=564 Hint="Выдать милликоманду с указателем ИП с атрибутом Atr"}
	Obj={Mnemo="Prev_Atr3IpPop"         Mk=565 Hint="Выдать указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev_Atr3IpPopMk"       Mk=566 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev_Atr3AtrSet"        Mk=567 Hint="Выдать указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev_Atr3DataSet"       Mk=568 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev_Atr3PointSet"      Mk=569 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Prev_Atr3IcAdd"         Mk=570 Hint="Прицепить к ИК из нагрузки из ИП с атрибутом Atr ИК из нагрзуки Мк"}
	Obj={Mnemo="Prev_Atr3IcCopyAdd"     Mk=571 Hint="Прицепить к ИК из нагрузки из ИП с атрибутом Atr копию ИК из нагрзуки Мк"}
	Obj={Mnemo="Prev_Atr3IcTreeCopyAdd" Mk=572 Hint="Прицепить к ИК из нагрузки из ИП с атрибутом Atr копию ОА-графа из нагрзуки Мк"}
	Obj={Mnemo="Prev_Atr3LoadPointSet " Mk=573 Hint="Установить указатель в ИП из нагрузки ИП с атрибутом Atr"}

	Obj={Mnemo="Line_Atr1PointOut"      Mk=574 Hint="Выдать указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Line_Atr1PointOutMk"    Mk=575 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Line_Atr1PointPop"      Mk=576 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Line_Atr1PointPopMk"    Mk=577 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Line_Atr1DataPop"       Mk=578 Hint="Выдать данные из нагрузки ИП с атрибутом Atr"}
	Obj={Mnemo="Line_Atr1IpOut"         Mk=579 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Line_Atr1IpOutMk"       Mk=580 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Line_Atr1IpPop"         Mk=581 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Line_Atr1IpPopMk"       Mk=582 Hint="Переместить милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Line_Atr1AtrSet"        Mk=583 Hint="Выдать указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Line_Atr1DataSet"       Mk=584 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Line_Atr1PointSet"      Mk=585 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Line_Atr1IcAdd"         Mk=586 Hint="Прицепить к ИК из нагрузки из ИП с атрибутом Atr ИК из нагрзуки Мк"}
	Obj={Mnemo="Line_Atr1IcCopyAdd"     Mk=587 Hint="Прицепить к ИК из нагрузки из ИП с атрибутом Atr копию ИК из нагрзуки Мк"}
	Obj={Mnemo="Line_Atr1IcTreeCopyAdd" Mk=588 Hint="Прицепить к ИК из нагрузки из ИП с атрибутом Atr копию ОА-графа из нагрзуки Мк"}
	Obj={Mnemo="Line_Atr1LoadPointSet " Mk=589 Hint="Установить указатель в ИП из нагрузки ИП с атрибутом Atr"}

	Obj={Mnemo="Line_Atr2PointOut"      Mk=590 Hint="Выдать указатель из из ИП с атрибутом Atr"}
	Obj={Mnemo="Line_Atr2PointOutMk"    Mk=591 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Line_Atr2PointPop"      Mk=592 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Line_Atr2PointPopMk"    Mk=593 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Line_Atr2DataPop"       Mk=594 Hint="Выдать данные из нагрузки ИП с атрибутом Atr"}
	Obj={Mnemo="Line_Atr2IpOut"         Mk=595 Hint="Выдать указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Line_Atr2IpOutMk"       Mk=596 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Line_Atr2IpPop"         Mk=597 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Line_Atr2IpPopMk"       Mk=598 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Line_Atr2AtrSet"        Mk=599 Hint="Выдать указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Line_Atr2DataSet"       Mk=600 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Line_Atr2PointSet"      Mk=601 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Line_Atr2IcAdd"         Mk=602 Hint="Прицепить к ИК из нагрузки из ИП с атрибутом Atr ИК из нагрзуки Мк"}
	Obj={Mnemo="Line_Atr2IcCopyAdd"     Mk=603 Hint="Прицепить к ИК из нагрузки из ИП с атрибутом Atr копию ИК из нагрзуки Мк"}
	Obj={Mnemo="Line_Atr2IcTreeCopyAdd" Mk=604 Hint="Прицепить к ИК из нагрузки из ИП с атрибутом Atr копию ОА-графа из нагрзуки Мк"}
	Obj={Mnemo="Line_Atr2LoadPointSet " Mk=605 Hint="Установить указатель в ИП из нагрузки ИП с атрибутом Atr"}

	Obj={Mnemo="Line_Atr3PointOut"      Mk=606 Hint="Выдать указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Line_Atr3PointOutMk"    Mk=607 Hint="Выдать милликоманду с указателем ИП с атрибутом Atr"}
	Obj={Mnemo="Line_Atr3PointPop"      Mk=608 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Line_Atr3PointPopMk"    Mk=609 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Line_Atr3DataPop"       Mk=610 Hint="Выдать данные из нагрузки ИП с атрибутом Atr"}
	Obj={Mnemo="Line_Atr3IpOut"         Mk=611 Hint="Выдать указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Line_Atr3IpOutMk"       Mk=612 Hint="Выдать милликоманду с указателем ИП с атрибутом Atr"}
	Obj={Mnemo="Line_Atr3IpPop"         Mk=613 Hint="Выдать указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Line_Atr3IpPopMk"       Mk=614 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Line_Atr3AtrSet"        Mk=615 Hint="Выдать указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Line_Atr3DataSet"       Mk=616 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Line_Atr3PointSet"      Mk=617 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Line_Atr3IcAdd"         Mk=618 Hint="Прицепить к ИК из нагрузки из ИП с атрибутом Atr ИК из нагрзуки Мк"}
	Obj={Mnemo="Line_Atr3IcCopyAdd"     Mk=619 Hint="Прицепить к ИК из нагрузки из ИП с атрибутом Atr копию ИК из нагрзуки Мк"}
	Obj={Mnemo="Line_Atr3IcTreeCopyAdd" Mk=620 Hint="Прицепить к ИК из нагрузки из ИП с атрибутом Atr копию ОА-графа из нагрзуки Мк"}
	Obj={Mnemo="Line_Atr3LoadPointSet " Mk=621 Hint="Установить указатель в ИП из нагрузки ИП с атрибутом Atr"}

	Obj={Mnemo="Next_Atr1PointOut"      Mk=622 Hint="Выдать указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Next_Atr1PointOutMk"    Mk=623 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Next_Atr1PointPop"      Mk=624 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Next_Atr1PointPopMk"    Mk=625 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Next_Atr1DataPop"       Mk=626 Hint="Выдать данные из нагрузки ИП с атрибутом Atr"}
	Obj={Mnemo="Next_Atr1IpOut"         Mk=627 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Next_Atr1IpOutMk"       Mk=628 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Next_Atr1IpPop"         Mk=629 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Next_Atr1IpPopMk"       Mk=630 Hint="Переместить милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Next_Atr1AtrSet"        Mk=631 Hint="Выдать указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Next_Atr1DataSet"       Mk=632 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Next_Atr1PointSet"      Mk=633 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Next_Atr1IcAdd"         Mk=634 Hint="Прицепить к ИК из нагрузки из ИП с атрибутом Atr ИК из нагрзуки Мк"}
	Obj={Mnemo="Next_Atr1IcCopyAdd"     Mk=635 Hint="Прицепить к ИК из нагрузки из ИП с атрибутом Atr копию ИК из нагрзуки Мк"}
	Obj={Mnemo="Next_Atr1IcTreeCopyAdd" Mk=636 Hint="Прицепить к ИК из нагрузки из ИП с атрибутом Atr копию ОА-графа из нагрзуки Мк"}
	Obj={Mnemo="Next_Atr1LoadPointSet " Mk=637 Hint="Установить указатель в ИП из нагрузки ИП с атрибутом Atr"}

	Obj={Mnemo="Next_Atr2PointOut"      Mk=638 Hint="Выдать указатель из из ИП с атрибутом Atr"}
	Obj={Mnemo="Next_Atr2PointOutMk"    Mk=639 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Next_Atr2PointPop"      Mk=640 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Next_Atr2PointPopMk"    Mk=641 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Next_Atr2DataPop"       Mk=642 Hint="Выдать данные из нагрузки ИП с атрибутом Atr"}
	Obj={Mnemo="Next_Atr2IpOut"         Mk=643 Hint="Выдать указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Next_Atr2IpOutMk"       Mk=644 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Next_Atr2IpPop"         Mk=645 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Next_Atr2IpPopMk"       Mk=646 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Next_Atr2AtrSet"        Mk=647 Hint="Выдать указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Next_Atr2DataSet"       Mk=648 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Next_Atr2PointSet"      Mk=649 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Next_Atr2IcAdd"         Mk=650 Hint="Прицепить к ИК из нагрузки из ИП с атрибутом Atr ИК из нагрзуки Мк"}
	Obj={Mnemo="Next_Atr2IcCopyAdd"     Mk=651 Hint="Прицепить к ИК из нагрузки из ИП с атрибутом Atr копию ИК из нагрзуки Мк"}
	Obj={Mnemo="Next_Atr2IcTreeCopyAdd" Mk=652 Hint="Прицепить к ИК из нагрузки из ИП с атрибутом Atr копию ОА-графа из нагрзуки Мк"}
	Obj={Mnemo="Next_Atr2LoadPointSet " Mk=653 Hint="Установить указатель в ИП из нагрузки ИП с атрибутом Atr"}

	Obj={Mnemo="Next_Atr3PointOut"      Mk=654 Hint="Выдать указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Next_Atr3PointOutMk"    Mk=655 Hint="Выдать милликоманду с указателем ИП с атрибутом Atr"}
	Obj={Mnemo="Next_Atr3PointPop"      Mk=656 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Next_Atr3PointPopMk"    Mk=657 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Next_Atr3DataPop"       Mk=658 Hint="Выдать данные из нагрузки ИП с атрибутом Atr"}
	Obj={Mnemo="Next_Atr3IpOut"         Mk=659 Hint="Выдать указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Next_Atr3IpOutMk"       Mk=660 Hint="Выдать милликоманду с указателем ИП с атрибутом Atr"}
	Obj={Mnemo="Next_Atr3IpPop"         Mk=661 Hint="Выдать указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Next_Atr3IpPopMk"       Mk=662 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Next_Atr3AtrSet"        Mk=663 Hint="Выдать указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Next_Atr3DataSet"       Mk=664 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Next_Atr3PointSet"      Mk=665 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Next_Atr3IcAdd"         Mk=666 Hint="Прицепить к ИК из нагрузки из ИП с атрибутом Atr ИК из нагрзуки Мк"}
	Obj={Mnemo="Next_Atr3IcCopyAdd"     Mk=667 Hint="Прицепить к ИК из нагрузки из ИП с атрибутом Atr копию ИК из нагрзуки Мк"}
	Obj={Mnemo="Next_Atr3IcTreeCopyAdd" Mk=668 Hint="Прицепить к ИК из нагрузки из ИП с атрибутом Atr копию ОА-графа из нагрзуки Мк"}
	Obj={Mnemo="Next_Atr3LoadPointSet " Mk=669 Hint="Установить указатель в ИП из нагрузки ИП с атрибутом Atr"}

	Obj={Mnemo="Next2_Atr1PointOut"      Mk=670 Hint="Выдать указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Next2_Atr1PointOutMk"    Mk=671 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Next2_Atr1PointPop"      Mk=672 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Next2_Atr1PointPopMk"    Mk=673 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Next2_Atr1DataPop"       Mk=674 Hint="Выдать данные из нагрузки ИП с атрибутом Atr"}
	Obj={Mnemo="Next2_Atr1IpOut"         Mk=675 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Next2_Atr1IpOutMk"       Mk=676 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Next2_Atr1IpPop"         Mk=677 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Next2_Atr1IpPopMk"       Mk=678 Hint="Переместить милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Next2_Atr1AtrSet"        Mk=679 Hint="Выдать указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Next2_Atr1DataSet"       Mk=680 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Next2_Atr1PointSet"      Mk=681 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Next2_Atr1IcAdd"         Mk=682 Hint="Прицепить к ИК из нагрузки из ИП с атрибутом Atr ИК из нагрзуки Мк"}
	Obj={Mnemo="Next2_Atr1IcCopyAdd"     Mk=683 Hint="Прицепить к ИК из нагрузки из ИП с атрибутом Atr копию ИК из нагрзуки Мк"}
	Obj={Mnemo="Next2_Atr1IcTreeCopyAdd" Mk=684 Hint="Прицепить к ИК из нагрузки из ИП с атрибутом Atr копию ОА-графа из нагрзуки Мк"}
	Obj={Mnemo="Next2_Atr1LoadPointSet " Mk=685 Hint="Установить указатель в ИП из нагрузки ИП с атрибутом Atr"}

	Obj={Mnemo="Next2_Atr2PointOut"      Mk=686 Hint="Выдать указатель из из ИП с атрибутом Atr"}
	Obj={Mnemo="Next2_Atr2PointOutMk"    Mk=687 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Next2_Atr2PointPop"      Mk=688 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Next2_Atr2PointPopMk"    Mk=689 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Next2_Atr2DataPop"       Mk=690 Hint="Выдать данные из нагрузки ИП с атрибутом Atr"}
	Obj={Mnemo="Next2_Atr2IpOut"         Mk=691 Hint="Выдать указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Next2_Atr2IpOutMk"       Mk=692 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Next2_Atr2IpPop"         Mk=693 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Next2_Atr2IpPopMk"       Mk=694 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Next2_Atr2AtrSet"        Mk=695 Hint="Выдать указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Next2_Atr2DataSet"       Mk=696 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Next2_Atr2PointSet"      Mk=697 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Next2_Atr2IcAdd"         Mk=698 Hint="Прицепить к ИК из нагрузки из ИП с атрибутом Atr ИК из нагрзуки Мк"}
	Obj={Mnemo="Next2_Atr2IcTreeAdd"     Mk=699 Hint="Прицепить к ИК из нагрузки из ИП с атрибутом Atr копию ИК из нагрзуки Мк"}
	Obj={Mnemo="Next2_Atr2IcTreeCopyAdd" Mk=700 Hint="Прицепить к ИК из нагрузки из ИП с атрибутом Atr копию ОА-графа из нагрзуки Мк"}
	Obj={Mnemo="Next2_Atr2LoadPointSet " Mk=701 Hint="Установить указатель в ИП из нагрузки ИП с атрибутом Atr"}

	Obj={Mnemo="Next2_Atr3PointOut"      Mk=702 Hint="Выдать указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Next2_Atr3PointOutMk"    Mk=703 Hint="Выдать милликоманду с указателем ИП с атрибутом Atr"}
	Obj={Mnemo="Next2_Atr3PointPop"      Mk=704 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Next2_Atr3PointPopMk"    Mk=705 Hint="Переместить указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Next2_Atr3DataPop"       Mk=706 Hint="Выдать данные из нагрузки ИП с атрибутом Atr"}
	Obj={Mnemo="Next2_Atr3IpOut"         Mk=707 Hint="Выдать указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Next2_Atr3IpOutMk"       Mk=708 Hint="Выдать милликоманду с указателем ИП с атрибутом Atr"}
	Obj={Mnemo="Next2_Atr3IpPop"         Mk=709 Hint="Выдать указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Next2_Atr3IpPopMk"       Mk=710 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Next2_Atr3AtrSet"        Mk=711 Hint="Выдать указатель из ИП с атрибутом Atr"}
	Obj={Mnemo="Next2_Atr3DataSet"       Mk=712 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Next2_Atr3PointSet"      Mk=713 Hint="Выдать милликоманду с указателем из ИП с атрибутом Atr"}
	Obj={Mnemo="Next2_Atr3IcAdd"         Mk=714 Hint="Прицепить к ИК из нагрузки из ИП с атрибутом Atr ИК из нагрзуки Мк"}
	Obj={Mnemo="Next2_Atr3IcCopyAdd"     Mk=715 Hint="Прицепить к ИК из нагрузки из ИП с атрибутом Atr копию ИК из нагрзуки Мк"}
	Obj={Mnemo="Next2_Atr3IcTreeCopyAdd" Mk=716 Hint="Прицепить к ИК из нагрузки из ИП с атрибутом Atr копию ОА-графа из нагрзуки Мк"}
	Obj={Mnemo="Next2_Atr3LoadPointSet " Mk=717 Hint="Установить указатель в ИП из нагрузки ИП с атрибутом Atr"}
 }

  Obj={Mnemo="Reguest" Hint="Расфоркивание списка" Comment
	Obj={Mnemo="HoleSet" Mk=178 Hint="Установка ссылки на дырку"}
	Obj={Mnemo="HoleOut" Mk=179 Hint="Выдать ссылку на дырку"}
	Obj={Mnemo="HoleOutMk" Mk=180 Hint="Выдать милликоманду со ссылкой на дырку"}
	Obj={Mnemo="DepersonDepthSet" Mk=181 Hint="Установить глубину обезличивания фрагмента ОА-графа"}
	Obj={Mnemo="DepersonDepthOut" Mk=182 Hint="Выдать глубину обезличивания фрагмента ОА-графа"}
	Obj={Mnemo="DepersonDepthOutMk" Mk=183 Hint="Выдать милликоманду с глубиной обезличивания фрагмента ОА-графа"}
	Obj={Mnemo="Deperson" Mk=184 Hint="Обезличить множество"}
	Obj={Mnemo="IcDeperson" Mk=185 Hint="Обезличить капсулу"}
	Obj={Mnemo="TemplOut" Mk=186 Hint="Выдать ссылку на шаблон"}
	Obj={Mnemo="TemplOutMk" Mk=187 Hint="Выдать милликоманду со ссылкой на шаблон"}
	Obj={Mnemo="DepersonAtrSet" Mk=188 Hint="Добавить список атрибутов для обезличивания"}
	Obj={Mnemo="DepersonAtrReset" Mk=189 Hint="Сбросить список атрибутов обезличивания"}
	Obj={Mnemo="HoleReset" Mk=190 Hint="Сброс описаний дырок"}
}
  Obj={Mnemo="Forking" Hint="Расфоркивание списка" Comment
	Obj={Mnemo="Fork" Mk=300 Hint="Расфоркать текущую ветку альтернатив"}
	Obj={Mnemo="Prev3_Fork" Mk=301 Hint="Расфоркать три предыдущие ветки альтернатив"}
	Obj={Mnemo="Prev2_Fork" Mk=302 Hint="Расфоркать две предыдущие ветки альтернатив"}
	Obj={Mnemo="Prev_Fork" Mk=303 Hint="Расфоркать предыдущую ветку альтернатив"}
	Obj={Mnemo="Next_Fork" Mk=305 Hint="Расфоркать следующую ветку альтернатив"}
	Obj={Mnemo="Next2_Fork" Mk=306 Hint="Расфоркать два следующих ветки альтернатив"}
	Obj={Mnemo="Next3_Fork" Mk=307 Hint="Расфоркать три следующих ветки альтернатив"}

	Obj={Mnemo="ForkExcl" Mk=295 Hint="Исключить ветвь толкования и выдать ссылку на ветвь"}
	Obj={Mnemo="ForkExclMk" Mk=296 Hint="Исключить ветвь толкования и выдать милликоманду со ссылкой на ветвь"}
	Obj={Mnemo="ForkDelMk" Mk=297 Hint="Выдать милликоманду со ссылкой на ветвь и удалить ветвь толкования"}
	Obj={Mnemo="ForkDelTreeMk" Mk=298 Hint="Выдать милликоманду со ссылкой на ветвь удалить дерево с толкованием ветви толкования"}
  }
  Obj={Mnemo="Index work" Hint="Индексация ИП" Comment
	Obj={Mnemo="IndexVectSet" Mk=50 Hint="Задать ссылку на индексный массив"}
	Obj={Mnemo="IndexVectPop" Mk=51 Hint="Выдать ссылку на индексный массив"}
	Obj={Mnemo="IndexVectPopMk" Mk=52 Hint="Выдать милликоманду со ссылкой на индексный массив"}
	Obj={Mnemo="IndexCounterPointerSet" Mk=53 Hint="Задать ссылку на индексный счётчик"}
	Obj={Mnemo="IndexVectPop" Mk=54 Hint="Выдать ссылку на индексный счётчик"}
	Obj={Mnemo="IndexVectPopMk" Mk=55 Hint="Выдать милликоманду со ссылкой на индексный счётчик"}
	Obj={Mnemo="IndexVectCreate" Mk=56 Hint="Сформировать индексный массив"}
	Obj={Mnemo="IndexModeSet" Mk=57 Hint="Установить индексный режим"}
	Obj={Mnemo="IpIcIdOutMk" Mk=58 Hint="Выдать милликоманду со ссылкой на запись со служебной информацией ОА-графа"}
	Obj={Mnemo="IpIcIdSet" Mk=59 Hint="Установить указатель на запись со служебной информацийе ОА-графа"}
  }
  Obj={Mnemo="Id work" Comment Hint="Индексный режим для ИК"
   Obj={Mnemo="IdModeSet" Mk=61 Hint="Установить режим автоматической простановки идентификаторов информационных капсул (если в нагрузке nil, то режим устанавливается)"}
   Obj={Mnemo="IdPointerSet" Mk=62 Hint="Установить ссылку на счетчик индексов капсул (если Load=nil, то указатель ставится на внутренний счетчик; автоматически устанавливается индексный режим)"}
   Obj={Mnemo="IdSet" Mk=63 Hint="Установить значение счетчика индексов капсул"}
   Obj={Mnemo="IdPointerPop" Mk=64 Hint="Выдать указатель на счетчик идекаторов капсул"}
   Obj={Mnemo="IdPointerPopMk" Mk=65 Hint="Выдать милликоманду с указателем на счетчик идекаторов капсул"}
  }
 Obj=CommonMkList
}

// InOutMkList
	FuTypeIndexes.CellSet=92 FuTypeMkTrees.CellSet=
{
  Obj={Mnemo="IndSet" Mk=2 Hint="Установить индекс текущего канала"}
  Obj={Mnemo="IndInc" Mk=3 Hint="Увеличить индекс текущего канала"}
  Obj={Mnemo="IndDec" Mk=4 Hint="Уменьшить индекс текущего канала"}
  Obj={Mnemo="IndOut" Mk=5 Hint="Выдать индекс текущего канала"}
  Obj={Mnemo="IndOutMk" Mk=6 Hint="Выдать Мк с индексом текущего канала"}
  Obj={Mnemo="IndCount" Mk=7 Hint="Присвоить индекса значение номера поледнего созданного канала"}
  Obj={Mnemo="ChCountOut" Mk=8 Hint="Выдать количество созданных каналов"}
  Obj={Mnemo="ChCountOutMk" Mk=9 Hint="Выдать Mk c количеством созданных каналов"}
  Obj={Mnemo="ChAddCountSet" Mk=10 Hint="Установить количество создаваемых каналов (по умолчанию 1)"}

  Obj={Mnemo="ChAdd" Mk=20 Hint="Добавить канал"}
  Obj={Mnemo="ChReset" Mk=21 Hint="Cбросить насройки текущего канала"}
  Obj={Mnemo="ChFree" Mk=22 Hint="Удалить текущий канал"}
  Obj={Mnemo="ChCopy" Mk=23 Hint="Создать новый канал и копировать в него свойства текущего канала (можно передавать ссылку наканал)"}
  Obj={Mnemo="ChPointOut" Mk=24 Hint="Выдать указатель натекущий канал"}
  Obj={Mnemo="ChPointOutMk" Mk=25 Hint="Выдать Мк с указателем на натекущий канал"}

  Obj={Mnemo="Channel" Hint="Настройска каналов передачи информации" Comment
  	Obj={Mnemo="ChValSet" Mk=30 Hint="Установить значение текущего канала"}
  	Obj={Mnemo="ChDValSet" Mk=31 Hint="Установить дифференциал значения текущего канала"}

  	Obj={Mnemo="FactIndOut" Mk=28 Hint="Выдать индекс фактического канала"}
  	Obj={Mnemo="FactIndOutMk" Mk=29 Hint="Выдать МК с индексом фактического канала"}

  	Obj={Mnemo="ChValOut" Mk=32 Hint="Выдать значение текущего канала"}
  	Obj={Mnemo="ChValOutMk" Mk=33 Hint="Выдать МК со значением текущего канала"}
  	Obj={Mnemo="ChDValOut" Mk=34 Hint="Выдать дифферецинал значения текущего канала"}
  	Obj={Mnemo="ChDValOutMk" Mk=35 Hint="Выдать МК со значением дифференциала текущего канала"}

  	Obj={Mnemo="FactValOut" Mk=36 Hint="Выдать значение фактического канала"}
  	Obj={Mnemo="FactValOutMk" Mk=37 Hint="Выдать МК со значением фактического канала"}
  	Obj={Mnemo="FactDValOut" Mk=38 Hint="Выдать дифферецинал значения фактического канала"}
  	Obj={Mnemo="FactDValOutMk" Mk=39 Hint="Выдать МК со значением дифферециала фактического канала"}

  	Obj={Mnemo="ChAdrAdd" Mk=40 Hint="Добавить адрес записи входного сигнала"}
  	Obj={Mnemo="ChAdrReset" Mk=41 Hint="Добавить адрес записи входного сигнала"}
  	Obj={Mnemo="ChMkAdd" Mk=42 Hint="Добавить милликоманду для рассылки входного сигнала"}
  	Obj={Mnemo="ChAtrAdd" Mk=43 Hint="Добавить атрибут для рассылки"}
  	Obj={Mnemo="ChMkAtrAdd" Mk=46 Hint="Добавить МК и атрибут для рассылки (FUName.ChMkAtrAdd=Mk=Atr)"}
  	Obj={Mnemo="ChMkAtrReset" Mk=44 Hint="Сброс массива Мк и атрибутов рассылки"}
  	Obj={Mnemo="ChProgSet" Mk=45 Hint="Установить указатель на программа, запускаемую при приходе сигнала"}
  	Obj={Mnemo="ChAllMkSet" Mk=47 Hint="Установить МК для всех каналов"}
	Obj={Mnemo="BorderSet" Mk=60 Hint="Установить границы для смены реакции на сигналы"}
  }
  Obj={Mnemo="InSignals" Hint="Атрибуты входящих сигналов" Comment
  	Obj={Mnemo="Signal_0" Mk=200 Hint="Сигнал 0"}
  	Obj={Mnemo="Signal_1" Mk=201 Hint="Сигнал 1"}
  	Obj={Mnemo="Signal_2" Mk=202 Hint="Сигнал 2"}
  	Obj={Mnemo="Signal_3" Mk=203 Hint="Сигнал 3"}
  	Obj={Mnemo="Signal_4" Mk=204 Hint="Сигнал 4"}
  	Obj={Mnemo="Signal_5" Mk=205 Hint="Сигнал 5"}
  	Obj={Mnemo="Signal_6" Mk=206 Hint="Сигнал 6"}
  	Obj={Mnemo="Signal_7" Mk=207 Hint="Сигнал 7"}
  	Obj={Mnemo="Signal_8" Mk=208 Hint="Сигнал 8"}
  	Obj={Mnemo="Signal_9" Mk=209 Hint="Сигнал 9"}
  	Obj={Mnemo="Signal_10" Mk=210 Hint="Сигнал 10"}
  	Obj={Mnemo="Signal_11" Mk=211 Hint="Сигнал 11"}
  	Obj={Mnemo="Signal_12" Mk=212 Hint="Сигнал 12"}
  	Obj={Mnemo="Signal_13" Mk=213 Hint="Сигнал 13"}
  	Obj={Mnemo="Signal_14" Mk=214 Hint="Сигнал 14"}
  	Obj={Mnemo="Signal_15" Mk=215 Hint="Сигнал 15"}
  }

  Obj=CommonMkList
}

// StrAutomatManagerMkList
	FuTypeIndexes.CellSet=93 FuTypeMkTrees.CellSet=
{
  Obj={Mnemo="ReseiverMKSet" Mk=1 Hint="Установить МК для приемника входных данных"}
  Obj={Mnemo="TemplIcSet" Mk=5 Hint="Установить ссылку на эталонную ИК"}
  Obj={Mnemo="VarIcSet" Mk=6 Hint="Установить ссылку на ИК переменных"}
  Obj={Mnemo="TemplIcOut" Mk=15 Hint="Выдать указатель на эталонную ИК"}
  Obj={Mnemo="TemplIcOutMk" Mk=16 Hint="Выдать МК со ссылкой на эталонную ИК"}
  Obj={Mnemo="VarIcOut" Mk=17 Hint="Выдать указатель на ИК переменных"}
  Obj={Mnemo="VarIcOutMk" Mk=18 Hint="Выдать МК со ссылкой на ИК переменных"}

  Obj={Mnemo="InProgSet" Mk=9 Hint="Установить программу, выполняющуюся при приходе сигнала"}
  Obj={Mnemo="InAfterProgSet" Mk=19 Hint="Установить программу, выполняющуюся сразу после прихода сигнала"}
  Obj={Mnemo="ErrorProgSet" Mk=10 Hint="Установить программу, выполняющуюся по ошибке (не нейден атрибут сигнала)"}
  Obj={Mnemo="InSignalOut" Mk=11 Hint="Выдать последний входной сигнал"}
  Obj={Mnemo="InSignalOutMk" Mk=12 Hint="Выдать Mk c последним входным сигналом"}
  Obj={Mnemo="InSignalAtrOut" Mk=13 Hint="Выдать атриубут последнего входного сигнала"}
  Obj={Mnemo="InSignalAtrOutMk" Mk=14 Hint="Выдать МК с атрибутом последнего входного сигнала"}
  Obj={Mnemo="Send" Mk=20 Hint="Переслать данные потребителю"}
  Obj=CommonMkList
}
// RobotEnvironmentMkList
	FuTypeIndexes.CellSet=94 FuTypeMkTrees.CellSet=
{
  Obj={Mnemo="Move" Mk=50 Hint="Движение робота (0 - на месте, 1 - вперед, 2 - назад)"}
  Obj={Mnemo="Turn" Mk=51 Hint="Поворот робота (0 - без поворота, 1 - влево (против часовой), -1 - вправо (по часовой))"}

  Obj={Mnemo="Field settings" Hint="Описание параметров поля перемещения робота" Comment
    Obj={Mnemo="SizeSet" Mk=15 Hint="Задать размер поля передвижения робота (ширина и длина)"}
    Obj={Mnemo="PointAdd" Mk=5 Hint="Добавить координаты и интенсивность излучения маячка (координаты X и Y, интенсивность излучения)"}
    Obj={Mnemo="PointReset" Mk=6 Hint="Сбросить список маячков"}
    Obj={Mnemo="BarrierAdd" Mk=10 Hint="Добавить координаты препятствия (координаты X и Y)"}
    Obj={Mnemo="BarrierReset" Mk=11 Hint="Сбросить список координат препятствий"}
//  Obj={Mnemo="" Mk= Hint=""}
  }
  Obj={Mnemo="Robot settings" Hint="Описание параметров выходных данных" Comment
    Obj={Mnemo="RSet" Mk=1 Hint="Установить начальные характеристики робота (координаты X и Y, угол поворота)"}
    Obj={Mnemo="DStepSet" Mk=20 Hint="Установить шаг перемещения"}
    Obj={Mnemo="DAngleSet" Mk=21 Hint="Установить шаг поворота робота"}

    Obj={Mnemo="DengareProgSet" Mk=110 Hint="Установить указатель на программму, запускаемую при обнаружении опасности"}
    Obj={Mnemo="OutProgSet" Mk=111 Hint="Установить программу выдачи данных о местоположении и угле поворота робота"}
    Obj={Mnemo="OutXYProgSet" Mk=112 Hint="Установить программу выдачи данных о местоположении робота"}

    Obj={Mnemo="BeakonSensorIntervalSet" Mk=110 Hint="Установить расстояние между датчиками излучения"}
    Obj={Mnemo="BeakonSensorAlphSet" Mk=111 Hint="Установить угол чувствительности датчиками излучения"}
    Obj={Mnemo="BeakonSensitiveSet" Mk=112 Hint="Установить чувствительность датчиков датчиками излучения"}
    Obj={Mnemo="DangerSensorIntervalSet" Mk=113 Hint="Установить расстояние между датчиками препятствиями"}
    Obj={Mnemo="DangerSensorAlphSet" Mk=114 Hint="Установить угол чувствительности датчиков препятствия"}
    Obj={Mnemo="DangerDistanceSet" Mk=115 Hint="Установить предельное расстояние чувствительности датчиков препятствия"}
    Obj={Mnemo="AbsorbRadiusSet" Mk=116 Hint="Установить радиус для поглощения источника (область вокруг робота, необходимая для удаления маяка из пространства по достижению к нему)"}
    Obj={Mnemo="DangerVeryDistanceSet" Mk=117 Hint="Установить расстояние для опасной близости (необходим для срабатывания рефлекса экстренного отъезда от препятствия)"}
//    Obj={Mnemo="" Mk= Hint=""}
  }
  Obj={Mnemo="Out data" Hint="Описание параметров выходных данных" Comment
    Obj={Mnemo="OutProgSet" Mk=27 Hint="Установить программу выдачи данных о местоположении и угле поворота робота"}
    Obj={Mnemo="OutXYProgSet" Mk=28 Hint="Установить программу выдачи данных о местоположении робота"}
    Obj={Mnemo="XOut" Mk=30 Hint="XOut Вывести координату X робота"}
    Obj={Mnemo="XOutMk" Mk=31 Hint="XOutMk Вывести МК с координатой X робота"}
    Obj={Mnemo="YOut" Mk=32 Hint="YOut Вывести координату Y робота"}
    Obj={Mnemo="YOutMk" Mk=33 Hint="YOutMk Вывести МК с координатой Y робота"}
    Obj={Mnemo="AngleOut" Mk=34 Hint="AngleOut Вывести угол поворота робота"}
    Obj={Mnemo="AngleOutMk" Mk=35 Hint="AngleOutMk Вывести МК с уголом поворота робота"}
  }
  Obj=CommonMkList
}

// NumGenMkList
	FuTypeIndexes.CellSet=95 FuTypeMkTrees.CellSet=
{
  Obj={Mnemo="ModeSet" Mk=1 Hint="Установить режим работы (0 - случайные величины по равномерному закону)"}
  Obj={Mnemo="ModeOut" Mk=2 Hint="Выдать режим работы (0 - случайные величины по равномерному закону)"}
  Obj={Mnemo="ModeOutMk" Mk=3 Hint="Выдать МК с режимом работы (0 - случайные величины по равномерному закону)"}
  Obj={Mnemo="NextOut" Mk=5 Hint="Выдать следующее значение"}
  Obj={Mnemo="NextOutMk" Mk=6 Hint="Выдать МК со следующим занчением"}
  Obj={Mnemo="Out" Mk=7 Hint="Выдать последнее сгенерированное знечение"}
  Obj={Mnemo="OutMk" Mk=8 Hint="Выдать Мк с последним сгенерированным знечением"}
  Obj={Mnemo="NormalStartSet" Mk=20 Hint="Установить начало интервала для норманого распределения"}
  Obj={Mnemo="NormalFinSet" Mk=21 Hint="Установить конец интервала для норманого распределения"}

  Obj=CommonMkList
}
// BusNew
	FuTypeIndexes.CellSet=96 FuTypeMkTrees.CellSet=
{
  Obj={Mnemo="MakeFU" Mk=1 Hint="Создать ФУ (в нагрузке передаётся тип ФУ)"}
  Obj={Mnemo="ProgExec" Mk=5 Hint="Выполнить последовательность МК из ИК"}
  Obj={Mnemo="FileOldProgExec" Mk=10 Hint="Выполнить последовательность МК из индексного файла старого формата"}
  Obj={Mnemo="NFUOut" Mk=20 Hint="Выдать количество ФУ, подключенных к шине"}
  Obj=CommonMkList
}
// ConsNew
	FuTypeIndexes.CellSet=97 FuTypeMkTrees.CellSet=
{
  Obj={Mnemo="Out" Mk=1 Hint="Вывод"}
  Obj={Mnemo="OutLn" Mk=2 Hint="Вывод и перевод строки"}
  Obj={Mnemo="LnOut" Mk=3 Hint="Перевод строки и вывод"}
  Obj={Mnemo="LnOutLn" Mk=4 Hint="Перевод строки, вывод и перевод строки"}
  Obj={Mnemo="Ln" Mk=10 Hint="Перевод строки"}
  Obj={Mnemo="PrefixSet" Mk=20 Hint="Установить файл для вывода"}
  Obj={Mnemo="StdOutFileSet" Mk=30 Hint="Установить файл для ввода"}
  Obj={Mnemo="StdOutFileAppend" Mk=31 Hint="Установить файл для дополнения"}
  Obj={Mnemo="StdInFileSet" Mk=35 Hint="Установить префикс перед строкой"}

  Obj=CommonMkList
}
// StrGenNew
	FuTypeIndexes.CellSet=98 FuTypeMkTrees.CellSet=
{
  Obj={Mnemo="ReceiverSet" Mk=20 Hint="Установить ссылку на приемник строк"}
  Obj={Mnemo="ReceiverMkSet" Mk=21 Hint="Установить МК для приемника строк"}
  Obj={Mnemo="Start" Mk=3 Hint="Начать генерацию"}
  Obj={Mnemo="Stop" Mk=4 Hint="Прервать процесс геренации строк"}
  Obj={Mnemo="Pause" Mk=5 Hint="Приостановить процесс геренации строк"}
  Obj={Mnemo="Continue" Mk=6 Hint="Продолжить процесс геренации строк"}
  Obj={Mnemo="ModeSet" Mk=9 Hint="Выбор режима работы (0 - обычный, 1 - преобрзование букв к нижнему регистру)"}
  Obj={Mnemo="TimeOut" Mk=15 Hint="Выдать время компиляции в секундах"}
  Obj={Mnemo="TimeMkOut" Mk=30 Hint="Выдать МК со времем компиляции в секундах"}
  Obj={Mnemo="LineBufSizeSet" Mk=35 Hint="Установить размер буфера строк"}
  Obj={Mnemo="LineCountOutMk" Mk=50 Hint=""}
  Obj={Mnemo="LastLineBufOutMk" Mk=51 Hint="Выдать МК с последней строкой из буфера"}
  Obj={Mnemo="LineBufOutMk" Mk=52 Hint="Выдать МК со строками из буфера"}

  Obj={Mnemo="StartProgSet" Mk=60 Hint="Установить указатель на программу, выполняемую при запуске нерации строк из файла"}
  Obj={Mnemo="FinProgSet" Mk=61 Hint="Установить указатель на программу, выполняемую по завершению генерации строк из файла"}
  Obj={Mnemo="StopProgSet" Mk=62 Hint="Установить указатель на программу, выполняемую при прерывании генерации строк из файла"}

  Obj=CommonMkList
}
// LexNew
	FuTypeIndexes.CellSet=99 FuTypeMkTrees.CellSet=
{
  Obj={Mnemo="ReceiverMkSet" Mk=5 Hint="Установить МК для приемника лексем"}

  Obj={Mnemo="ErrProgSet" Mk=10 Hint="Установить на программу-обработчик ошибки"}
  Obj={Mnemo="StartProgSet" Mk=12 Hint="Установить программу, запускаемую перед началом компиляции"}
  Obj={Mnemo="StopProgSet" Mk=13 Hint="Установить программу, запускаемую при досрочном завершении лексисческого анализа по МК Stop"}
  Obj={Mnemo="FinProgSet" Mk=14 Hint="Установить программу, запускаемую после окончания анализа строки"}

  Obj={Mnemo="UnicAtrSet" Mk=15 Hint="Установить уникальный атрибут"}
  Obj={Mnemo="UnicMkSet" Mk=16 Hint="Установить МК для уникального атрибута"}
  Obj={Mnemo="UnicFuSet" Mk=17 Hint="Установить контекст для уникального атрибута"}
  Obj={Mnemo="UnicReset" Mk=18 Hint="Сбросить список уникальных атрибутов"}
  Obj={Mnemo="LexBufSizeSet" Mk=20 Hint="Установить размер буфера лексем"}

  Obj={Mnemo="ReplaceToReceiver" Mk=28 Hint="Выдать лексему из нагрузка МК получателю, заменив тукущую лексему в буфере"}
  Obj={Mnemo="ReplaceCopyToReceiver" Mk=29 Hint="Выдать копию лексемы из нагрузки МК получателю, заменив тукущую лексему в буфере"}
//  Obj={Mnemo="ToReceiver" Mk=30 Hint="Выдать лексему из нагрузка МК получателю"}
//  Obj={Mnemo="CopyToReceiver" Mk=31 Hint="Выдать копию лексемы из нагрузки МК получателю"}
  Obj={Mnemo="OutMk" Mk=35 Hint="Выдать MK c последней лексемой"}
  Obj={Mnemo="CopyOutMk" Mk=36 Hint="Выдать МК с копией последней лексемы"}
  Obj={Mnemo="LoadOut" Mk=37 Hint="Выдать нагрузку текущей лексемы"}
  Obj={Mnemo="LoadOutMk" Mk=38 Hint="Выдать МК с нагрузкой текущей лексемы"}
  Obj={Mnemo="LoadCopyOut" Mk=39 Hint="Выдать нагрузку текущей лексемы"}
  Obj={Mnemo="LoadCopyOutMk" Mk=40 Hint="Выдать МК с копией нагрузки текущей лексемы"}
  Obj={Mnemo="AtrOut" Mk=41 Hint="Выдать атрибут текущей лексемы"}
  Obj={Mnemo="AtrOutMk" Mk=42 Hint="Выдать МК с атрибутом текущей лексемы"}

  Obj={Mnemo="PrevOutMk" Mk=45 Hint="Выдать МК с предыдущей лексемой"}
  Obj={Mnemo="PrevCopyOutMk" Mk=46 Hint="Выдать МК с копией предыдущей лексемы"}

//  Obj={Mnemo="PrevToReseiver" Mk=40 Hint="Выдать предыдущую лексему получателю"}
//  Obj={Mnemo="PrevCopyToReseiver" Mk=41 Hint="Выдать копию предыдущей лексемы получателю"}

//  Obj={Mnemo="ToReceiver" Mk=32 Hint="Выдать последнюю лексему получателю"}
//  Obj={Mnemo="CopyToReceiver" Mk=33 Hint="Выдать копию последней лексемы получателю"}

 
  Obj={Mnemo="AtrSet" Mk=50 Hint="Установить атрибут последней лексемы"}
  Obj={Mnemo="PrevAtrSet" Mk=51 Hint="Установить атрибут предыдущей лексемы"}
  Obj={Mnemo="LoadSet" Mk=55 Hint="Установить нагрзузку у последней лексемы"}
  Obj={Mnemo="PrevLoadSet" Mk=56 Hint="Установить нагрзузку у предыдущей лексемы"}
  Obj={Mnemo="LoadCopySet" Mk=57 Hint="Установить копию нагрзузки у последней лексемы"}
  Obj={Mnemo="PrevLoadCopySet" Mk=58 Hint="Установить копию нагрзузки у предыдущей лексемы"}
  Obj={Mnemo="VarSet" Mk=65 Hint="Установить тип переменной для нагрузки последней лексемы"}
  Obj={Mnemo="PrevVarSet" Mk=66 Hint="Установить тип переменной для нагрузки предыдущей лексемы"}

  Obj={Mnemo="CendToReceiver" Mk=70 Hint="Переслать лексему из нагрузки получателю"}
  Obj={Mnemo="CendCopyToReceiver" Mk=71 Hint="Переслать копию лексемы из нагрузки получателю"}


  Obj={Mnemo="Stop" Mk=99 Hint="Остановить лексический анализ"}
  Obj={Mnemo="Lexing" Mk=100 Hint="Лексический разбор строки"}
  Obj=CommonMkList
}

// FindNew
	FuTypeIndexes.CellSet=100 FuTypeMkTrees.CellSet=
{
  Obj={Mk=1 Mnemo="Set" Hint="Установить указатель на шаблон для поиска"}
  Obj={Mk=7 Mnemo="MkModeSet" Hint="Режим выполнения всех МК в ИК-шаблоне (МК-ой считается любой атрибут, индекс которого больше 0). При пустой нагрузке режим устанавливается"}
  Obj={Mk=10 Mnemo="SuccessProgSet" Hint="Установить указатель на программу, выполняемую при удачном поиска в линии списка"}
  Obj={Mk=11 Mnemo="SuccessAfterProgSet" Hint="Установить указатель на программу, выполняемую при удачном поиска в линии списка после обоработки программ линии"}
  Obj={Mk=15 Mnemo="FailProgSet" Hint="Установить указатель на программу, выполняемую в случае неудачного поиска в линии списка"}
  Obj={Mk=16 Mnemo="FailAfterProgSet" Hint="Установить указатель на программу, выполняемую в случае неудачного поиска в линии списка после обоработки программ линии"}
  Obj={Mk=20 Mnemo="ProgAtrSet" Hint="Установить атрибут программы"}
  Obj={Mk=25 Mnemo="BackOut" Hint="Выдать входной объект для поиска"}
  Obj={Mk=30 Mnemo="BackOutMk" Hint="Выдать МК со входным объектом для поиска"}
  Obj={Mk=31 Mnemo="CopyBackOutMk" Hint="Выдать МК с копией входного объекта для поиска"}
  Obj={Mk=90 Mnemo="ProgAtrSet" Hint="Установить атрибут программы"}
  Obj={Mk=100 Mnemo="RezOut" Hint="Выдача результата сравнения"}
  Obj={Mk=101 Mnemo="RezOutMK" Hint="Выдача МК с результатом сравнения"}
  Obj={Mk=220 Mnemo="FindOr" Hint="Поиск ИЛИ"}
  Obj={Mk=225 Mnemo="FindAnd" Hint="Поиск И"}
  Obj={Mk=230 Mnemo="FindXor" Hint="Поиск XOR"}
  Obj={Mk=235 Mnemo="FindAndSource" Hint="Поиск И в источнике"}
  Obj=CommonMkList
}

// ListNew
	FuTypeIndexes.CellSet=101 FuTypeMkTrees.CellSet=
{
  Obj={Mnemo="Find" Hint="Поиск" Comment
    Obj={Mk=220 Mnemo="FindOr" Hint="Поиск ИЛИ"}
    Obj={Mk=221 Mnemo="FindOrLastLine" Hint="Поиск ИЛИ в последней строке"}
    Obj={Mk=226 Mnemo="FindAnd" Hint="Поиск И"}
    Obj={Mk=227 Mnemo="FindAndLastLine" Hint="Поиск И в последней строке"}
    Obj={Mk=230 Mnemo="FindXor" Hint="Поиск XOR"}
    Obj={Mk=231 Mnemo="FindXorLastLine" Hint="Поиск XOR в последней строке"}
    Obj={Mk=236 Mnemo="FindAndSource" Hint="Поиск И в источнике"}
    Obj={Mk=237 Mnemo="FindAndSourceLastLine" Hint="Поиск И в источнике в последней строке"}
    Obj={Mk=401 Mnemo="LineOut" Hint="Выдать найденную линию"}
    Obj={Mk=400 Mnemo="LineOutMk" Hint="Выдать МК с найденной линией"}
  }
  Obj={Mnemo="Prog by line num comparision" Hint="Поиск по результатам сравнения номеров строк" Comment
     Obj={Mk=450 Mnemo="EqExec" Hint="Программа, если равно"}
     Obj={Mk=451 Mnemo="BiggerExec" Hint="Программа, если больше"}
     Obj={Mk=452 Mnemo="SmallerExec" Hint="Программа, если меньше"}
     Obj={Mk=453 Mnemo="BigerEqExec" Hint="Программа, если больше или равно"}
     Obj={Mk=454 Mnemo="SmallerEqExec" Hint="Программа, если меньше или равно"}
     Obj={Mk=456 Mnemo="DifferenceOutMk" Hint="Выдать МК с различием старой найденной линии и новой"}

     Obj={Mk=470 Mnemo="EqProgSet" Hint="Установить программу, если равно"}
     Obj={Mk=471 Mnemo="BiggerProgSet" Hint="Установить программу, если больше"}
     Obj={Mk=472 Mnemo="SmallerProgSet" Hint="Установить программу, если меньше"}
     Obj={Mk=473 Mnemo="BigerEqProgSet" Hint="Установить программу, если больше или равно"}
     Obj={Mk=474 Mnemo="SmallerEqProgSet" Hint="Установить программу, если меньше или равно"}

     Obj={Mk=459 Mnemo="LineNumSet" Hint="Установить номер найденной строки (нужно для организации операций сравнения)"}
  }

  Obj={Mnemo="Line modification" Hint="Изменение строк списка" Comment
    Obj={Mk=150 Mnemo="LastOut" Hint="Выдать ссылку на последнюю линию списка"}
    Obj={Mk=151 Mnemo="LastPop" Hint="Выдать ссылку на последнюю линию списка и удалить из списка"}
    Obj={Mk=152 Mnemo="LastDel" Hint="Выдать ссылку на последнюю линию списка и удалить из ИК"}
    Obj={Mk=155 Mnemo="LastOutMk" Hint="Выдать ссылку на последнюю линию списка"}
    Obj={Mk=156 Mnemo="LastPopMk" Hint="Выдать ссылку на последнюю линию списка и удалить из списка"}
    Obj={Mk=157 Mnemo="LastDelMk" Hint="Выдать ссылку на последнюю линию списка и удалить ИК"}
    Obj={Mk=153 Mnemo="LastIpOutMk" Hint="Выдать ссылку на последнюю ИП последней линии"}
    Obj={Mk=154 Mnemo="LastIpCopyOutMk" Hint="Выдать МК со ссылкой на последнюю ИП последней линии"}
    Obj={Mk=158 Mnemo="LastLoadOut" Hint="Добавить строку"}
    Obj={Mk=159 Mnemo="LastLoadOutMk" Hint="Выдать МК с нагрузкой последней ИП последней линии"}
    Obj={Mk=160 Mnemo="LineAdd" Hint="Добавить строку"}
    Obj={Mk=161 Mnemo="LineCopyAdd" Hint="Добавить копию строки"}
    Obj={Mk=163 Mnemo="LineCopyAddPrevLoadSet" Hint="Добавить линию в список и поместить ссылку на нее в нагрузку последней ИП последней строки"}
    Obj={Mk=159 Mnemo="LineCopyAddPrevLoadSetLoadMov" Hint="Добавить копию линии перенести нагрузку в на новую строку и добавить в нагрзуку предыдущей строки ссылку на новую строку"}
    Obj={Mk=162 Mnemo="LineCopyTreeAdd" Hint="Добавить копию ОА-графа"}
    Obj={Mk=145 Mnemo="LineIpOutMk" Hint="Выдать ссылку на последнюю ИП текущей линии"}
    Obj={Mk=147 Mnemo="LastIpOutMk" Hint="Выдать ссылку на последнюю ИП последней линии"}
    Obj={Mk=146 Mnemo="LineIpCopyOutMk" Hint="Выдать МК со ссылкой на последнюю ИП текущей линии"}
    Obj={Mk=164 Mnemo="LineLoadOutMk" Hint="Выдать МК с нагрузкой последней ИП текущей линии"}

    Obj={Mk=165 Mnemo="LinePopMk" Hint="Исключить линию списка"}
    Obj={Mk=166 Mnemo="LineDelMk" Hint="Выдать МК со ссылкой на ИК и удалить ИК"}
    Obj={Mk=167 Mnemo="LineIpCut" Hint="Удалить последние ИП из текущей линии (в нагрузке количество удаляемых ИП, по умолчанию 1)"}
    Obj={Mk=168 Mnemo="LineVarIpCut" Hint="Удалить последние ИП вместе с переменными из текущей линии (в нагрузке количество удаляемых ИП, по умолчанию 1)"}
    
    Obj={Mk=170 Mnemo="LastAttach" Hint="Конкатенация ИК к последней линии списка"}
    Obj={Mk=171 Mnemo="LastCopyAttach" Hint="Конкатенация копии ИК к последней линии списка"}
    Obj={Mk=175 Mnemo="LineAttach" Hint="Конкатенация ИК к текущей линии списка"}
    Obj={Mk=176 Mnemo="LineCopyAttach" Hint="Конкатенация копии ИК к текущей линии списка"}
    Obj={Mk=180 Mnemo="LineVarTypeSet" Hint="Установить тип 'переменная' в последней ИП текущей линии"}
    Obj={Mk=182 Mnemo="LastVarTypeSet" Hint="Установить тип 'переменная' в последней ИП последней линии"}
//    Obj={Mk=181 Mnemo="LastPointConstTypeSet" Hint="Установить тип 'константа' в последней ИП последней линии"}
//    Obj={Mk=183 Mnemo="LinePointConstTypeSet" Hint=" Установить тип 'константа' в последней ИП текущей линии"}

    Obj={Mk=185 Mnemo="LastLoadSet" Hint="Добавить ссылку в указатель последний ИК последней строки"}
    Obj={Mk=195 Mnemo="LineLoadSet" Hint="Добавить ссылку в указатель текущей ИК текущей строки"}
    Obj={Mk=186 Mnemo="LastLoadCopySet" Hint="Добавить ссылку на копию ИК в указатель последний ИК последней строки"}
    Obj={Mk=196 Mnemo="LineLoadCopySet" Hint="Добавить ссылку на копию ИК в указатель текущей ИК текущей строки"}
    Obj={Mk=189 Mnemo="LastAtrSet" Hint="Установить атрибут последний ИК последней строки"}
    Obj={Mk=199 Mnemo="LineAtrSet" Hint="Установить атрибут последний ИК текущей строки"}
  }
  
  Obj={Mnemo="Line Mark" Hint="Работа с атрибутом линии" Comment
    Obj={Mk=120 Mnemo="MarkAtrSet" Hint="Установить атрибут текущей строки"}
    Obj={Mk=121 Mnemo="LastMarkAtrSet" Hint="Установить атрибут последней строки"}

    Obj={Mk=122 Mnemo="MarkAtrOut" Hint="Выдать маркер текущей строки"}
    Obj={Mk=123 Mnemo="MarkAtrOutMk" Hint="Выдать МК с маркером текущей строки"}
    Obj={Mk=124 Mnemo="LastMarkAtrOut" Hint="Выдать маркер последней строки"}
    Obj={Mk=129 Mnemo="LastMarkAtrOutMk" Hint="Выдать МК с маркером последней строки"}

    Obj={Mk=125 Mnemo="MarkAtrInc" Hint="Инкремент атрибута текущей строки"}
    Obj={Mk=126 Mnemo="LastMarkAtrInc" Hint="Инкремент атрибута последней строки"}
    Obj={Mk=127 Mnemo="MarkAtrDec" Hint="Декримент атрибута текущей строки"}
    Obj={Mk=128 Mnemo="LastMarkAtrDec" Hint="Декримент атрибута последней строки"}
    Obj={Mk=130 Mnemo="MarkAtrEQExec" Hint="Запуск программы при нуле атрибута текущей строки"}
    Obj={Mk=131 Mnemo="LastMarkAtrEQExec" Hint="Запуск программы при нуле атрибута последней строки"}
    Obj={Mk=133 Mnemo="MarkAtrNQEExec" Hint="Запуск программы при не нуле атрибута текущей строки"}
    Obj={Mk=134 Mnemo="LastMarkAtrNEQExec" Hint="Запуск программы при не нуле атрибута последней строки"}
    Obj={Mk=135 Mnemo="MarkAtrBiggerExec" Hint="Запуск программы при атрибуте текущей строки больше 0"}
    Obj={Mk=136 Mnemo="LastMarkAtrBiggerExec" Hint="Запуск программы при атрибуте последней строки больше 0"}
    Obj={Mk=137 Mnemo="MarkAtrBiggerZeroExec" Hint="Запуск программы при атрибуте текущей строки больше или райным 0"}
    Obj={Mk=138 Mnemo="LastMarkAtrBiggerZeroExec" Hint="Запуск программы при атрибуте последней строки больше или равным 0"}
    Obj={Mk=139 Mnemo="MarkAtrLessExec" Hint="Запуск программы при атрибуте текущей строки меньше 0"}
    Obj={Mk=140 Mnemo="LastMarkAtrkLessExec" Hint="Запуск программы при атрибуте последней строки меньше 0"}
    Obj={Mk=141 Mnemo="MarkAtrLessZeroExec" Hint="Запуск программы при атрибуте текущей строки меньше или равным 0"}
    Obj={Mk=142 Mnemo="LastMarkAtrkLessZeroExec" Hint="Запуск программы при атрибуте последней строки меньше или равным 0"}
  }

  Obj={Mk=1 Mnemo="Set" Hint="Установить указатель на список"}
  Obj={Mk=2 Mnemo="Out" Hint="Выдать ссылку на список"}
  Obj={Mk=3 Mnemo="OutMk" Hint="Выдать МК со ссылкой на список"}
  Obj={Mk=5 Mnemo="MultiLineModeSet" Hint="Установить режим многострочного поиска"}
  Obj={Mk=7 Mnemo="MkModeSet" Hint="Режим выполнения всех МК в ИК-шаблоне (МК-ой считается любой атрибут, индекс которого больше 0). При пустой нагрузке режим устанавливается"}

  Obj={Mk=500 Mnemo="LineEmptyExec" Hint="Выполнить подпрограмму, если текущая строка пустая"}
  Obj={Mk=501 Mnemo="LineFullExec" Hint="Выполнить подпрограмму, если текущая строка не пустая"}
  Obj={Mk=502 Mnemo="LastEmptyExec" Hint="Выполнить подпрограмму, если последняя строка пустая"}
  Obj={Mk=503 Mnemo="LastFullExec" Hint="Выполнить подпрограмму, если последняя строка не пустая"}

  Obj={Mk=8 Mnemo="EmptyExec" Hint="Выполнить программу, если список пуст"}
  Obj={Mk=9 Mnemo="FullExec" Hint="Выполнить программу, если список не пуст"}
  Obj={Mk=14 Mnemo="OneLineExec" Hint="Выполнить программу, если в списке только одна линия"}
  Obj={Mk=13 Mnemo="MoreOneLineExec" Hint="Выполнить программу, если в списке больше одной строки"}
  Obj={Mk=10 Mnemo="SuccessLineProgSet" Hint="Установить указатель на программу, выполняемую при удачном поиска в линии списка"}
  Obj={Mk=11 Mnemo="SuccessAfterLineProgSet" Hint="Установить указатель на программу, выполняемую при удачном поиска в линии списка после обоработки программ линии"}
  Obj={Mk=12 Mnemo="SuccessProgSet" Hint="Установить указатель на программу, выполняемую при удачном поиске в спике"}
  Obj={Mk=15 Mnemo="FailLineProgSet" Hint="Установить указатель на программу, выполняемую в случае неудачного поиска в линии списка"}
  Obj={Mk=16 Mnemo="FailAfterLineProgSet" Hint="Установить указатель на программу, выполняемую в случае неудачного поиска в линии списка после обоработки программ линии"}
  Obj={Mk=17 Mnemo="FailProgSet" Hint="Установить указатель на программу, выполняемую в случае неудачного поиска во всем  списке"}
  Obj={Mk=18 Mnemo="SuccessLineProgSet" Hint="Установить указатель на программу, выполняемую в случае неудачного поиска во всем  списке"}
  Obj={Mk=19 Mnemo="SuссessProgSet" Hint=" Установить указатель на программу, выполняемую в случае неудачного поиска во всем  списке"}
  Obj={Mk=20 Mnemo="ProgAtrSet" Hint="Установить атрибут программы"}
  Obj={Mk=21 Mnemo="MarkAtrDef" Hint="Установить атрибут марки списка по умолчанию"}
  Obj={Mk=25 Mnemo="BackOut" Hint="Выдать входной объект для поиска"}
  Obj={Mk=30 Mnemo="BackOutMk" Hint="Выдать МК со входным объектом для поиска"}
  Obj={Mk=31 Mnemo="CopyBackOutMk" Hint="Выдать МК с копией входного объекта для поиска"}

  Obj={Mk=35 Mnemo="LoadBackOut" Hint="Выдать нагрузку входного объекта для поиска"}
  Obj={Mk=36 Mnemo="LoadBackOutMk" Hint="Выдать МК с нагрузкой входного объекта для поиска"}

  Obj={Mk=100 Mnemo="RezOut" Hint="Выдача результата сравнения"}
  Obj={Mk=101 Mnemo="RezOutMK" Hint="Выдача МК с результатом сравнения"}
  Obj={Mk=105 Mnemo="MkAtrAdd" Hint="Добавить МК"}
  Obj={Mk=106 Mnemo="MkAtrClear" Hint="Очистить список МК"}
  Obj={Mk=200 Mnemo="LineToLast" Hint="Установить текущую строку на последнюю строку"}
  Obj={Mk=205 Mnemo="LinePush" Hint="Положить текущую линию в стек"}
  Obj={Mk=206 Mnemo="LineLastPush" Hint="Положить последнюю линию в стек"}
  Obj={Mk=207 Mnemo="LinePop" Hint="Взять текущую линию из стека"}

  Obj=CommonMkList
}

// GraphTransf
	FuTypeIndexes.CellSet=102 FuTypeMkTrees.CellSet=
{
  Obj={Mk=1 Mnemo="Set" Hint="Установить указатель на ОА-граф"}
  Obj={Mk=2 Mnemo="Clear" Hint="Очистить таблицу"}
  Obj={Mk=5 Mnemo="AddLine" Hint="Добавить линию"}
  Obj={Mk=10 Mnemo="AddToLastLine" Hint="Добавить в последнюю линию"}
  Obj={Mk=15 Mnemo="HostPointSet" Hint="Установить значение в буфер для указателя"}
  Obj={Mk=17 Mnemo="AddPointToHost" Hint="Добавить адрес в линию с хост-адресом"}
  Obj={Mk=18 Mnemo="Index" Hint="Получить индекс указателя"}
  Obj={Mk=19 Mnemo="DelLastLine" Hint="Удалить последнюю линию"}
  Obj={Mk=20 Mnemo="DelLineWithPoint" Hint="Удалить линию с адресом"}
  Obj={Mk=45 Mnemo="AccumSet" Hint="Установить указатель в аккумулятор"}
  Obj={Mk=46 Mnemo="AccumPop" Hint="Удалить указатель из аккумулятора"}
  Obj={Mk=50 Mnemo="Concat" Hint="Конкатенировать ИК"}
  Obj={Mk=51 Mnemo="ConcatCopy" Hint="Конкатенировать и копировать ИК"}
  Obj={Mk=55 Mnemo="ConcatOfAccum" Hint="Конкатенировать ИК с исп. аккумулятора"}
  Obj={Mk=56 Mnemo="ConcatCopyOfAccum" Hint="Конкатенировать копию ИК с исп. аккумулятора"}
  Obj={Mk=60 Mnemo="SetPointToBuffer" Hint="Установить адрес ИП в буфер"}
  Obj={Mk=66 Mnemo="SetLoad" Hint="Записать в нагрузку"}
  Obj={Mk=67 Mnemo="SetAttr" Hint="Записать в атрибут"}
  Obj={Mk=68 Mnemo="SetPoint" Hint="Записать по указателю в нагрузке"}
  Obj={Mk=70 Mnemo="DeleteSingle" Hint="Одиночное удаление"}
  Obj={Mk=71 Mnemo="DeleteMultiple" Hint="Пакетное удаление"}
  Obj={Mk=75 Mnemo="InsertBefore" Hint="Вставить ИП до бегунка"}
  Obj={Mk=76 Mnemo="InsertAfter" Hint="Вставить ИП после бегунка"}
  Obj={Mk=80 Mnemo="GoToIp" Hint="Перейти к ИП"}
  Obj={Mk=81 Mnemo="GoToIс" Hint="Перейти к ИК"}
  Obj={Mk=82 Mnemo="GoToBackIp" Hint="Отойти к предыдущей ИП"}
  Obj={Mk=83 Mnemo="GoToBackIc" Hint="Отойти к предыдущей ИК"}
}

// ALUGeneral
	FuTypeIndexes.CellSet=103 FuTypeMkTrees.CellSet=
{
//  Obj={Mk=30   Mnemo="ErrorCodeOut" Hint="Выдать код ошибки"}
//  Obj={Mk=31   Mnemo="ErrorCodeOutMk" Hint="Выдать МК с кодом ошибки"}
//  Obj={Mk=32   Mnemo="GeneralErrorProgSet" Hint="Установить укаатель на общую программу обработки ошибки"}

  Obj={Mk=21   Mnemo="OutSet"  Hint="Установить ссылку на переменную для записи резульатата"}
  Obj={Mk=22   Mnemo="OutMkSet"  Hint="Установить МК для выдачи резульатата"}

  Obj={Mk=95   Mnemo="Nop"  Hint="Пустая операция"}
  Obj={Mk=23 Mnemo="Out" Hint="Выдать аккумулятор"}
  Obj={Mk=24 Mnemo="OutMk" Hint="Выдать МК аккумулятор"}

  Obj={Mk=130 Mnemo="VarNew" Hint="оздать и инициализировать новую переменную"}
  Obj={Mk=131 Mnemo="VarOut" Hint="Выдать ссылку на новую переменную"}
  Obj={Mk=132 Mnemo="VarOutMk" Hint="Выдать MK со ссылкой на новую переменную"}

    Obj={Mnemo="Prog" Hint="Управление программой" Comment
    Obj={Mk=1  Mnemo="Prog" Hint="Выполнить подпрограмму"}
    Obj={Mk=2  Mnemo="ProgCycle" Hint="Выполнить подпрограмму с циклом"}
    Obj={Mk=3  Mnemo="ProgPost" Hint="Выполнить подпрограмму с циклом с поистусловием"}
    Obj={Mk=4  Mnemo="ProgBreak" Hint="Выполнить подпрограмму и выйти из программы"}
    Obj={Mk=5  Mnemo="YesProg" Hint="Выполнить подпрограмму по true"}
    Obj={Mk=6  Mnemo="YesProgCycle" Hint="Выполнить подпрограмму по true с циклом"}
    Obj={Mk=7  Mnemo="YesProgPost" Hint="Выполнить подпрограмму по true с циклом с поистусловием"}
    Obj={Mk=8  Mnemo="YesProgBreak" Hint="Выполнить подпрограмму по true и выйти из программы"}
    Obj={Mk=9 Mnemo="NoProg" Hint="Выполнить подпрограмму  по false"}
    Obj={Mk=10 Mnemo="NoProgCycle" Hint="Выполнить подпрограмму по false  с циклом"}
    Obj={Mk=11 Mnemo="NoProgPost" Hint="Выполнить подпрограмму по false  с циклом с поистусловием"}
    Obj={Mk=12 Mnemo="NoProgBreak" Hint="Выполнить подпрограмму по false и выйти"}
    Obj={Mk=13 Mnemo="Break" Hint="Досрочный выход из цикла"}
    Obj={Mk=14 Mnemo="Continue" Hint="Досрочный переход к следующей итерации цикла"}
    Obj={Mk=15 Mnemo="Calc" Hint="Вычислить формулу"}
    Obj={Mk=16 Mnemo="DeepOut" Hint="Выдать глубину программы"}
    Obj={Mk=17 Mnemo="DeepOutMk" Hint="Выдать МК с глубиной программы"}
    Obj={Mk=18   Mnemo="Go"    Hint="Переход"}
    Obj={Mk=19   Mnemo="YesGo" Hint="Переход по true"}
    Obj={Mk=20   Mnemo="NoGo"  Hint="Переход по false"}

    Obj={Mk=109 Mnemo="CycleLimitSet" Hint="Установить лимит итераций цикла (чтобы не было зацикливания)"}
    Obj={Mk=110 Mnemo="RangeStopSet" Hint="Установить конечное значение диапазона range (может передаваться указатель на множество/массив для перебора range)"}
    Obj={Mk=111 Mnemo="RangeStepSet" Hint="Установить шаг для диапазона range"}
    Obj={Mk=112 Mnemo="RangeProgExec" Hint="Выполнить программу для цикла range"}

    Obj={Mk=115 Mnemo="MaxProgSet" Hint=" Программа при нахождении промежуточного максимума"}
    Obj={Mk=117 Mnemo="MinProgSet" Hint="Программа при нахождении промежуточного минимума"}

  }
  Obj={Mnemo="Ariphmetics" Hint="Арифметические функции" Comment
//  	Obj={Mk=100 Mnemo="AccumReset" Hint="Сбросить аккумулятор"}
  	Obj={Mk=26 Mnemo="Set" Hint="Установить значение в аккумулятор"}
  	Obj={Mk=25 Mnemo="Get" Hint="Установить значение в аккумулятор"}
  	Obj={Mk=34 Mnemo="Inc" Hint="Декремент (если Load=nil инкремент аккумулятора)"}
  	Obj={Mk=35 Mnemo="Dec" Hint="Инкремент (если Load=nil инкремент аккумулятора)"}
  	Obj={Mk=30 Mnemo="Sum" Hint="Прибавить"}
  	Obj={Mk=31 Mnemo="Sub" Hint="Вычесть"}
  	Obj={Mk=33 Mnemo="Mul" Hint="Умножить"}
  	Obj={Mk=32 Mnemo="Div" Hint="Разделить"}
  	Obj={Mk=37 Mnemo="Max" Hint=""}
  	Obj={Mk=36 Mnemo="Min" Hint=""}
  	Obj={Mk=44 Mnemo="Mod" Hint=""}
  	Obj={Mk=45 Mnemo="Sqrt" Hint=""}
  	Obj={Mk=46 Mnemo="Pow" Hint=""}
  	Obj={Mk=51 Mnemo="Log" Hint=""}
  	Obj={Mk=52 Mnemo="Random" Hint=""}
  	Obj={Mk=28 Mnemo="GetLogic" Hint=""}
  	Obj={Mk=47 Mnemo="Abs" Hint=""}
  	Obj={Mk=48 Mnemo="Ceil" Hint=""}
  	Obj={Mk=49 Mnemo="Floor" Hint=""}
  	Obj={Mk=50 Mnemo="Round" Hint=""}
  	Obj={Mk=56 Mnemo="DivInt" Hint="Целочисленное деление"}
  	Obj={Mk=69 Mnemo="Remainder" Hint="Остаток от деления"}
  }

  Obj={Mnemo="Comparision" Hint="Триганометрические функции" Comment
	Obj={Mk=63 Mnemo="EQ" Hint="=="}
	Obj={Mk=64 Mnemo="NotEQ" Hint="<>"}
	Obj={Mk=65 Mnemo="Bigger" Hint=">"}
	Obj={Mk=66 Mnemo="BiggerEQ" Hint=">="}
	Obj={Mk=67 Mnemo="Smaller" Hint="<"}
	Obj={Mk=68 Mnemo="SmallerEQ" Hint="<="}
	Obj={Mk=71 Mnemo="Compar3Way" Hint="Трехстороннее сравнение"}
  }

  Obj={Mnemo="Logic" Hint="Логические функции" Comment
  	Obj={Mk=53 Mnemo="Not" Hint="НЕ"}
  	Obj={Mk=55 Mnemo="Or" Hint=""}
  	Obj={Mk=54 Mnemo="And" Hint=""}    
  	Obj={Mk=57 Mnemo="Xor" Hint=""}    
  	Obj={Mk=58 Mnemo="NotBit" Hint=""}    
  	Obj={Mk=59 Mnemo="OrBit" Hint=""}    
  	Obj={Mk=60 Mnemo="AndBit" Hint=""}    
  	Obj={Mk=61 Mnemo="MrBit" Hint=""}    
  	Obj={Mk=62 Mnemo="MlBit" Hint=""}    
  	Obj={Mk=70 Mnemo="XorBit" Hint=""}    
  }

  Obj={Mnemo="Triganometric" Hint="Триганометрические функции" Comment
  	Obj={Mk=39 Mnemo="Sin" Hint=""}
  	Obj={Mk=38 Mnemo="Cos" Hint=""}
  	Obj={Mk=40 Mnemo="Tan" Hint=""}
  	Obj={Mk=42 Mnemo="Acos" Hint=""}
  	Obj={Mk=41 Mnemo="Asin" Hint=""}
  	Obj={Mk=52 Mnemo="Random" Hint=""}
  }
  Obj=CommonMkList
}

// InOutNewMkList
	FuTypeIndexes.CellSet=104 FuTypeMkTrees.CellSet=
   {
//	Obj={Mk= Mnemo="" Hint=""}
  	Obj={Mk=1 Mnemo="IndSet" Hint="Установить индекс текущего канала"}
  	Obj={Mk=2 Mnemo="AutoIncSet" Hint="установить автоматический инкремент (по умолчанию 0)"}
  	Obj={Mk=3 Mnemo="IndOut" Hint="выдать значение текущего индекса"}
  	Obj={Mk=4 Mnemo="IndOutMk" Hint="выдать МК со значением текущего индекса"}
  	Obj={Mk=5 Mnemo="NameOut" Hint="выдать значение(имя?) текущего индекса"}
  	Obj={Mk=6 Mnemo="NameOutMk" Hint="выдать МК со значением(именем) текущего индекса"}
  	Obj={Mk=7 Mnemo="NameSet" Hint="установить имя текущего канала"}
	Obj={Mk=8 Mnemo="NameIndSet" Hint="установить индекс по имени канала"}
	Obj={Mk=10 Mnemo="ChannelCreate" Hint="на входе количество создаваемых каналов"}

	Obj={Mk=15 Mnemo="NChannelsOut" Hint="Выдать количество каналов"}
  	Obj={Mk=16 Mnemo="NChannelsOutMK" Hint="Выдать мк с количеством каналов"}
	Obj={Mk=17 Mnemo="ChannelClear" Hint="Очистить каналы"}	
	Obj={Mk=18 Mnemo="ChannelNameSet" Hint="Установить имя канала"}
	Obj={Mk=19 Mnemo="ChannelNameOut" Hint="Выдать имя канала"}
	Obj={Mk=20 Mnemo="ChannelNameOutMk" Hint="Выдать мк с именем канала"}
	Obj={Mk=24 Mnemo="IndSet" Hint="Установить текущий индекс"}
	Obj={Mk=25 Mnemo="ChModeOut" Hint="Выдать режим канала"}
	Obj={Mk=26 Mnemo="ChModeOutMk" Hint="Выдать мк с режимом канала"}
	Obj={Mk=27 Mnemo="ChModeSet" Hint="Установить режим канала"}
	Obj={Mk=28 Mnemo="ChannelActiveSet" Hint="Установить активность/неактивность текущего канала"}
	Obj={Mk=29 Mnemo="SignalSet" Hint="установить уровень текущего сигнала"}
	Obj={Mk=30 Mnemo="SignalOutMk" Hint="выдать мк с текущим сигналом"}
	Obj={Mk=31 Mnemo="SignalPrevOutMk" Hint="выдать мк с предыдущим сигналом"}
	Obj={Mk=36 Mnemo="SensitSet" Hint="установить чувствительность"}
	Obj={Mk=37 Mnemo="SensitOutMk" Hint="выдать мк со значением чувствительности"}
	Obj={Mk=38 Mnemo="SignalMkSet" Hint="Установить милликоманду для выдачи входного сигнала"}
	Obj={Mk=39 Mnemo="SignalAtrSet" Hint="Установить атрибут для выдачи входного сигнала"}
	Obj={Mk=40 Mnemo="BorderSet" Hint=""}
	Obj={Mk=41 Mnemo="BorderUpProgSet" Hint=""}
	Obj={Mk=42 Mnemo="BorderDownProgSet" Hint=""}


     Obj={Mnemo="Signal out" Hint="Выдача сигнала" Comment
       Obj={Mk=99 Mnemo="SignalCurrentOut" Hint="выдача текущего сигнала"}
       Obj={Mk=100 Mnemo="SignalOut_0" Hint="выдача сигнала 0 канала"}
       Obj={Mk=101 Mnemo="SignalOut_1" Hint="выдача сигнала 1 канала"}
       Obj={Mk=102 Mnemo="SignalOut_2" Hint="выдача сигнала 2 канала"}
       Obj={Mk=103 Mnemo="SignalOut_3" Hint="выдача сигнала 3 канала"}
       Obj={Mk=104 Mnemo="SignalOut_4" Hint="выдача сигнала 4 канала"}
       Obj={Mk=105 Mnemo="SignalOut_5" Hint="выдача сигнала 5 канала"}
       Obj={Mk=106 Mnemo="SignalOut_6" Hint="выдача сигнала 6 канала"}
       Obj={Mk=107 Mnemo="SignalOut_7" Hint="выдача сигнала 7 канала"}
       Obj={Mk=108 Mnemo="SignalOut_8" Hint="выдача сигнала 8 канала"}
       Obj={Mk=109 Mnemo="SignalOut_9" Hint="выдача сигнала 9 канала"}
       Obj={Mk=110 Mnemo="SignalOut_10" Hint="выдача сигнала 10 канала"}
       Obj={Mk=111 Mnemo="SignalOut_11" Hint="выдача сигнала 11 канала"}
       Obj={Mk=112 Mnemo="SignalOut_12" Hint="выдача сигнала 12 канала"}
       Obj={Mk=113 Mnemo="SignalOut_13" Hint="выдача сигнала 13 канала"}
       Obj={Mk=114 Mnemo="SignalOut_14" Hint="выдача сигнала 14 канала"}
       Obj={Mk=115 Mnemo="SignalOut_15" Hint="выдача сигнала 15 канала"}
     }

     Obj={Mnemo="Signal out Mk" Hint="Выдача МК со значением сигнала" Comment
       Obj={Mk=149 Mnemo="SignaCurrentlOutMk" Hint="выдача мк со значением текущего сигнала 0 канала"}
       Obj={Mk=150 Mnemo="SignalOutMk_1" Hint="выдача мк со значением сигнала 0 канала"}
       Obj={Mk=151 Mnemo="SignalOutMk_2" Hint="выдача мк со значением сигнала 1 канала"}
       Obj={Mk=152 Mnemo="SignalOutMk_3" Hint="выдача мк со значением сигнала 2 канала"}
       Obj={Mk=153 Mnemo="SignalOutMk_4" Hint="выдача мк со значением сигнала 3 канала"}
       Obj={Mk=154 Mnemo="SignalOutMk_5" Hint="выдача мк со значением сигнала 4 канала"}
       Obj={Mk=155 Mnemo="SignalOutMk_6" Hint="выдача мк со значением сигнала 5 канала"}
       Obj={Mk=156 Mnemo="SignalOutMk_7" Hint="выдача мк со значением сигнала 6 канала"}
       Obj={Mk=157 Mnemo="SignalOutMk_8" Hint="выдача мк со значением сигнала 7 канала"}
       Obj={Mk=158 Mnemo="SignalOutMk_9" Hint="выдача мк со значением сигнала 8 канала"}
       Obj={Mk=159 Mnemo="SignalOutMk_10" Hint="выдача мк со значением сигнала 9 канала"}
       Obj={Mk=160 Mnemo="SignalOutMk_11" Hint="выдача мк со значением сигнала 10 канала"}
       Obj={Mk=161 Mnemo="SignalOutMk_12" Hint="выдача мк со значением сигнала 11 канала"}
       Obj={Mk=162 Mnemo="SignalOutMk_13" Hint="выдача мк со значением сигнала 12 канала"}
       Obj={Mk=163 Mnemo="SignalOutMk_14" Hint="выдача мк со значением сигнала 13 канала"}
       Obj={Mk=164 Mnemo="SignalOutMk_15" Hint="выдача мк со значением сигнала 14 канала"}
       Obj={Mk=165 Mnemo="SignalOutMk_15" Hint="выдача мк со значением сигнала 15 канала"}
     }
     Obj={Mnemo="Signal set" Hint="Установка сигнала" Comment
       Obj={Mk=200 Mnemo="SignalSet_0" Hint="установить сигнал 0 канала"}
	  Obj={Mk=201 Mnemo="SignalSet_1" Hint="установить сигнал 1 канала"}
	  Obj={Mk=202 Mnemo="SignalSet_2" Hint="установить сигнал 2 канала"}
	  Obj={Mk=203 Mnemo="SignalSet_3" Hint="установить сигнал 3 канала"}
	  Obj={Mk=204 Mnemo="SignalSet_4" Hint="установить сигнал 4 канала"}
	  Obj={Mk=205 Mnemo="SignalSet_5" Hint="установить сигнал 5 канала"}
	  Obj={Mk=206 Mnemo="SignalSet_6" Hint="установить сигнал 6 канала"}
	  Obj={Mk=207 Mnemo="SignalSet_7" Hint="установить сигнал 7 канала"}
	  Obj={Mk=208 Mnemo="SignalSet_8" Hint="установить сигнал 8 канала"}
	  Obj={Mk=209 Mnemo="SignalSet_9" Hint="установить сигнал 9 канала"}
	  Obj={Mk=210 Mnemo="SignalSet_10" Hint="установить сигнал 10 канала"}
	  Obj={Mk=211 Mnemo="SignalSet_11" Hint="установить сигнал 11 канала"}
	  Obj={Mk=212 Mnemo="SignalSet_12" Hint="установить сигнал 12 канала"}
	  Obj={Mk=213 Mnemo="SignalSet_13" Hint="установить сигнал 13 канала"}
	  Obj={Mk=214 Mnemo="SignalSet_14" Hint="установить сигнал 14 канала"}
	  Obj={Mk=215 Mnemo="SignalSet_15" Hint="установить сигнал 15 канала"}
     }
     Obj=CommonMkList
  }

// FSMMkList
	FuTypeIndexes.CellSet=105 FuTypeMkTrees.CellSet=
   {
//	Obj={Mk= Mnemo="" Hint=""}
  	Obj={Mk=3 Mnemo="RecieverMKSet" Hint="Установить значение ресивера"}
	Obj={Mk=5 Mnemo="StageInProgAdd" Hint="Добавить входную программу для состояния"}
	Obj={Mk=6 Mnemo="StageOutProgAdd" Hint="Добавить выходную программу для состояния"}
	Obj={Mk=7 Mnemo="StageInProgClear" Hint="Очистить список входных программ состояний"}
	Obj={Mk=8 Mnemo="StageOutProgClear" Hint="Очистить список выходных программ состояний"}
  	Obj={Mk=10 Mnemo="TemplSet" Hint="Установить шаблон"}
  	Obj={Mk=11 Mnemo="TemplClear" Hint="Очистить ИК шаблона"}
  	Obj={Mk=15 Mnemo="TemplOut" Hint="Выдать шаблон"}
  	Obj={Mk=16 Mnemo="TemplOutMK" Hint="выдать МК со значением шаблона"}
  	Obj={Mk=17 Mnemo="TemplClear" Hint="очистить шаблон"}
	Obj={Mk=20 Mnemo="VarSet" Hint="установить значение ИК"}
	Obj={Mk=21 Mnemo="VarOut" Hint="выдать ИК"}
	Obj={Mk=22 Mnemo="VarOutMK" Hint="Выдать МК с ИК"}
  	Obj={Mk=30 Mnemo="SignalOut" Hint="Выдать сигнал"}
	Obj={Mk=31 Mnemo="SignalOutMK" Hint="Выдать мк со значением сигнала"}	
	Obj={Mk=33 Mnemo="SignalAtrOut" Hint="выдать атрибут сигнала"}
	Obj={Mk=34 Mnemo="SignalAtrOutMK" Hint="Выдать МК со значением атрибута сигнала"}
	Obj={Mk=35 Mnemo="SignalLoadOut" Hint="Выдать нагрузку сигнала"}
	Obj={Mk=36 Mnemo="SignalLoadOutMK" Hint="Выдать мк со значением нагрузки сигнала"}
	Obj={Mk=37 Mnemo="SignalAtrSet" Hint="Установить атрибут сигнала"}
	Obj={Mk=38 Mnemo="SignalLoadSet" Hint="Установить нагрузку сигнала"}
	Obj={Mk=50 Mnemo="SignalSet" Hint="Установить сигнал"}
	Obj={Mk=51 Mnemo="Send" Hint="Отправить ИП"}
	
     Obj=CommonMkList
  }

// NeuronMkList
	FuTypeIndexes.CellSet=106 FuTypeMkTrees.CellSet=
   {
	Obj={Mk=1 Mnemo="SizeSet" Hint="Установить количество входов нейрона"}
	Obj={Mk=2 Mnemo="EpsSet" Hint="Установить погрешность вычисления"}
	Obj={Mk=3 Mnemo="FTypeSet" Hint="Устновить тип выходной функции"}
	Obj={Mk=5 Mnemo="OutMkAdd" Hint="Добавить МК для выходного сигнала"}
	Obj={Mk=6 Mnemo="OutMkClear" Hint="Очистить буфер МК для выходного сигнала"}
	Obj={Mk=7 Mnemo="FArgAdd" Hint="Добавить аргумент выходной функции"}
	Obj={Mk=8 Mnemo="FArgClear" Hint="Очистить буфер аргументов выходной функции"}
	Obj={Mk=10 Mnemo="Out" Hint="Выдать выходной сигнал"}
	Obj={Mk=11 Mnemo="OutMk" Hint="Выдать МК с выходным сигналом"}
	Obj={Mk=12 Mnemo="DeltaSet" Hint="Установить погрешность вычислений"}
	Obj={Mk=14 Mnemo="WIndSet" Hint="Установить индекс веса"}
	Obj={Mk=15 Mnemo="WIndStepSet" Hint="Установить индекс шага инкремента веса"}
	Obj={Mk=17 Mnemo="XIndSet" Hint="Установить индекс входного сигнала"}
	Obj={Mk=18 Mnemo="XIndStepSet" Hint="Установить шага инремента входного сигнала"}
     Obj={Mnemo="WSet" Hint="Установка сигнала" Comment
	  Obj={Mk=19 Mnemo="WSet" Hint="Установить весовой коэффициент по индексу"}
	  Obj={Mk=20 Mnemo="W0Set" Hint="Установить весовой коэффициент"}
	  Obj={Mk=21 Mnemo="W1Set" Hint="Установить весовой коэффициент"}
	  Obj={Mk=22 Mnemo="W2Set" Hint="Установить весовой коэффициент"}
	  Obj={Mk=23 Mnemo="W3Set" Hint="Установить весовой коэффициент"}
	  Obj={Mk=24 Mnemo="W4Set" Hint="Установить весовой коэффициент"}
	  Obj={Mk=25 Mnemo="W5Set" Hint="Установить весовой коэффициент"}
	  Obj={Mk=26 Mnemo="W6Set" Hint="Установить весовой коэффициент"}
	  Obj={Mk=27 Mnemo="W7Set" Hint="Установить весовой коэффициент"}
	}
     Obj={Mnemo="XSet" Hint="Установка сигнала" Comment
	  Obj={Mk=49 Mnemo="X0Set" Hint="Установить значение сигнала по индексу"}
	  Obj={Mk=50 Mnemo="X0Set" Hint="Установить значение сигнала"}
	  Obj={Mk=51 Mnemo="X1Set" Hint="Установить значение сигнала"}
	  Obj={Mk=52 Mnemo="X2Set" Hint="Установить значение сигнала"}
	  Obj={Mk=53 Mnemo="X3Set" Hint="Установить значение сигнала"}
	  Obj={Mk=54 Mnemo="X4Set" Hint="Установить значение сигнала"}
	  Obj={Mk=55 Mnemo="X5Set" Hint="Установить значение сигнала"}
	  Obj={Mk=56 Mnemo="X6Set" Hint="Установить значение сигнала"}
	  Obj={Mk=57 Mnemo="X7Set" Hint="Установить значение сигнала"}
	}
     Obj=CommonMkList
   }
// NetManagerMkList
	FuTypeIndexes.CellSet=107 FuTypeMkTrees.CellSet=
   {
      Obj={Mk=1 Mnemo="NtaySet" Hint="Установить количество итераций по времени"}
      Obj={Mk=2 Mnemo="XSet" Hint="Установить количество точек сетки по X"}
      Obj={Mk=3 Mnemo="XAdd" Hint="Увеличить размерность X на Load единиц (по умолчаниию на 1)"}
      Obj={Mk=4 Mnemo="XOutMk" Hint="Выдать количество точек сетки по X"}
      Obj={Mk=5 Mnemo="YSet" Hint="Установить количество точке сетки по Y"}
      Obj={Mk=6 Mnemo="YAdd" Hint="Увеличить размерность X на Load единиц (по умолчаниию на 1)"}
      Obj={Mk=7 Mnemo="YOutMk" Hint="Выдать количество точек сетки по Y"}
      Obj={Mk=9 Mnemo="ASet" Hint="Установить коэффициент a в уравнении"}
      Obj={Mk=10 Mnemo="hSet" Hint="Установить расстояние между точками"}
      Obj={Mk=12 Mnemo="taySet" Hint="Установить временной шаг моделирования"}
      Obj={Mk=30 Mnemo="NetGen" Hint="Генерация вычилсительной сетки"}
      Obj={Mk=35 Mnemo="Start" Hint="Начало итерации (в нагрузке может передаваться количество тактов моделирования)"}
      Obj={Mk=40 Mnemo="ConstTSet" Hint="Установить константную точку (передаются координаты, затем температура)"}
      Obj={Mk=43 Mnemo="FiringProgSet" Hint="Установить программу, запукаемую по активации вершины"}
      Obj={Mk=50 Mnemo="RezOutCons" Hint="Вывод результатов моделирования на консоль или файл, если в нагрузке указано имя файла"}
      Obj={Mk=60 Mnemo="ReadTimeSet" Hint="Установить время чтения данных"}
      Obj={Mk=61 Mnemo="CalcTimeSet" Hint="Установить время вычислений"}
      Obj={Mk=65 Mnemo="NetSchedulerSet" Hint="Установить ссылку на планировщик вычислений для ФУ сетки"}
      Obj=CommonMkList
   }

// SchedulerNewMkList
	FuTypeIndexes.CellSet=108 FuTypeMkTrees.CellSet=
   {
      Obj={Mk=1 Mnemo="EventserSet" Hint=""}
      Obj={Mk=2 Mnemo="Clear" Hint="Сбросить параметры моделирования"}
      Obj={Mk=5 Mnemo="SchedulingTimeSet" Hint=""}
      Obj={Mk=8 Mnemo="NCoresSet" Hint=""}
      Obj={Mk=10 Mnemo="TimeOut" Hint=""}
      Obj={Mk=11 Mnemo="TimeOutMk" Hint=""}
      Obj={Mk=15 Mnemo="SchedulingProgSet" Hint="Установить ссылка на программу, запускаемую при планировании вычислений"}
      Obj={Mk=40 Mnemo="CurrTimeRefSet" Hint="Установить ссылку на переменную с текущим модельным временем"}
      Obj={Mk=50 Mnemo="CoreCountOut" Hint="Выдать число занятых ядер"}
      Obj={Mk=51 Mnemo="CoreCountOutMk" Hint="Выдать МК с числом занятых ядер"}
      Obj={Mk=55 Mnemo="MkQueueOut" Hint="Выдать количество МК в очереди на выполнение"}
      Obj={Mk=56 Mnemo="MkQueueOutMk" Hint="Выдать МК с количеством МК в очереди на выполнение"}
      Obj={Mk=60 Mnemo="MkCountOut" Hint="Выдать количество МК на выполнении и ожидании"}
      Obj={Mk=61 Mnemo="MkCountOutMk" Hint="Выдать МК с количеством МК на выполнении и ожидании"}

      Obj={Mk=65 Mnemo="ParallelFactorOut" Hint="Выдать коэффициент параллелизма"}
      Obj={Mk=66 Mnemo="ParallelFactorOutMk" Hint="Выдать МК с коэффициентом параллелизма"}
      Obj={Mk=70 Mnemo="AverageMkQueueOut" Hint="Выдать среднюю длину очереди"}
      Obj={Mk=71 Mnemo="AverageMkQueueOutMk" Hint="Выдать МК со средней длиной очереди"}
      Obj={Mk=75 Mnemo="MaxMkQueueOut" Hint="Выдать максимальную длину очереди"}
      Obj={Mk=76 Mnemo="MaxMkQueueOutMk" Hint="Выдать МК с максимальной длиной очереди"}

      Obj=CommonMkList
   }

// EventserMewMkList
	FuTypeIndexes.CellSet=109 FuTypeMkTrees.CellSet=
   {
      Obj={Mk=1 Mnemo="Start" Hint="Начать моделирование"}
      Obj={Mk=5 Mnemo="WorkSet" Hint="Установить флаг рабочего режима"}
      Obj={Mk=45 Mnemo="TimeSet" Hint="Установить текущее модельное время"}
      Obj={Mk=50 Mnemo="TimeOut" Hint="Выдать текущее модельное время"}
      Obj={Mk=51 Mnemo="TimeOutMk" Hint="Выдать МК с текущим модельным временем"}
      Obj={Mk=52 Mnemo="TimeOutRefMk" Hint="Выдать МК со ссылкой на переменную текущего модельного времени"}
      Obj=CommonMkList
   }
// MeanShiftManager
	FuTypeIndexes.CellSet=110 FuTypeMkTrees.CellSet=
   {
      Obj={Mk=5 Mnemo="Start" Hint="Считать файл и начать вычисление"}
      Obj={Mk=8 Mnemo="NVSet" Hint="Выдать текущее модельное время"}
      Obj={Mk=51 Mnemo="epsXSet" Hint=""}
      Obj={Mk=52 Mnemo="epsYSet" Hint=""}
      Obj=CommonMkList
   }
// BagManager
	FuTypeIndexes.CellSet=111 FuTypeMkTrees.CellSet=
   {
	 Obj={Mk=1 Mnemo="Start" Hint="Начало вычислений (в нагрузке имя файла с исходными данными)"}
	 Obj={Mk=10 Mnemo="RezOur" Hint="Выдать результат вычислений"}
	 Obj={Mk=11 Mnemo="ResOutMk" Hint="Выдать МК с результатами вычислений"}

	 Obj={Mk=90 Mnemo="WMaxSet" Hint="Установить максимальный объем рюкзака"}
	 Obj={Mk=91 Mnemo="WMaxOfItem" Hint="Установить максимальный размер одной вещи"}
	 Obj={Mk=92 Mnemo="PMaxOfItem" Hint="Установить максимальный размер одной вещи"}
	 Obj={Mk=93 Mnemo="NItemSet" Hint="становить количество предметов для укладки и начать вычисление"}

	 Obj={Mk=100 Mnemo="CalcTimeSet" Hint="Установить время вычисления результата"}
	 Obj={Mk=101 Mnemo="SendTimeSet" Hint="Установить время пересылки данных"}

      Obj=CommonMkList
   }

// GaussManager
	FuTypeIndexes.CellSet=112 FuTypeMkTrees.CellSet=
   {
	 Obj={Mk=1 Mnemo="Start" Hint="Начало вычислений (в нагрузке имя файла с исходными данными)"}
      Obj=CommonMkList
   }
  FuTypeMkTrees.CellSet=nil
}


//		Obj={Mk= Mnemo="" Hint=""}

CommonMkList!
WindowMkList!
ZeroFUMkList!

LastFuNameIc{Mnemo=LastFuName("")} \\ ИП для поиска мнемоники последнего используемого ФУ (для .Mk)

\\ Подпрограмма заполнения массива милликоманд
Bus={FuTypeMkTrees.RowSet=0 FuTypeMkList.ColSet=0
	MkMaker.AtrSet=Mnemo MkMaker.AtrSet=Mk MkMaker.AtrSet=Hint MkMaker.SortIndexSet=0
	FuTypeMkTrees.ProgToNilRun={FuTypeMkTrees.CellPopMk=MkMaker.Set MkMaker.MatrOutMk=FuTypeMkList.CellSet
	}
}
Bus={FuTypeIndexes.IndexModeSet=0 FuTypeMkTrees.IndexModeSet=0 FuTypeMkList.IndexModeSet=0}

Bus={\**\MnemoServiceTable.BusModeSet=2 MnemoServiceTable.BusMkSet=MkListFind.FindOr}

Bus={\**\MkListFind.Set={MkList}
	MkListFind.FailProgSet={Lexica.Stop LogCon.VarOut="Wrong Mkand description!!!"}
	MkListFind.SuccessProgSet={MkListFind.SourcePointPopMk=MkMnemoAnalizator.MatrSet
		MkListFind.InObjPopMk=MkBegRangeFind.FindOr
	}
}
Bus={\**\MkBegRangeFind.Set={MkBegRange}
MkBegRangeFind.FailProgSet={MkAlu.Set=0 Lexica.ReceiverToStackMkSet=MkFuTypeDotWait.FindIp
	Lexica.MnemoReceiverMkSet=MkFuTypeDotWait.FindIp
}
MkBegRangeFind.SuccessProgSet={MkBegRangeFind.SourcePointPopMk=MkAlu.Set
	Lexica.ReceiverToStackMkSet=MkMnemoDotWait.FindIp
	}
}
\**\MkFuTypeDotWait.Set={Separator="."}
MkFuTypeDotWait.SuccessProgSet={Lexica.ReceiverMkSet=MkMnemoWait.FindIp Lexica.MnemoReceiverMkSet=MkMnemoWait.FindIp}
MkFuTypeDotWait.FailProgSet={MkBegRangeFind.InObjPopMk=MkFuTypeWait.FindOr}

MkFuTypeWait.Set={FUTypeDef=nil}
MkFuTypeWait.FailProgSet={Lexica.Stop LogCon.VarOut="Wrong futype description!!!"}
MkFuTypeWait.SuccessProgSet={
	MkFuTypeWait.SourceDataPop=temp ObjManager.CapsCopy={ConstInt=temp(0)!}
	Lexica.MnemoReceiverMkSet=MnemoServiceTable.FindIp
	ObjManager.CapsOutMk=Lexica.ReceiverFromStackLexemaPop 
	MkFuTypeDotWait.InObjPopMk=Lexica.LexemaToReceiver
}
MkMnemoDotWait.BusModeSet=2
MkMnemoDotWait.Set=
>{Separator="." Lexica.ReceiverMkSet=MkMnemoWait.FindIp Lexica.MnemoReceiverMkSet=MkMnemoWait.FindIp}
>{Separator="!" Lexica.PrevLexemaPopMk=MnemoServiceTable.DelFindIcLines Lexica.ReceiverMkSet=SyntaxRoot.FindIp}
>{0 Lexica.Stop LogCon.VarOut="Wrong Mkand description!!!"}

Bus={\**\MkMnemoWait.Set={Mnemo}		
	MkMnemoWait.FailProgSet={Lexica.Stop LogCon.VarOut="Wrong Mkand description!!!"}
	MkMnemoWait.SuccessProgSet={MkMnemoWait.InObjDataPopMk=MkMnemoAnalizator.SearchInCol}
}
Bus={MkMnemoAnalizator.ColOffsetSet=1 MkMnemoAnalizator.SearchModeSet=1
	\**\MkMnemoAnalizator.SearchSuccessProgSet={
		MkMnemoAnalizator.CellPopMk=MkAlu.Add		
		MkAlu.Pop=temp ObjManager.CapsCopy={Mk=temp(0)!}
		Lexica.MnemoReceiverMkSet=MnemoServiceTable.FindIp
		ObjManager.CapsOutMk=Lexica.ReceiverFromStackLexemaPop
	}
	MkMnemoAnalizator.SearchFailProgSet={Lexica.Stop LogCon.VarOut="Wrong Mkand description!!!"}
}
Bus={Lexica.StopStrSourceMkSet=StrSource.Stop}

Bus={SyntaxStack.LineAdd={StackBottom=nil}}
Bus={MnemoTable.LineAdd={Mnemo="nil" PointPointer=nil}}

CapsBackRec{
	BackRecRealizer.SuccessProgSet={
	BackRecRealizer.PointPop=temp CapsuleManager.IpPop=temp(nil)!
	BackRecRealizer.IcPop=temp MnemoTableManager.IpDel=temp(nil)!
	BackRecRealizer.FindIp={BackRec}
	}
	BackRecRealizer.FailProgSet
MnemoTableManager.CapsOutMk=BackRecRealizer.Set BackRecRealizer.FindIp={BackRec}
}
Bus={AtrCounter.Set=-200 AtrCounter.ContextPop=temp 
MnemoTableManager.AtrCounterPointerSet=temp(nil)!}

Lexica.ReceiverMkSet=SyntaxRoot.FindIp \* Передать лексему для анализа, поиск ИП*\

Bus={Lexica.MnemoReceiverMkSet=MnemoServiceTable.FindIp
	MnemoTable.BusModeSet=2
	MnemoServiceTable.BusModeSet=2
	MnemoTable.FailProgSet={MnemoTable.InObjPopMk=Lexica.LexemaToLexReceiver}
}
Lexica.ReceiverMkPointerPopMk=MnemoTable.BusMkSet

IcLoadMnemoAnalysis.BusModeSet=2	MkLoadAnalysis.BusModeSet=2

SyntaxRoot.BusModeSet=2
\**\SyntaxRoot.Set=
>{Mnemo="int" CTypeRec[Lexica.ReceiverMkSet=WaitAfterType.FindIp}
>{Mnemo="float" + CTypeRec}
>{Mnemo="double" + CTypeRec}
>{Mnemo="short" + CTypeRec}
>{Mnemo="short" + CTypeRec!}

>{Mnemo=nil SyntaxRoot.InObjPopMk=MnemoTableManager.CapsCopy
	MnemoTableManager.CapsOutMk=MnemoTable.LineAdd	 
	 Lexica.ReceiverMkSet=MnemoAnalysis.FindIp .MnemoReceiverMkSet=MnemoAnalysis.FindIp \* Передать лексему для анализа, поиск ИП*\}
>{Mk=nil  CapsuleManager.CapsNew //=temp CapsuleManager.CapsSet=temp(nil)!
		SyntaxRoot.InObjPointPopMk=CapsuleManager.AtrSet
		MnemoServiceTable.InObjDataPop=LastFuName \\ Запомнить мнемонику последнего используемого ФУ
	Lexica.ReceiverMkSet=MkWaitEquality.FindIp }
>{BackRec=nil SyntaxRoot.InObjPopMk=MnemoTableManager.IcCapsToHeadSet
	Lexica.ReceiverMkSet=MnemoAnalysis.FindIp \* Передать лексему для анализа, поиск ИП*\}
>{Separator=">" SyntaxStack.LineCopyAdd={Mnemo} Lexica.ReceiverMkSet=ListLineWait.FindIp}
>{Separator=";" Lexica.ReceiverMkSet=SyntaxRoot.FindIp}
>{Separator="." MnemoServiceList.FindIp=LastFuNameIc Lexica.LastLexemaToReceiver
	Lexica.ReceiverMkSet=MkWaitEquality.FindIp} \\точка без мнемоники ФУ
>{Separator="" Lexica.ReceiverMkSet=SyntaxRoot.FindIp}
>{VarPointer temp2[CapsuleManager.CapsCopyIpSet={ALU.Calc}
   CapsuleManager.IpPop=temp3
   CapsuleManager.PointPointerOut=temp CapsuleManager.CapsCopyIpSet={FUALU.OutSet=0}
   SyntaxRoot.InObjPointPopMk=CapsuleManager.PointSet
   CapsuleManager.IpPop=temp(nil)!
   SyntaxStack.MarkCopyAdd={Mk=temp3(nil)!}
   CapsuleManager.IpPop=temp SyntaxStack.MarkCopyAdd={ARootAtr=temp(nil)!}
   CapsuleManager.IpCopyAdd={FUALU.Set=0}
   Lexica.ReceiverMkSet=AEqualWait.FindIp
}
>{AtrPointer+temp2!}
>{Separator="#" Lexica.ReceiverMkSet=ServiceComp.FindIp}
>{0=nil Lexica.ReceiverMkSet=MnemoDelPlingFund.FindIp}
SyntaxRoot.FailProgSet={Lexica.ReceiverMkSet=WaitMnemoDel.FindIp} \*Ожидение знака '!' после мнемоники*\

\**\MkAgainWait.Set= // Ожидание новой милликоманды после предыдущей
>{Mk}
>{CapsuleManager.IpNewAdd MkAgainWait.InObjPointPopMk=CapsuleManager.AtrSet Lexica.ReceiverMkSet=MkWaitEquality.FindIp}
>{Lexica.Stop LogCon.VarOut="Wrong Mk description !!!"}


\**\ServiceComp.BusModeSet=2
ServiceComp.Set=
>{Const Lexica.ReceiverMkSet=SyntaxRoot.FindIp ServiceComp.InObjPointPopMk=StrSource.Start}
>{0 Lexica.ReceiverMkSet=SyntaxRoot.FindIp ServiceComp.InObjAtrPopMk=SyntaxRoot.FindIp}

MnemoDelPlingFund.BusModeSet=2
\**\MnemoDelPlingFund.Set=
>{Separator="!" Lexica.PrevLexemaPopMk=MnemoDelCheck.FindIp}
>{Separator="\" Lexica.ReceiverMkSet=RootMnemoCapsAdd.FindIp}
>{0 Lexica.Stop LogCon.VarOut="Error!!!"}

\**\RootMnemoWait.BusModeSet=2
RootMnemoWait.Set=
>{Separator="\" Lexica.ReceiverMkSet=RootMnemoCapsAdd.FindIp}
>{0 Lexica.ReceiverMkSet=SyntaxRoot.FindIp RootMnemoWait.InObjPopMk=Lexica.LexemaToReceiver}

RootMnemoCapsAdd.BusModeSet=2
RootMnemoCapsAdd.Set=
>{Separator="{" CapsuleManager.IpNewMk=MnemoTableManager.CapsAdd
	SyntaxStack.LineAdd={Mnemo} Lexica.ReceiverMkSet=IcAnalysis.FindIp}
>{IcPointer RootMnemoCapsAdd.InObjPointPopMk=MnemoTableManager.CapsAdd Lexica.ReceiverMkSet=SyntaxRoot.FindIp}
>{VarPointer MnemoCommentAdd[RootMnemoCapsAdd.InObjDataPop=temp MnemoTableManager.IpCopyAdd={Hint=temp(0)!}
	Lexica.ReceiverMkSet=SyntaxRoot.FindIp}
>{Const + MnemoCommentAdd!}
>{0 Lexica.Stop LogCon.VarOut="Wrong Mnemonics descrabing"}

MnemoDelCheck.Set={Mnemo}
MnemoDelCheck.SuccessProgSet={Lexica.PrevLexemaPopMk=MnemoServiceTable.DelFindIcLines
	Lexica.ReceiverMkSet=SyntaxRoot.FindIp}
MnemoDelCheck.FailProgSet={Lexica.Stop LogCon.VarOut="Deletind not mnemonic"}

MnemoAnalysis.BusModeSet=2 .PrefixProgSet={Lexica.MnemoReceiverMkSet=MnemoServiceTable.FindIp}
\**\MnemoAnalysis.Set=
	>{Separator="#" Lexica.ReceiverMkSet=MnemoWaitConst.FindIp}
	>{Separator="=" Lexica.ReceiverMkSet=MnemoWaitVar.FindIp}
	>{Separator="{" //SyntaxRoot.InObjDataPopMk=CapsuleManager.NameSet
		CapsuleManager.CapsNew=temp MnemoTableManager.IpCopyAdd={IcPointer=temp(nil)!}
		SyntaxStack.LineAdd={Mnemo=nil}
		Lexica.ReceiverMkSet=IcAnalysis.FindIp + CapsBackRec}
	>{Separator="*" Lexica.ReceiverMkSet=AtrWait.FindIp}
//	>{Separator="[" Lexica.ReceiverMkSet=MassiveAnalysis.FindIp}

NewListLine{ListSintezator.Set SyntaxStack.LineCopyAdd={Mnemo}		
		CapsuleManager.CapsNew MnemoTableManager.IpCopyAdd={IcPointer}
		MnemoTableManager.PointPointerOut=temp SyntaxStack.LineCopyAdd={ListMark=temp(nil)!}
		Lexica.ReceiverMkSet=ListLineWait.FindIp}
	>{Separator=">" ListSintezator.MarkAtrSet=Obj + NewListLine}
	>{Separator=":" ListSintezator.MarkAtrSet=Fork + NewListLine!}
	>{Separator="\" MnemoTableManager.IpCopyAdd={Atr=0} MnemoTableManager.AtrCounterDecDataSet
		Lexica.ReceiverMkSet=RootMnemoCapsAdd.FindIp}
	>{0 MnemoTableManager.IpCopyAdd={Atr=0} MnemoTableManager.AtrCounterDecDataSet
		Lexica.ReceiverMkSet=SyntaxRoot.FindIp MnemoAnalysis.InObjPopMk=Lexica.LexemaToReceiver}
Bus={MnemoAnalysis.FailProgSet={MnemoTableManager.IpCopyAdd={Atr=0} 
	MnemoTableManager.AtrCounterDecDataSet Lexica.ReceiverMkSet=SyntaxRoot.FindIp Lexica.LastLexemaToReceiver} \*остальное*\
}
Bus={AtrWait.Set={ConstInt Atr}
	AtrWait.SuccessProgSet={AtrWait.InObjDataPop=temp 
	MnemoTableManager.IpCopyAdd={Atr=temp(0)!} 
//	Lexica.ReceiverMkSet=SyntaxRoot.FindIp
	Lexica.ReceiverMkSet=RootMnemoWait.FindIp

}
	AtrWait.FailProgSet={Lexica.Stop LogCon.VarOut="Wrong attribute description!!!1"}
}
Bus={WaitMnemoDel.Set={Separator="!"}
	WaitMnemoDel.SuccessProgSet={Lexica.PrevLexemaPopMk=MnemoDel.FindIp}
	WaitMnemoDel.FailProgSet={Lexica.Stop LogCon.VarOut="Wrong mnemo description!!!" }
}
Bus={MnemoDel.Set={Mnemo=nil} 
	MnemoDel.SuccessProgSet={
		 MnemoDel.InObjPopMk=MnemoTable.DelFindIcLines 
		Lexica.ReceiverMkSet=SyntaxRoot.FindIp}
	MnemoDel.FailProgSet={Lexica.Stop LogCon.VarOut="Mnemo not founded !!!"}
}
\**\MnemoWaitConst.Set={Const=nil  ConstInt=nil Mk}
MnemoWaitConst.SuccessProgSet=
	{MnemoWaitConst.InObjPopMk=MnemoTableManager.IpCopyAdd Lexica.ReceiverMkSet=RootMnemoWait.FindIp //Lexica.ReceiverMkSet=SyntaxRoot.FindIp
	}

MnemoWaitConst.FailProgSet={LogCon.VarOut="Constant is not founded" Lexica.Stop}

\**\MnemoWaitVar.BusModeSet=1
MnemoWaitVar.Set=
>{Const ConstInt Mk
	Obj=
	{
	MnemoWaitVar.InObjDataPopMk=VarManager.VarNewSet
	VarManager.Pop=temp MnemoTableManager.IpCopyAdd={VarPointer=temp(nil)!} 
	Lexica.ReceiverMkSet=RootMnemoWait.FindIp//Lexica.ReceiverMkSet=SyntaxRoot.FindIp
	}
}
>{PointPointer IcPointer ListPointer
	Obj=
	{
	MnemoWaitVar.InObjPointPopMk=VarManager.PointNewSet
	VarManager.Pop=temp MnemoTableManager.IpCopyAdd={PointPointer=temp(nil)!}
	Lexica.ReceiverMkSet=RootMnemoWait.FindIp //Lexica.ReceiverMkSet=SyntaxRoot.FindIp
	}
}
>{Obj={LogCon.VarOut="Variable or constant is not founded" Lexica.Stop} 0=nil}

MkToStackProg{
		CapsuleManager.IpPop=tempMk
		CapsuleManager.PointPointerOut=temp2 
		CapsuleManager.CapsCopy={Mk=tempMk(nil)!} 					
		CapsuleManager.CapsOutMk=SyntaxStack.LineAdd						
		CapsuleManager.CapsNew=temp2(nil)!
}

MkWaitEquality.BusModeSet=2 \*Ожидание "=" милликоманды*\
\**\MkWaitEquality.Set=
	>{Separator="=" Lexica.ReceiverMkSet=MkLoadAnalysis.FindIp}
	>{Separator="#" Lexica.ReceiverMkSet=MkLoadAnalysis.FindIp}
	>{Separator="!" Lexica.PrevLexemaPopMk=MnemoDel.FindIp}
	>{Separator=";" CapsuleManager.PointSet CapsuleManager.IpPopMk=MainBus.ProgExec CapsuleManager.IpMarkHold=false Lexica.ReceiverMkSet=SyntaxRoot.FindIp}
	>{Separator="" CapsuleManager.PointSet CapsuleManager.IpPopMk=MainBus.ProgExec CapsuleManager.IpMarkHold=false Lexica.ReceiverMkSet=SyntaxRoot.FindIp}
	>{Separator="," Lexica.ReceiverMkSet=MkAgainWait.FindIp CapsuleManager.IpMarkHold=true}
     >{0=nil CapsuleManager.PointSet CapsuleManager.IpPopMk=MainBus.ProgExec CapsuleManager.IpMarkHold=false
		Lexica.ReceiverMkSet=SyntaxRoot.FindIp MkWaitEquality.InObjPopMk=SyntaxRoot.FindIp}

	\*Разбор нагрузки милликоманды*\
\**\MkLoadAnalysis.Set=
	>{Mnemo=nil MkLoadAnalysis.InObjPopMk=MnemoTableManager.CapsCopy
		MnemoTableManager.CapsOutMk=MnemoTable.LineAdd
		Lexica.ReceiverMkSet=MkLoadMnemo.FindIp MkBack.IndexReset
	}
NewLineAdd{
		CapsuleManager.IpPop=tempMk
		CapsuleManager.PointPointerOut=temp2 
		SyntaxStack.LineCopyAdd={Mk=tempMk(nil)!}			
		ListSintezator.Set=nil 
		SyntaxStack.LineCopyAdd={ListMark=temp2(nil)!}
		Lexica.ReceiverMkSet=ListLineWait.FindIp
}
	>{Separator=">" ListSintezator.MarkAtrSet=Obj MkBack.IndexReset +  NewLineAdd!}
	>{Separator="{" Lexica.ReceiverMkSet=IcAnalysis.FindIp MkBack.IndexReset + MkToStackProg}
//	>{Separator="," Lexica.ReceiverMkSet=MkAgainWait.FindIp CapsuleManager.IpMarkHold=true}

	>{BackRec=nil Lexica.Stop LogCon.VarOut="Wrong load description!!!"} \\ Доделать !!!!

	>{IcPointer=nil
		temp[MkLoadAnalysis.InObjPointPopMk=CapsuleManager.PointSet
		Lexica.ReceiverMkSet=MkEquality2Wait.FindIp} \*ссылка*\
	>{PointPointer=nil + temp} \*ссылка*\
	>{VarPointer=nil + temp} \*ссылка*\
	>{AtrPointer=nil + temp!} \*ссылка*\

\**\MkLoadAnalysisConstProg{
		MkLoadAnalysis.InObjDataPopMk=CapsuleManager.DataSet
		Lexica.ReceiverMkSet=MkEquality2Wait.FindIp}
	>{Const=nil + MkLoadAnalysisConstProg} 
	>{ConstInt=nil + MkLoadAnalysisConstProg}
	>{Atr=nil + MkLoadAnalysisConstProg}
	>{Mk=nil + MkLoadAnalysisConstProg} \\ !!!!!
	>{0=nil Lexica.Stop LogCon.VarOut="Wrong Mk description!!!"}
MkLoadAnalysisConstProg!

\**\MkEquality2Wait.BusModeSet=2
MkEquality2Wait.Set=
>{Separator="=" CapsuleManager.IpPopMk=MainBus.ProgExec CapsuleManager.IpMarkHold=false
	CapsuleManager.IpPopMk=CapsuleManager.IcCopy
	Lexica.ReceiverMkSet=MkLoadAnalysis.FindIp}
>{Separator="!" Lexica.PrevLexemaPopMk=MnemoTable.DelFindIcLines Lexica.ReceiverMkSet=MkEquality3Wait.FindIp}
>{0 Lexica.ReceiverMkSet=SyntaxRoot.FindIp
	CapsuleManager.IpPopMk=MainBus.ProgExec CapsuleManager.IpMarkHold=false
	MkEquality2Wait.InObjPopMk=SyntaxRoot.FindIp}

\**\MkEquality3Wait.Set=
>{Separator="="}
>{CapsuleManager.IpPopMk=MainBus.ProgExec CapsuleManager.IpMarkHold=false
	CapsuleManager.IpPopMk=CapsuleManager.IcCopy
	Lexica.ReceiverMkSet=MkLoadAnalysis.FindIp}
>{Lexica.ReceiverMkSet=SyntaxRoot.FindIp
	CapsuleManager.IpPopMk=MainBus.ProgExec CapsuleManager.IpMarkHold=false
	MkEquality2Wait.InObjPopMk=SyntaxRoot.FindIp}

MkLoadMnemo.BusModeSet=2
\**\MkLoadMnemo.Set=
	>{Separator="{"
		CapsuleManager.IpPop=tempMk
		CapsuleManager.PointPointerOut=temp2 
		CapsuleManager.CapsCopy={Mk=tempMk(nil)!} 					
		CapsuleManager.CapsOutMk=SyntaxStack.LineAdd
//		MkLoadAnalysis.InObjDataPopMk=CapsuleManager.NameSet						
		CapsuleManager.CapsNew=temp2(nil)!

		CapsuleManager.IpPop=temp MnemoTableManager.IpCopyAdd={IcPointer=temp(nil)!}
		Lexica.ReceiverMkSet=IcAnalysis.FindIp
		}

	NewListLine{CapsuleManager.IpPop=tempMk
		CapsuleManager.PointPointerOut=temp2 
		SyntaxStack.LineCopyAdd={Mk=tempMk(nil)!}
		ListSintezator.Set=nil
		SyntaxStack.LineCopyAdd={ListMark=temp2(nil)!}
		MnemoTableManager.CapsOut=temp SyntaxStack.LineCopyAdd={ListName=temp(nil)!}
		Lexica.ReceiverMkSet=ListLineWait.FindIp}

	>{Separator=">" ListSintezator.MarkAtrSet=Obj + NewListLine}
	>{Separator=":" ListSintezator.MarkAtrSet=Fork + NewListLine!}
	>{0=nil Lexica.Stop LogCon.VarOut="Wrong Mkand load description!!!"}

ListLineWait.BusModeSet=2
ListLineWait.PrefixProgSet={SyntaxStack.LineCopyAdd={ListLineMark}}
\**\ListLineWait.Set=
	>{Separator="{"
	CapsuleManager.CapsNewMk=ListSintezator.LineAdd
	Lexica.ReceiverMkSet=IcAnalysis.FindIp
	}
	>{Separator=">" ListSintezator.LevelNext ListSintezator.MarkAtrSet=Obj Lexica.ReceiverMkSet=ListLineWait.FindIp}
	>{Separator=":" ListSintezator.LevelNext ListSintezator.MarkAtrSet=Fork}
	>{Mnemo ListLineWait.InObjPopMk=MnemoTableManager.CapsCopy MnemoTableManager.CapsOutMk=MnemoTable.LineAdd Lexica.ReceiverMkSet=ListLineMnemo.FindIp}
	>{IcPointer temp[ListLineWait.InObjPointPopMk=ListSintezator.LineAdd Lexica.ReceiverMkSet=AfterList.FindIp}
	>{PointPointer + temp!}
ListLineMnemo.BusModeSet=2
\**\ListLineMnemo.Set=

	>{Separator="{"
//		ListLineWait.InObjDataPopMk=CapsuleManager.NameSet
		CapsuleManager.CapsNew=temp MnemoTableManager.IpCopyAdd={IcPointer=temp(nil)!} 
		CapsuleManager.CapsOutMk=ListSintezator.LineAdd Lexica.ReceiverMkSet=IcAnalysis.FindIp}
	>{Separator=">"
\\		\\\\\\\\\\\\\
	}
	>{0 Lexica.Stop LogCon.VarOut="Wrong list description!!!"}
	>{Separator=":"}

\\Формируем Мк, заносим в стек ссылку на Мк. Начинаем разбор капсулы - сведения о капсуле в таблицу мнемоник

IcLoadMnemoAnalysis.BusModeSet=2
\**\IcLoadMnemoAnalysis.Set=
	>{Separator="{"		
		CapsuleManager.IpPop=tempMk2
		CapsuleManager.PointPointerOut=temp3
		SyntaxStack.LineCopyAdd={IcPointer=tempMk2(nil)!} 
//		IcAfterEquality.InObjDataPopMk=CapsuleManager.NameSet
CapsuleManager.CapsNew=temp3(nil)!

	MnemoTableManager.CapsOutMk=BackRecRealizer.Set
		BackRecRealizer.SuccessProgSet={BackRecRealizer.PointPopMk=CapsuleManager.CapsOut
		BackRecRealizer.IcPopMk=MnemoTableManager.IpDel
		BackRecRealizer.FindIp={BackRec}
	}
	MnemoTableManager.CapsOutMk=BackRecRealizer.Set BackRecRealizer.FindIp={BackRec}
		CapsuleManager.CapsOut=temp MnemoTableManager.IpCopyAdd={IcPointer=temp(nil)!}
		Lexica.ReceiverMkSet=IcAnalysis.FindIp	
	}
	>{Separator="(" Lexica.ReceiverMkSet=LoadAfterBracket.FindIp}
	>{Separator=";" CapsuleManager.PointPointerOut=temp MnemoTableManager.IpCopyAdd={BackRec=temp(nil)!}
		CapsuleManager.PointSet CapsuleManager.IpNewAdd Lexica.ReceiverMkSet=IcAnalysis.FindIp}

	>{Separator=">"
		ListSintezator.MarkAtrSet=Obj
ListLineNew[CapsuleManager.IpPop=tempMk
		CapsuleManager.PointPointerOut=temp2 
		SyntaxStack.LineCopyAdd={IcPointer=tempMk(nil)!}						
		ListSintezator.Set=nil 
		SyntaxStack.LineCopyAdd={ListMark=temp2(nil)!}
		MnemoTableManager.CapsOut=temp SyntaxStack.LineCopyAdd={ListName=temp(nil)!}
		Lexica.ReceiverMkSet=ListLineWait.FindIp
	}
	>{Separator=">" ListSintezator.MarkAtrSet=Fork + ListLineNew!}
	>{0=nil
	CapsuleManager.PointPointerOut=temp MnemoTableManager.IpCopyAdd={BackRec=temp(nil)!}
     CapsuleManager.PointSet IcLoadMnemoAnalysis.InObjPopMk=AfterIc.FindIp}

AtrIcSetProg{IcAnalysis.InObjDataPopMk=CapsuleManager.AtrSet Lexica.ReceiverMkSet=IcWaitEquality.FindIp}

IcAnalysis.BusModeSet=2
\**\IcAnalysis.Set=
	>{Separator="." MnemoServiceTable.FindIp=LastFuNameIc
		Lexica.LastLexemaToReceiver Lexica.ReceiverMkSet=IcWaitEquality.FindIp}
	>{Separator="}" CapsuleManager.PointSet SyntaxStack.LineLastPopMk=AfterCapsule.FindIp}
	>{Mnemo=nil IcAnalysis.InObjPopMk=MnemoTableManager.CapsCopy
		MnemoTableManager.CapsOutMk=MnemoTable.LineAdd
		Lexica.ReceiverMkSet=AtrAnalysis.FindIp}
	>{BackRec=nil IcAnalysis.InObjPopMk=MnemoTableManager.IcCapsToHeadSet
		Lexica.ReceiverMkSet=AtrAnalysis.FindIp }
	>{IcPointer=nil CapsuleManager.IpPop=temp
		IcAnalysis.InObjPointPopMk=CapsuleManager.CapsCopyAdd
		CapsuleManager.IpDel=temp(nil)!
		Lexica.ReceiverMkSet= IcAnalysis.FindIp
		}
	>{Atr=nil + AtrIcSetProg}
	>{ConstInt=nil + AtrIcSetProg}
	>{Mk=nil MnemoServiceTable.InObjDataPop=LastFuName + AtrIcSetProg!}

	>{VarPointer CapsuleManager.AtrSet=ALU.Calc
       CapsuleManager.IpPop=temp3
       CapsuleManager.PointPointerOut=temp CapsuleManager.CapsCopyIpSet={FUALU.OutSet=0}
       FUList.InObjPointPopMk=CapsuleManager.PointSet
       CapsuleManager.IpPop=temp(nil)!
       SyntaxStack.MarkCopyAdd={IcPointer=temp3(nil)!}
       CapsuleManager.IpPop=temp SyntaxStack.MarkCopyAdd={ARootAtr=temp(nil)!}
       CapsuleManager.IpCopyAdd={FUALU.Set=0}
       Lexica.ReceiverMkSet=AEqualWait.FindIp}
     >{Separator="#" Lexica.ReceiverMkSet=TreeCopyWait.FindIp}

	>{0=nil Lexica.Stop LogCon.VarOut="Wrong Ic description!!!1"}

TreeCopyWait.Set=
>{IcPointer }
>{CapsuleManager.IpPop=temp
		IcAnalysis.InObjPointPopMk=CapsuleManager.CapsCopyAdd
		CapsuleManager.IpDel=temp(nil)!
		Lexica.ReceiverMkSet= IcAnalysis.FindIp}
>{LogCon.VarOut="IcPoiner is necessary" Lexica.Stop}

AfterIc.BusModeSet=2
AfterIc.PrefixProgSet={CapsuleManager.IpMarkHold=false}
\**\AfterIc.Set=
	>{Separator="}"  SyntaxStack.LineLastPopMk=AfterCapsule.FindIp} \*Нет уничтожения капсулы, выданной из стека*\
	>{Separator=";" CapsuleManager.IpNewAdd Lexica.ReceiverMkSet=IcAnalysis.FindIp}
	>{Separator="+" IcPlus.LineSet=nil Lexica.ReceiverMkSet=IcPlus.FindIcInLine}
	>{Separator="=" CapsuleManager.IpPopMk=CapsuleManager.IpCopyAdd
		Lexica.ReceiverMkSet=IcAfterEquality.FindIp}
	>{0=nil CapsuleManager.IpNewAdd  Lexica.ReceiverMkSet=IcAnalysis.FindIp AfterIc.InObjPopMk=IcAnalysis.FindIp}

IcPlus.BusModeSet=1
IcPlus.Set=
	>{IcPointer  Obj={IcPlus.InObjPointPopMk=CapsuleManager.CapsAdd IcPlus.LineNext}
		Exeption={ Lexica.Stop LogCon.VarOut="Wrong capsule description!!!"}
}
	>{Separator="!" Obj={MnemoList.LineDelMk IcPlus.LineNext} Exeption={IcPlus.LineNext IcPlus.InObjPopMk=IcPlus.FindIcInLine}}
	>{Separator="}" Obj={IcPlus.InObjPopMk=AfterIc.FindIp} Exeption={Lexica.Stop LogCon.VarOut="Wrong capsule description !!!"}}

IcWaitEquality.BusModeSet=2
\**\IcWaitEquality.Set=	
	>{Separator="=" Lexica.ReceiverMkSet=IcAfterEquality.FindIp}
	>{Separator="#" Lexica.ReceiverMkSet=IcAfterEquality.FindIp}
	>{Separator=";" CapsuleManager.PointSet=nil CapsuleManager.IpNewAdd Lexica.ReceiverMkSet=IcAnalysis.FindIp}
	>{Separator="}" CapsuleManager.PointSet=nil IcWaitEquality.InObjPopMk=AfterIc.FindIp}
	>{Separator="+" CapsuleManager.PointSet=nil Lexica.ReceiverMkSet=IcPlus.FindIp}
	>{Separator="," CapsuleManager.IpMarkHold=true Lexica.ReceiverMkSet=IcMkAgainWait.FindIp}
	>{0=nil CapsuleManager.PointSet=nil CapsuleManager.IpNewAdd=nil
		Lexica.ReceiverMkSet=IcAnalysis.FindIp IcWaitEquality.InObjPopMk=IcAnalysis.FindIp}

\*Доделать*\		
\**\BackRecAnalysis.Set=
	>{Separator="="}
	>{Separator="{" \*На выделение памяти под капсулу*\}

//IcWaitEquality.BusModeSet=2
IcWaitEquality.ListSetModeSet=1


IcMkAgainWait.BusModeSet=2
\**\IcMkAgainWait.Set= // Ожидание новой милликоманды после предыдущей
>{Mk MnemoServiceTable.InObjDataPop=LastFuName! 
   t1[CapsuleManager.IpNewAdd IcMkAgainWait.InObjPointPopMk=CapsuleManager.AtrSet Lexica.ReceiverMkSet=IcWaitEquality.FindIp}
>{Atr + t1!}
>{0 Lexica.Stop LogCon.VarOut="Wrong Mk description !!!"}


AtrAnalysis.BusModeSet=2
\**\AtrAnalysis.Set=
	>{Separator="["
		Lexica.ReceiverMkSet=IcMnemoAnalysis.FindIp

\\	+ CapsBackRec
	BackRecRealizer.SuccessProgSet={
	BackRecRealizer.PointPop=temp CapsuleManager.IpPop=temp(nil)!
	BackRecRealizer.IcPop=temp MnemoTableManager.IpDel=temp(nil)!
	BackRecRealizer.FindIp={BackRec}
	}
	BackRecRealizer.FailProgSet
	MnemoTableManager.CapsOutMk=BackRecRealizer.Set BackRecRealizer.FindIp={BackRec}

	CapsuleManager.IpPop=temp MnemoTableManager.IpCopyAdd={IcPointer=temp(nil)!}
} 
	>{Separator="("  Lexica.ReceiverMkSet=AtrAnalysis3.FindIp
			BackRecRealizer.SuccessProgSet={
			BackRecRealizer.PointPop=temp CapsuleManager.AtrPointerPop=temp(nil)!
			BackRecRealizer.IcPop=temp MnemoTableManager.IpDel=temp(nil)!
			BackRecRealizer.FindIp={BackRec}
			}
	MnemoTableManager.CapsOutMk=BackRecRealizer.Set BackRecRealizer.FindIp={BackRec}
	CapsuleManager.AtrPointerPop=temp MnemoTableManager.IpCopyAdd={AtrPointer=temp(nil)!}
	}
	>{0 Lexica.Stop LogCon.VarOut="Wrong attribute description !!!2" }

Bus={IcMnemoAnalysis.BusModeSet=2}
IcAtrSetIcMnemoAnalysisProg{IcMnemoAnalysis.InObjDataPopMk=CapsuleManager.AtrSet Lexica.ReceiverMkSet=IcWaitEquality.FindIp}
\**\IcMnemoAnalysis.Set=
>{Atr=nil  + IcAtrSetIcMnemoAnalysisProg}		
>{Mk=nil  +IcAtrSetIcMnemoAnalysisProg }		
>{ConstInt=nil  +IcAtrSetIcMnemoAnalysisProg }		
>{Mnemo=nil IcMnemoAnalysis.InObjPopMk=MnemoTableManager.CapsCopy 
	MnemoTableManager.CapsOutMk=MnemoTable.LineAdd Lexica.ReceiverMkSet=AtrAnalysis2.FindIp}
>{0 Lexica.Stop LogCon.VarOut="Wrong attribute description !!!"}

\**\AtrAnalysis2.Set={Separator="("} 
AtrAnalysis2.SuccessProgSet={Lexica.ReceiverMkSet=AtrAnalysis3.FindIp}
AtrAnalysis2.FailProgSet={Lexica.Stop LogCon.VarOut="Bracket '(' Not founded !!!"}

\**\AtrAnalysis3.Set={ConstInt=nil Atr=nil Mk=nil} AtrAnalysis3.SuccessProgSet=
	{AtrAnalysis3.SourceDataPop=temp CapsuleManager.AtrSet=temp(0)! 
   Lexica.ReceiverMkSet=AfterAtrBracket.FindIp}
AtrAnalysis3.FailProgSet={Lexica.Stop LogCon.VarOut="Wrong attribute description !!!3" }

AfterAtrBracket.Set={Separator=")"}
AfterAtrBracket.SuccessProgSet={Lexica.ReceiverMkSet=IcWaitEquality.FindIp}
AfterAtrBracket.FailProgSet={Lexica.Stop LogCon.VarOut="Not founded ')' !!!" }

IcAfterEqualityPointProg{IcAfterEquality.InObjPointPop=temp CapsuleManager.PointSet=temp(nil)! Lexica.ReceiverMkSet=IcAfterLoadPointer.FindIp}

Bus={IcAfterEquality.BusModeSet=2}
\**\IcAfterEquality.Set=
	>{Const=nil IcAfterEquality.InObjDataPopMk=CapsuleManager.DataSet Lexica.ReceiverMkSet=AfterIc.FindIp}
	>{ConstInt=nil IcAfterEqualityMark[IcAfterEquality.InObjDataPopMk=CapsuleManager.DataSet Lexica.ReceiverMkSet=AfterIc.FindIp}
	>{ConstInt=nil	+IcAfterEqualityMark}
	>{Mk=nil	+IcAfterEqualityMark!}
	>{Atr=nil IcAfterEquality.InObjDataPopMk=CapsuleManager.DataSet Lexica.ReceiverMkSet=AfterIc.FindIp}
	>{VarPointer=nil + IcAfterEqualityPointProg}
	>{IcPointer=nil + IcAfterEqualityPointProg}
	>{ListPointer=nil + IcAfterEqualityPointProg}
	>{PointPointer=nil + IcAfterEqualityPointProg}
	>{AtrPointer=nil + IcAfterEqualityPointProg}
	>{Separator="{"
		Lexica.ReceiverMkSet=IcAnalysis.FindIp
		CapsuleManager.IpPop=tempMk2
		CapsuleManager.PointPointerOut=temp2
		CapsuleManager.CapsCopy={IcPointer=tempMk2(nil)!} 
		CapsuleManager.CapsOutMk=SyntaxStack.LineAdd						
		CapsuleManager.CapsNew=temp2(nil)!
	}
	>{Separator=">" \*Список в нагрузке*\
		ListSintezator.Pop=temp SyntaxStack.LineCopyAdd={ListRestore=temp(nil)!}
		CapsuleManager.IpPop=tempMk
		CapsuleManager.PointPointerOut=temp2 
		SyntaxStack.LineCopyAdd={IcPointer=tempMk(nil)!}					
		ListSintezator.Set=nil 
		SyntaxStack.LineCopyAdd={ListMark=temp2(nil)!}
		Lexica.ReceiverMkSet=ListLineWait.FindIp
	}
	>{Mnemo=nil IcAfterEquality.InObjPopMk=MnemoTableManager.CapsCopy MnemoTableManager.CapsOutMk=MnemoTable.LineAdd
		Lexica.ReceiverMkSet=IcLoadMnemoAnalysis.FindIp}
	>{BackRec=nil
		IcAfterEquality.InObjPopMk=MnemoTableManager.IcCapsToHeadSet	
		Lexica.ReceiverMkSet=IcLoadMnemoAnalysis.FindIp}
	>{0=nil Lexica.Stop LogCon.VarOut="Wrong Ic description !!!2"}

Bus={IcAfterLoadPointer.Set={Separator="!"}
IcAfterLoadPointer.SuccessProgSet={MnemoTable.LineDelMk Lexica.ReceiverMkSet=AfterIc.FindIp}
IcAfterLoadPointer.FailProgSet={IcAfterLoadPointer.InObjPopMk=AfterIc.FindIp}}

Bus={LoadAfterBracket.BusModeSet=1}
\**\LoadAfterBracket.Set=
>{Const ConstInt Mk 
	Obj={MnemoTableManager.CapsOutMk=BackRecRealizer.Set
		BackRecRealizer.SuccessProgSet={BackRecRealizer.PointPop=temp CapsuleManager.DataPointerPop=temp(nil)!
		BackRecRealizer.IcPop=temp MnemoTableManager.IpDel=temp(nil)!
		BackRecRealizer.FindIp={BackRec}
	}
	MnemoTableManager.CapsOutMk=BackRecRealizer.Set BackRecRealizer.FindIp={BackRec}
	
	LoadAfterBracket.InObjDataPopMk=CapsuleManager.DataSet
	CapsuleManager.DataPointerPop=temp MnemoTableManager.IpCopyAdd={VarPointer=temp(nil)!}
	LoadBracket.LineSet=nil Lexica.ReceiverMkSet=LoadBracket.FindIcInLine
	}
}
>{PointPointer IcPointer VarPointer
	Obj={MnemoTableManager.CapsOutMk=BackRecRealizer.Set
		BackRecRealizer.SuccessProgSet={BackRecRealizer.PointPop=temp CapsuleManager.PointPointerOut=temp(nil)!
			BackRecRealizer.IcPop=temp MnemoTableManager.IpDel=temp(nil)!
			BackRecRealizer.FindIp={BackRec}
			}
	\*MnemoTableManager.CapsOutMk=BackRecLineMark*\ MnemoTableManager.CapsOutMk=BackRecRealizer.Set BackRecRealizer.FindIp={BackRec}

	LoadAfterBracket.InObjPointPopMk=CapsuleManager.PointSet
	CapsuleManager.PointPointerOut=temp MnemoTableManager.IpCopyAdd={PointPointer=temp(nil)!}
	LoadBracket.LineSet=nil Lexica.ReceiverMkSet=LoadBracket.FindIcInLine
	}
}
>{0 Obj={Lexica.Stop LogCon.VarOut="Ic load wrong description !!!" }}

LoadBracket.BusModeSet=1
\**\LoadBracket.Set=
>{Separator=")"  Obj={LoadBracket.LineNext} Exeption={Lexica.Stop LogCon.VarOut="Wrong Ic load description !!!" }}
>{Separator="!"  Obj={MnemoTableManager.CapsOutMk=MnemoTable.LineSearch MnemoTable.LineExclude  Lexica.ReceiverMkSet=AfterIc.FindIp} Exeption={LoadBracket.InObjPopMk=AfterIc.FindIp}} \*Впоследствии сделать более рациональным*\

AfterCapsule.BusModeSet=2
\**\AfterCapsule.Set=
>{Mk=nil   AfterCapsule.InObjPointPopMk=MainBus.ProgExec CapsuleManager.IpMarkHold=false Lexica.ReceiverMkSet=SyntaxRoot.FindIp}
>{IcPointer=nil AfterCapsule.InObjPointPopMk=CapsuleManager.CapsIcSet
	Lexica.ReceiverMkSet=AfterIc.FindIp}
>{ListLineMark
	Lexica.ReceiverMkSet=AfterList.FindIp}
>{ListMark Lexica.ReceiverMkSet=AfterList.FindIp
	AfterCapsule.InObjPointPopMk=ListSintezator.Pop}
>{ListName
	AfterCapsule.InObjPointPopMk=MnemoTableManager.CapsSet

	MnemoTableManager.CapsOutMk=BackRecRealizer.Set
		BackRecRealizer.SuccessProgSet={BackRecRealizer.PointPopMk=ListSintezator.Pop
		BackRecRealizer.IcPopMk=MnemoTableManager.IpDel
		BackRecRealizer.FindIp={BackRec}
	}
	MnemoTableManager.CapsOutMk=BackRecRealizer.Set BackRecRealizer.FindIp={BackRec}
	ListSintezator.Pop=temp MnemoTableManager.IpCopyAdd={IcPointer=temp(nil)!}

	SyntaxStack.LineLastPopMk=AfterCapsule.FindIp} \\ Капсула не уничтожается !!!! (доделать)
>{ListRestore FUList.InObjPointPopMk=ListSintezator.Set
	SyntaxStack.LineLastPopMk=AfterCapsule.FindIp}
>{StackBottom Lexica.Stop LogCon.VarOut="Syntax stack over !!!"  }
>{Mnemo Lexica.ReceiverMkSet=RootMnemoWait.FindIp \*SyntaxRoot.FindIp*\}
>{0 Lexica.Stop LogCon.VarOut="Syntax error !!!"  }

AfterList.BusModeSet=2
\**\AfterList.Set=
>{Separator=">" SyntaxStack.LineCopyAdd={ListMark} ListSintezator.MarkAtrSet=Obj Lexica.ReceiverMkSet=ListLineWait.FindIp} 
>{Separator=":" SyntaxStack.LineCopyAdd={ListMark} ListSintezator.MarkAtrSet=Fork Lexica.ReceiverMkSet=ListLineWait.FindIp} 
>{Separator="<"
	ListSintezator.LevelPrevAdd
	Lexica.ReceiverMkSet=AfterList.FindIp
}
>{0 SyntaxStack.LineLastPopMk=AfterCapsule.FindIp AfterList.InObjPopMk=Lexica.LexemaToLexReceiver}

MnemoServiceTable.NextFUMkRangeSet=MnemoTable.Reset \\установить миллидиапазон для дублирования милликоманды

\\ Подготовка панели инструментов

PointersList.TextMkSet=ProgPanel.TextInsert  AtrList.TextMkSet=ProgPanel.TextInsert  ConstList.TextMkSet=ProgPanel.TextInsert VarList.TextMkSet=ProgPanel.TextInsert
	FUPanel.SearchMkSet=ProgPanel.SearchOpen
	AtrList.SearchMkSet=ProgPanel.SearchOpen
	ConstList.SearchMkSet=ProgPanel.SearchOpen
	VarList.SearchMkSet=ProgPanel.SearchOpen
	PointersList.SearchMkSet=ProgPanel.SearchOpen

	FUPanel.IconAtrSet=FUType

	StrSource.MkSet=Lexica.Lexing
	StrSource.MkLogStopSet=LogCon.VarOut
	FUPanel.LeafTextMkSet=ProgPanel.TextInsert FUPanel.LeafTextSeparatorSet="." FUPanel.LeafTextLavelSet=2

	ProgPanel.TreeSearchMkSet=FUPanel.SearchPattern

	StrSource.StopProgSet={Lexica.CharMarkPopMk=LogCon.VarOut}

RootMnemoTableMaker.AtrSet=Mnemo
RootMnemoTableMaker.SortIndexSet=0

PopupMnemoFind.Set={Mnemo}
PopupMnemoFind.SuccessProgSet={PopupMnemoFind.LinePopMk=PopupMkListFind.Set PopupMkListFind.FindIp={MkList}}
PopupMkListFind.Set={MkList}
PopupMkListFind.SuccessProgSet={PopupMkListFind.PointPopMk=ProgPanel.PopupMatrixSet}

PopupMenuList.BusModeSet=2
PopupMenuList.Set=
>{Mnemo="" RootMnemoTableMaker.MatrOutMk=ProgPanel.PopupMatrixSet}
>{Mnemo PopupMenuList.InObjPopMk=PopupMnemoFind.FindIp}
>{0=nil ProgPanel.PopupMatrixSet=nil}

ProgPanel.PopupStringMkSet=PopupMenuList.FindIp

AtrMnemoTableMaker.AtrSet=Atr AtrMnemoTableMaker.AtrSet=Mnemo
AtrMnemoTableMaker.SortTypeSet=1 AtrMnemoTableMaker.SortIndexSet=0

ToolsPanelMaker.ColomnsSet=1
ToolsPanelMaker.MatrixModeSet=0
RootMnemoTableMaker.DepthSet=2
ProgPanel.PopupStringMkSet=PopupMenuList.FindIp

\\Настройка всплывающих подсказок

ProgPanel.HintMkSet=HintLex.Lexing
HintLex.ReceiverMkSet=HintRootServiceFind.FindIp
HintLex.FinLineLexSet=""
HintLex.FinLineAtrSet=Separator
HintRootServiceFind.SuccessProgSet={HintLex.ReceiverMkSet=HintDotFind.FindIp}

HintRootFind.SuccessProgSet={HintLex.Stop HintRootFind.FindIcInLine={Hint}}
HintRootFind.SuccessLineProgSet={HintRootFind.PointInLinePopMk=ProgPanel.HintSet}

HintRootServiceMkFind.SuccessProgSet={HintRootServiceMkFind.PointPopMk=HintMkFind.MatrSet}
HintRootServiceFind.FailLineProgSet={HintLex.Stop HintLex.ReceiverMkSet=HintRootServiceFind.FindIp}
HintRootServiceFind.SuccessLineProgSet={
	HintRootServiceFind.PointInLinePopMk=ProgPanel.HintSet
	HintLex.Stop HintLex.ReceiverMkSet=HintRootServiceFind.FindIp}

HintDotFind.BusModeSet=2
HintDotFind.Set=
>{Separator=""
	HintLex.Stop HintLex.ReceiverMkSet=HintRootServiceFind.FindIp
	HintRootServiceFind.FindIcInLine={Hint}
}
>{Separator="."
	HintLex.ReceiverMkSet=HintMkFind.SearchInCol
	HintRootServiceFind.LinePopMk=HintRootServiceMkFind.Set
	HintRootServiceMkFind.FindIp={MkList}
}
>{0 HintLex.Stop HintLex.ReceiverMkSet=HintRootServiceFind.FindIp}

HintMkFind.ColSet=0
HintMkFind.ColOffsetSet=2
HintMkFind.SearchSuccessProgSet={HintMkFind.CellPopMk=ProgPanel.HintSet
							HintLex.ReceiverMkSet=HintRootServiceFind.FindIp}

HintMkFind.SearchFailProgSet={HintLex.ReceiverMkSet=HintRootServiceFind.FindIp}

ToolsPanelMaker.DepthSet=2

FinLexingProg
	{Lexica.Lexing=""
	ToolsPanelMaker.ColomnsSet=1
	ToolsPanelMaker.MatrixModeSet=0
	ToolsPanelMaker.AtrClear ToolsPanelMaker.AtrSet=Mnemo=Hint .AtrValSet="" ToolsPanelMaker.AtrSet=Atr 
		MnemoTable.PopMk=ToolsPanelMaker.Set ToolsPanelMaker.MatrOutMk=AtrList.ConstMatrOut

	ToolsPanelMaker.ColomnsSet=1
	ToolsPanelMaker.AtrClear ToolsPanelMaker.AtrSet=Mnemo ToolsPanelMaker.AtrSet=FUTypeDef
		MnemoServiceTable.PopMk=ToolsPanelMaker.Set
	ToolsPanelMaker.AtrClear ToolsPanelMaker.AtrSet=Mnemo ToolsPanelMaker.AtrSet=Const ToolsPanelMaker.AtrAdd=ConstInt
		MnemoTable.PopMk=ToolsPanelMaker.Add 
	ToolsPanelMaker.MatrOutMk=ConstList.ConstMatrOut

	ToolsPanelMaker.ColomnsSet=1
	ToolsPanelMaker.AtrClear ToolsPanelMaker.AtrSet=Mnemo=Hint ToolsPanelMaker.AtrValSet="" 
          ToolsPanelMaker.AtrSet=PointPointer ToolsPanelMaker.AtrAdd=IcPointer
		MnemoTable.PopMk=ToolsPanelMaker.Set  ToolsPanelMaker.MatrOutMk=PointersList.ConstMatrOut
	ToolsPanelMaker.AtrClear 
         ToolsPanelMaker.AtrSet=Mnemo=Hint .AtrValSet="" 
         ToolsPanelMaker.AtrSet=VarPointer
		MnemoTable.PopMk=ToolsPanelMaker.Set ToolsPanelMaker.MatrOutMk=VarList.ConstMatrOut
	ToolsPanelMaker.ColomnsSet=3
	ToolsPanelMaker.AtrClear ToolsPanelMaker.AtrSet=Mnemo ToolsPanelMaker.AtrSet=Atr=Hint ToolsPanelMaker.AtrValSet=""
		MnemoTable.PopMk=ToolsPanelMaker.Set ToolsPanelMaker.MatrOutMk=OATreeViewer.MnemoAtrSet

	ToolsPanelMaker.MatrixModeSet=1
	ToolsPanelMaker.ColomnsSet=4
	ToolsPanelMaker.AtrClear ToolsPanelMaker.AtrSet=MkBegRange ToolsPanelMaker.AtrSet=Mnemo ToolsPanelMaker.AtrSet=MkList=Hint 
	ToolsPanelMaker.AtrValSet=""
		MnemoServiceTable.PopMk=ToolsPanelMaker.Set ToolsPanelMaker.MatrOutMk=OATreeViewer.MnemoFUSet

	MnemoTable.PopMk=HintRootFind.Set
	MnemoServiceTable.PopMk=HintRootServiceFind.Set
	HintLex.ReceiverMkSet=HintRootServiceFind.FindIp

	MnemoServiceTable.PopMk=PopupMnemoFind.Set
	MnemoServiceTable.PopMk=RootMnemoTableMaker.Set
	MnemoTable.PopMk=RootMnemoTableMaker.Add
	MnemoTable.PopMk=AtrMnemoTableMaker.Set

	MnemoServiceTable.PopMk=HintRootServiceFind.Set
	MnemoTable.PopMk=HintRootFind.Set
	HintRootServiceFind.NextFUMkRangeSet=HintRootFind.Reset
	HintLex.ReceiverMkSet=HintRootServiceFind.FindIp

	MnemoServiceTable.PopMk=FUPanel.Set
	FUPanel.RootNodeTextSet="MainBus"  \\ ???? Можно впоследствии убрать ????
	}
PanelsRestore.Set=FinLexingProg
ProgPanel.PopupEnabled=true

StrSource.FinProgSet={LogCon.MemoClear+FinLexingProg!}

MainMenu.IndexSet=0 MainMenu.SubIndexSet=2 MainMenu.Sub2IndexSet=-1
MainMenu.NewItemProgSet={MainMenu.CaptionClickPopMk=ProgPanel.Open MainMenu.ItemClickToTop
	MainMenu.ItemCaptionsSave="RecentFiles.txt" ProgPanel.Focus}

	Console.RootTabProgSet={MainMenu.EnabledFirstLavelSet=3 MainMenu.EnabledFirstLavelReset=4 MainMenu.EnabledFirstLavelSet=5}
	Console.TestTabProgSet={MainMenu.EnabledFirstLavelReset=3 MainMenu.EnabledFirstLavelSet=4 MainMenu.EnabledFirstLavelReset=5}
	Console.OutTabProgSet={MainMenu.EnabledFirstLavelReset=3 MainMenu.EnabledFirstLavelReset=4 MainMenu.EnabledFirstLavelReset=5}

	ProgPanel.RootTabProgSet={MainMenu.EnabledFirstLavelSet=3 MainMenu.EnabledFirstLavelReset=4 MainMenu.EnabledFirstLavelSet=5}
	ProgPanel.TestTabProgSet={MainMenu.EnabledFirstLavelReset=3 MainMenu.EnabledFirstLavelSet=4 MainMenu.EnabledFirstLavelReset=5}
	ProgPanel.OutTabProgSet={MainMenu.EnabledFirstLavelReset=3 MainMenu.EnabledFirstLavelReset=4 MainMenu.EnabledFirstLavelReset=5}

\\ Заполнение таблицы мнемоник
MnemoTable.Set=
	>{Mnemo="true" Hint="Правда"}
	>{Mnemo="false" Hint="Ложь"}
	>{Mnemo="True" Hint="Правда"}
	>{Mnemo="False" Hint="Ложь"}
	>{Mnemo="nil" PointPointer=nil Hint="Нулевой указатель"}
	>{Mnemo="Bus" Mk=1012 Hint="Команды выдачи на Шину последовательности милликоманд"}
	>{Mnemo="NewFU" Mk=8180 Hint="Создание нового ФУ"}
	>{Mnemo="NewMk" Mk=NewMkList.FindCapsIc Hint="Создание мнемоники новой милликоманды"}
	>{Mnemo="ToolsDisable" Mk=ToolsPanelsDisable.Exec Hint="Отключение обновления инструментальных панелей"}
	>{Mnemo="ToolsEnable" Mk=ToolsPanelsEnable.Exec Hint="Отключение обновления инструментальных панелей"}

	>{Mnemo="ALUMkRange" Mk=ALU.Reset Hint="Миллидиапазон текущего АЛУ"}

	>{Mnemo="Operand" Atr=-1  Hint="Операнд функции"}
	>{Mnemo="Atr" Atr=-8  Hint="Обозначение атрибута"}
	>{Mnemo="Mnemo" Atr=-2  Hint="Атрибут мнемоники"}
	>{Mnemo="Obj" Atr=-6  Hint="Ссылка на объект"}
	>{Mnemo="Const" Atr=-13  Hint="Атрибут константы"}
	>{Mnemo="ConstInt" Atr=-10 Hint="Атрибут целой константы"}
	>{Mnemo="ConstFloat" Atr=-11 Hint="Атрибут дробной константы"}
	>{Mnemo="Mk" Atr=-24 Hint="Атрибут милликоманды"}
	>{Mnemo="ProgStop" Mk=989 Hint="Остановка запущенной на выполнение миллипрограммы для данного ФУ (в нагрузке количество уровней программ для прерывания (по умолчанию 1)"}
	>{Mnemo="ProgStopAll" Mk=988 Hint="Остановка всех запущенных на выполнение миллипрограммы для данного ФУ"}
	>{Mnemo="ProgExec" Mk=990 Hint="Выполнить миллипрограмму по указателю из нагрузки"}
	>{Mnemo="ProgSet" Mk=991 Hint="Установить указатель на миллипрограмму, выполняемую по милликоманде ProgExec, когда в нарузке nil"}
	>{Mnemo="ElseProgSet" Mk=953 Hint="Установить указатель на альтернативную миллипрограмму"}
	>{Mnemo="ProgSetExec" Mk=954 Hint="Установить указатель на программу и выполнить ее"}
	>{Mnemo="RepeatProg" Mk=901 Hint="Повторить программу"}

	>{Mnemo="MkBegRange" Atr=-20 Hint="Атрибут начала диапазона индексов милликоманд"}

	>{Mnemo="MkList" Atr=-21 Hint="Атрибут ссылки на таблицу мнемоник милликоманд"}
	>{Mnemo="FUType" Atr=-22 Hint="Атрибут типа ФУ"}
	>{Mnemo="Hint" Atr=-42 Hint="Атрибут всплывающий подсказки"}

	>{Mnemo="Exeption" Atr=-40 Hint="Исключение"}
	>{Mnemo="IcPointer" Atr=-15 Hint="Указатель на ИП"}
	>{Mnemo="PointPointer" Atr=-63 Hint="Указатель на указатель"}
	>{Mnemo="ListPointer" Atr=-66 Hint="Указатель на ОА-список"}
	>{Mnemo="MkTree" Atr=-64 Hint="Указатель на дерево милликоманд"}
	>{Mnemo="VarPointer" Atr=-14 Hint="Указатель на переменную типа Variant"}
	>{Mnemo="AtrPointer" Atr=-18 Hint="Указатель на атриубут (или любую прееменную типа int64"}
	>{Mnemo="TextSeparatorAtr" Atr=-52 Hint="Текстовый разделитель"}
	>{Mnemo="TreeParentLevelAtr" Atr=-53 Hint="Номер уровня в дереве абстракций для организации вывода текстовой информации"}
	>{Mnemo="TreeNodePicture" Atr=-65 Hint="Атирибут картинки для узла инстурментального дерева"}

	>{Mnemo="FUContext" Atr=-57 Hint="Тип указатель на контекст ФУ"}
	>{Mnemo="RamRequestAtr" Atr=-55 Hint="Атрибут запроса памяти у планировщика (во время имитационного моделирования)"}
	>{Mnemo="CpuRequestAtr" Atr=-56 Hint="Запрос процессора у планировщика (во время имитационного модилрования)"}
	>{Mnemo="TimeIntervalArt" Atr=-58}
	>{Mnemo="CoreIndexAtr" Atr=-59}
	>{Mnemo="EventIndexAtr" Atr=-60}
	>{Mnemo="TimeAtr" Atr=-61}
	>{Mnemo="FUContext" Atr=-62}
	>{Mnemo="CounterAtr" Atr=-68 Hint="Атрибут счетчика (величина, которая прибавляется или вычитается)"}
	>{Mnemo="FUName" Atr=-69 Hint="Атрибут имени ФУ"}

	>{Mnemo="KeyDownProg" Atr=-45}
	>{Mnemo="MkTextClickBusAtr" Atr=-46}
	>{Mnemo="MkTextDoubleClickBusAtr" Atr=-47}
	>{Mnemo="MkTextKeyDownBusAtr" Atr=-48}
	>{Mnemo="MkDataClickBusAtr" Atr=-49}
	>{Mnemo="MkDataDoubleClickBusAtr" Atr=-50}
	>{Mnemo="MkDataKeyDownBusAtr" Atr=-51}
	>{Mnemo="Comment" Atr=-54}
	>{Mnemo="FUTypeDef" Atr=-70 Hint="Атрибут опеределения типа ФУ"} \\ Атрибут описания типа ФУ
	>{Mnemo="Id" Atr=-71 Hint="Атрибут идентификатора"}
	>{Mnemo="NameAtr" Atr=-72 Hint="Атрибут имени"}
	>{Mnemo="Level" Atr=-73 Hint="Атрибут уровня"}
	>{Mnemo="Fork" Atr=-74 Hint="Атрибут развилки"}
	>{Mnemo="Merge" Atr=-75 Hint="Атрибут объединения/слияния"}
	>{Mnemo="Color" Atr=-76 Hint="Атрибут цвета"}
	>{Mnemo="IniProg" Atr=-77 Hint="Атрибут ссылки на программу инициализации"}
	>{Mnemo="Func" Atr=-78 Hint="Атрибут ссылки на функцию для универсального АЛУ"}
	>{Mnemo="Proc" Atr=-79 Hint="Атрибут ссылки на процедуру для универсального АЛУ"}
	>{Mnemo="ListLine" Atr=-80 Hint="Атрибут линии списка"}

	>{Mnemo="YesProg" Atr=-81 Hint="Атрибут линии списка"}
	>{Mnemo="NoProg" Atr=-82 Hint="Атрибут линии списка"}
	>{Mnemo="CharPosAtr" Atr=-83 Hint="Атрибут линии списка"}
	>{Mnemo="Prog" Atr=-84 Hint="Атрибут программы"}
	>{Mnemo="Val" Atr=-85 Hint="Атрибут значения"}
	>{Mnemo="UpProg" Atr=-86 Hint="Атрибут программы при переходе порога вверх"}
	>{Mnemo="DownProg" Atr=-87 Hint="Атрибут программы при переходе порога вниз"}
	>{Mnemo="CalcAtr" Atr=-88 Hint="Атрибут ссылки на арифметический граф"}
	>{Mnemo="RepeatAtr" Atr=-89 Hint="Атрибут повторения (например, части кода)"}

	>{Mnemo="sin"  Func=501  Hint="Функция sin"}
	>{Mnemo="cos"  Func=502  Hint="Функция cos"}
	>{Mnemo="tg"   Func=503  Hint="Функция tg"}
	>{Mnemo="ctg"  Func=504  Hint="Функция ctg"}
	>{Mnemo="asin" Func=505  Hint="Функция asin"}
	>{Mnemo="acos" Func=506  Hint="Функция acos"}
	>{Mnemo="atg"  Func=507  Hint="Функция atg"}

	>{Mnemo="sqr"  Func=520  Hint="Функция квадрат"}
	>{Mnemo="sqrt"  Func=521  Hint="Функция квадратный корень"}
	>{Mnemo="exp"  Func=525  Hint="Функция exp (экспонента)"}
	>{Mnemo="log"  Func=526  Hint="Функция ln (логарифм натуальный)"}

	>{Mnemo="max"  Func=530  Hint="Максимум"}
	>{Mnemo="min"  Func=531  Hint="Минимум"}

	>{Mnemo="MkBegRangeByFUType" Atr=-900}
		
	>{Mnemo="pi" Const=3.1415962}
	>{Mnemo="clWhite" ConstInt=16777215 Hint="Белый"}
	>{Mnemo="clBlack" ConstInt=0  Hint="Чёрный"}
	>{Mnemo="clRed" ConstInt=255  Hint="Красный"}
	>{Mnemo="clGreen" ConstInt=32768  Hint="Зелёный"}	
	>{Mnemo="clDarkBlue" ConstInt=16711680  Hint="Синий"}
	>{Mnemo="clBlue" ConstInt=16776960  Hint="Голубой"}
	>{Mnemo="clGrey" ConstInt=255  Hint="Коричневый"}
	>{Mnemo="clLightGrey" ConstInt=16777215  Hint="Серый"}
	>{Mnemo="clBrown" ConstInt=128  Hint="Коричневый"}
	>{Mnemo="clYellow" ConstInt=65535  Hint="Желтый"}

MnemoTable.PopMk=Console.MnemoListSet // Ссылка на таблицу мнемоник для консоли

\\ Заполнение таблицы с описанием ФУ
Bus={
	FuTypeMkList.RowSet=FUBus; FuTypeMkList.CellPop=temp
	FuTypeMkTrees.RowSet=FUBus; FuTypeMkTrees.CellPop=temp2; 
	MnemoServiceTable.LineAdd={Mnemo="MainBus" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)! MkBegRange=1000 FUType=1
		Hint="Главная шина"}

	FuTypeMkList.RowSet=FUConsole FuTypeMkList.CellPop=temp
	FuTypeMkTrees.RowSet=FUConsole FuTypeMkTrees.CellPop=temp2
	MnemoServiceTable.LineAdd={Mnemo="Cons" MkList=temp(nil)! MkTree=temp2(nil)! MkBegRange=2000 FUType=FUConsole
	Hint="Главная выводная консоль"}

	FuTypeMkList.RowSet=FUCon FuTypeMkList.CellPop=temp
	FuTypeMkTrees.RowSet=FUCon FuTypeMkTrees.CellPop=temp2
	MnemoServiceTable.LineAdd={Mnemo="LogConsole" MkList=temp(nil)! MkTree=temp2(nil)! MkBegRange=3000 FUType=FUCon
	Hint="Консоль для вывода служебных сообщений"}

	FuTypeMkList.RowSet=FUConsole FuTypeMkList.CellPop=temp
	FuTypeMkTrees.RowSet=FUConsole FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="ProgConsole" MkList=temp(nil)! MkTree=temp2(nil)! MkBegRange=4000 FUType=FUConsole
	Hint="Программная консоль"}

	FuTypeMkList.RowSet=FUStringsSource FuTypeMkList.CellPop=temp
	FuTypeMkTrees.RowSet=FUStringsSource FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="StrGen" MkList=temp(nil)! MkTree=temp2(nil)! MkBegRange=5000 FUType=FUStringsSource
	Hint="Генератор строк для запуска программы"}

	FuTypeMkList.RowSet=FUList FuTypeMkList.CellPop=temp
	FuTypeMkTrees.RowSet=FUList FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="MnemoList" MkList=temp(nil)! MkTree=temp2(nil)! MkBegRange=6000 FUType=FUList
	Hint="Таблица мнемоник"}

	FuTypeMkList.RowSet=FUList FuTypeMkList.CellPop=temp
	FuTypeMkTrees.RowSet=FUList FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="MnemoServiceList" MkList=temp(nil)! MkTree=temp2(nil)! MkBegRange=7000 FUType=FUList
	Hint="Таблица служебных мнемоник (ФУ, процедуры, функции и т.д.)"}

	FuTypeMkList.RowSet=FUList FuTypeMkList.CellPop=temp
	FuTypeMkTrees.RowSet=FUList  FuTypeMkTrees.CellPop=temp2
	MnemoServiceTable.LineAdd={Mnemo="ListSyntez" MkList=temp(nil)! MkTree=temp2(nil)! MkBegRange=9000 FUType=FUList}

	FuTypeMkList.RowSet=FUMemManager FuTypeMkList.CellPop=temp
	FuTypeMkTrees.RowSet=FUMemManager FuTypeMkTrees.CellPop=temp2
	MnemoServiceTable.LineAdd={Mnemo="CapsManager" MkList=temp(nil)! MkTree=temp2(nil)! MkBegRange=10000 FUType=FUMemManager
	Hint="Программный синтезатор таблицы"}

	FuTypeMkList.RowSet=FUVar FuTypeMkList.CellPop=temp
	FuTypeMkTrees.RowSet=FUVar FuTypeMkTrees.CellPop=temp2
	MnemoServiceTable.LineAdd={Mnemo="VariableManager" MkList=temp(nil)! MkTree=temp2(nil)! MkBegRange=11000 FUType=FUVar
	Hint="Прораммный диспетчер переменных"}

	FuTypeMkList.RowSet=FUPointMatr FuTypeMkList.CellPop=temp
	FuTypeMkTrees.RowSet=FUPointMatr FuTypeMkTrees.CellPop=temp2
	MnemoServiceTable.LineAdd={Mnemo="FuTypeMkTable" MkList=temp(nil)! MkTree=temp2(nil)! MkBegRange=24000 FUType=FUPointMatr
	Hint="Массив ссылок на деревья описания милликоманд"}

	FuTypeMkList.RowSet=FUMainMenu FuTypeMkList.CellPop=temp
	FuTypeMkTrees.RowSet=FUMainMenu FuTypeMkTrees.CellPop=temp2
	MnemoServiceTable.LineAdd={Mnemo="MainMenu" MkList=temp(nil)! MkTree=temp2(nil)! MkBegRange=26000 FUType=FUMainMenu
	Hint="Инструментальное меню"}

	FuTypeMkList.RowSet=FUGatewayFile FuTypeMkList.CellPop=temp
	FuTypeMkTrees.RowSet=FUGatewayFile FuTypeMkTrees.CellPop=temp2
	MnemoServiceTable.LineAdd={Mnemo="GatewayFile" MkList=temp(nil)! MkTree=temp2(nil)! MkBegRange=27000 FUType=FUGatewayFile
	Hint="Файловый шлюз"}


	FuTypeMkList.RowSet=FUOATreeViewer FuTypeMkList.CellPop=temp
	FuTypeMkTrees.RowSet=FUOATreeViewer FuTypeMkTrees.CellPop=temp2
	MnemoServiceTable.LineAdd={Mnemo="TreeViewer" MkList=temp(nil)! MkTree=temp2(nil)! MkBegRange=28000 FUType=FUOATreeViewer
	Hint="ФУ для просмотра ОА-деревьев"}

	FuTypeMkList.RowSet=FUALU FuTypeMkList.CellPop=temp
	FuTypeMkTrees.RowSet=FUALU FuTypeMkTrees.CellPop=temp2
	MnemoServiceTable.LineAdd={Mnemo="ALU" MkList=temp(nil)! MkTree=temp2(nil)! MkBegRange=29000 FUType=FUALU
	Hint="ФУ для просмотра ОА-деревьев"}
}
\\ Описание типов ФУ
FuTypeMkList.IndexModeSet=1  FuTypeMkTrees.IndexModeSet=1

Bus={FuTypeMkList.RowSet=FUBus; FuTypeMkList.CellPop=temp
	FuTypeMkTrees.RowSet=FUBus; FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FUBus" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)! FUType=1 FUTypeDef=1 Hint="Тип ФУ Шина"}

	FuTypeMkList.CellPop FuTypeMkTrees.CellPop \\ Пропускаем ниспользуемое ФУ Генератор символов 

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FUCon" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=3 FUTypeDef=3 Hint="Тип ФУ Служебная консоль"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FUAutomat" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=4 FUTypeDef=4 Hint="Тип ФУ Автомат"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FUMemManager" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=5 FUTypeDef=5 Hint="Тип ФУ менеджер информационных пар и капсул"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FUCounter" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=6 FUTypeDef=6 Hint="Тип ФУ счетчик"}

	FuTypeMkList.CellPop FuTypeMkTrees.CellPop \\ Пропускаем ниспользуемое ФУ Символьный буфер 

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FUFind" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=8 FUTypeDef=8 Hint="Тип ФУ поиска в информационной капсуле"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FUList" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=9 FUTypeDef=9 Hint="Тип ФУ список ОА-строк (капсул)"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FUBoolALU" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=10 FUTypeDef=10 Hint="Тип ФУ логические АЛУ"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FUFloatALU" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=11 FUTypeDef=11 Hint="Тип ФУ АЛУ с плавающей точкой"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FUIntALU" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=12 FUTypeDef=12 Hint="Тип ФУ целочисленное АЛУ"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FUVar" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=13 FUTypeDef=13 Hint="Тип ФУ менеджер переменных"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FUTimer" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=14 FUTypeDef=14 Hint="Тип ФУ таймер"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FUForm" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=15 FUTypeDef=15 Hint="Тип ФУ экранная форма"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FUPointMatr" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=16 FUTypeDef=16 Hint="Тип ФУ матрица указателей"}

	FuTypeMkList.CellPop FuTypeMkTrees.CellPop \\ Пропускаем ниспользуемое ФУ 
	FuTypeMkList.CellPop FuTypeMkTrees.CellPop \\ Пропускаем ниспользуемое ФУ 
	FuTypeMkList.CellPop FuTypeMkTrees.CellPop \\ Пропускаем ниспользуемое ФУ 
	FuTypeMkList.CellPop FuTypeMkTrees.CellPop \\ Пропускаем ниспользуемое ФУ 

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FUConstMatr" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=21 FUTypeDef=21 Hint="Тип ФУ матрица констант"}

	FuTypeMkList.CellPop FuTypeMkTrees.CellPop \\ Пропускаем ниспользуемое ФУ 
	FuTypeMkList.CellPop FuTypeMkTrees.CellPop \\ Пропускаем ниспользуемое ФУ 

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FUOpenGL" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=24 FUTypeDef=24 Hint="Тип ФУ OpenGL"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FUSignalGen" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=25 FUTypeDef=25 Hint="Тип ФУ генератор сигналов"}

	FuTypeMkList.CellPop FuTypeMkTrees.CellPop \\ Пропускаем ниспользуемое ФУ 
	FuTypeMkList.CellPop FuTypeMkTrees.CellPop \\ Пропускаем ниспользуемое ФУ 
	FuTypeMkList.CellPop FuTypeMkTrees.CellPop \\ Пропускаем ниспользуемое ФУ 

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FUSignalAnalyser" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=29 FUTypeDef=29 Hint="Тип ФУ анализатор сигналов"}

	FuTypeMkList.CellPop FuTypeMkTrees.CellPop \\ Пропускаем ниспользуемое ФУ 

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FUInterpret" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=31 FUTypeDef=31 Hint="Тип ФУ интерпретатор (эмуляция работы других типов ФУ)"}


	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FUChart" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=32 FUTypeDef=32 Hint="Тип ФУ для вывода нескольких графиков"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FUPlot" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=33 FUTypeDef=33 Hint="Тип ФУ для рисования одного графика"}

	FuTypeMkList.CellPop FuTypeMkTrees.CellPop \\ Пропускаем неиспользуемое ФУ 
	FuTypeMkList.CellPop FuTypeMkTrees.CellPop \\ Пропускаем неиспользуемое ФУ 
	FuTypeMkList.CellPop FuTypeMkTrees.CellPop \\ Пропускаем неиспользуемое ФУ 
	FuTypeMkList.CellPop FuTypeMkTrees.CellPop \\ Пропускаем неиспользуемое ФУ 
	FuTypeMkList.CellPop FuTypeMkTrees.CellPop \\ Пропускаем неиспользуемое ФУ 

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FUGatewayFile" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=39 FUTypeDef=39 Hint="Тип ФУ файловый шлюз"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FUOAToolsTree" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=40 FUTypeDef=40 Hint="Тип ФУ инстументальное дерево"}

	FuTypeMkList.CellPop FuTypeMkTrees.CellPop \\ Пропускаем ниспользуемое ФУ 
	FuTypeMkList.CellPop FuTypeMkTrees.CellPop \\ Пропускаем ниспользуемое ФУ 

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FUStringDrid" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=43 FUTypeDef=43 Hint="Тип ФУ таблица строк"}

	FuTypeMkList.CellPop FuTypeMkTrees.CellPop \\ Пропускаем ниспользуемое ФУ 
	FuTypeMkList.CellPop FuTypeMkTrees.CellPop \\ Пропускаем ниспользуемое ФУ 
	FuTypeMkList.CellPop FuTypeMkTrees.CellPop \\ Пропускаем ниспользуемое ФУ 
	FuTypeMkList.CellPop FuTypeMkTrees.CellPop \\ Пропускаем ниспользуемое ФУ 

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FUMainMenu" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=48 FUTypeDef=48 Hint="Тип ФУ главное меню"}

	FuTypeMkList.CellPop FuTypeMkTrees.CellPop \\ Пропускаем ниспользуемое ФУ 
	FuTypeMkList.CellPop FuTypeMkTrees.CellPop \\ Пропускаем ниспользуемое ФУ 
	FuTypeMkList.CellPop FuTypeMkTrees.CellPop \\ Пропускаем ниспользуемое ФУ 
	FuTypeMkList.CellPop FuTypeMkTrees.CellPop \\ Пропускаем ниспользуемое ФУ 

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FUStringsSource" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=53 FUTypeDef=53 Hint="Тип ФУ генератор текстовых строк"}

	FuTypeMkList.CellPop FuTypeMkTrees.CellPop \\ Пропускаем ниспользуемое ФУ 

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FULex" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=54 FUTypeDef=54 Hint="Тип ФУ лексического разбора"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FUOATreeAnalyzer" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=56 FUTypeDef=56 Hint="Тип ФУ анализатор ОА-дерева"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FUConsole" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=57 FUTypeDef=57 Hint="Тип ФУ универсальная консль"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FUListBox" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=58 FUTypeDef=58 Hint="Тип ФУ графического компонента список строк"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FUScheduler" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=59 FUTypeDef=59 Hint="Тип ФУ плинаровщик вычислений"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FUProgExec" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=60 FUTypeDef=60 Hint="Тип ФУ исполнитель программы"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FUIsing" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=61 FUTypeDef=61 Hint="Тип ФУ исполнительное устройство теста Изинга"}


	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FURegexp" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=62 FUTypeDef=62 Hint="Тип ФУ исполнительное устройство теста GREP"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FUEventser" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=63 FUTypeDef=63 Hint="Тип ФУ контроллер событий (Eventser)"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FUIsingManager" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=64 FUTypeDef=64 Hint="Тип ФУ менеждер теста Изинга"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FUIsingTopManager" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=65 FUTypeDef=65 Hint="Тип ФУ топ-менеджер теста Изинга"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FURegexpManager" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=66 FUTypeDef=66 Hint="Тип ФУ менеджер теста GREP"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FURegexpCollector" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=67 FUTypeDef=67 Hint="Тип ФУ сборщик результатов теста GREP"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FUStreamFloatAlu" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=68 FUTypeDef=68 Hint="Тип ФУ потоковое АЛУ для чисел с плавающей точкой"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FUGraph500Manager" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=69 FUTypeDef=69 Hint="Тип ФУ менеджер теста GRAPH500"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FUGraph500Collector" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=70 FUTypeDef=70 Hint="Тип ФУ сборщик результатов теста GRAPH500"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FUElectricFieldManager" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=71 FUTypeDef=71 Hint="Тип ФУ Менеджер расчета электрического поля"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FUCmp" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=72 FUTypeDef=72 Hint="Тип ФУ сравнения величин"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FUToolBar" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=73 FUTypeDef=73 Hint="Тип ФУ графическая инструментальная панель"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FUPlotEx" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=74 FUTypeDef=74 Hint="Тип ФУ вывода графиков"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FUOATreeViewer" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=75 FUTypeDef=75 Hint="Тип ФУ просмотра ОА-дерева"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FULoadMatr" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=76 FUTypeDef=76 Hint="Тип ФУ Матрица нагрузок"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FUGant" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=77 FUTypeDef=77 Hint="Тип ФУ вывода диаграммы Ганта"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FUConstArrayALU" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=78 FUTypeDef=78 Hint="Тип ФУ АЛУ многомерных массивов констант"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FUMessageBox" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=79 FUTypeDef=79 Hint="Тип ФУ окно сообщения"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FUTextBox" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=80 FUTypeDef=80 Hint="Тип ФУ окно для ввода текста"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FUStr" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=81 FUTypeDef=81 Hint="Тип ФУ для обработки строк"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FUTepmeratManager" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=82 FUTypeDef=82 Hint="Тип ФУ менеджер по расчету теплового поля"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FUFFT" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=83 FUTypeDef=83 Hint="Тип ФУ преобразователь Фурье"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FUGatewaySimulyat" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=84 FUTypeDef=84 Hint="Тип ФУ преобразователь Фурье"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FUALU" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=85 FUTypeDef=85 Hint="Тип ФУ универсальное АЛУ"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2 
	MnemoServiceTable.LineAdd={Mnemo="FUGraph" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=86 FUTypeDef=86 Hint="Тип ФУ Анализатое ОА-графов"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2
	MnemoServiceTable.LineAdd={Mnemo="FUMatrSource" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=87 FUTypeDef=87 Hint="Тип ФУ менеджер для системы перемножения матриц"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2
	MnemoServiceTable.LineAdd={Mnemo="FUMatrMulCollector" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=88 FUTypeDef=88 Hint="Тип ФУ сборщик результатов вычислений для системы перемножения матриц"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2
	MnemoServiceTable.LineAdd={Mnemo="FUControlCube" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=89 FUTypeDef=89 Hint="Тип ФУ куб принятия решения для запуска миллипрограмм (куб управления)"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2
	MnemoServiceTable.LineAdd={Mnemo="FUGaus" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=90 FUTypeDef=90 Hint="Тип ФУ менеджер решения системы уравнений методом Гаусса"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2
	MnemoServiceTable.LineAdd={Mnemo="FULingvoList" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=91 FUTypeDef=91 Hint="Тип ФУ лингвистический список"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2
	MnemoServiceTable.LineAdd={Mnemo="FUInOut" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=92 FUTypeDef=92 Hint="Устройство ввода-вывода для структурного автомата"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2
	MnemoServiceTable.LineAdd={Mnemo="FUStrAutomatManager" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=93 FUTypeDef=93 Hint="Менеджер (координатор) структурного автомата"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2
	MnemoServiceTable.LineAdd={Mnemo="FURobotEnvironment" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=94 FUTypeDef=94 Hint="Менеджер (координатор) структурного автомата"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2
	MnemoServiceTable.LineAdd={Mnemo="FUNumGen" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=95 FUTypeDef=95 Hint="Менеджер (координатор) структурного автомата"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2
	MnemoServiceTable.LineAdd={Mnemo="FUBusNew" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=96 FUTypeDef=96 Hint="Шина для новой среды ОА-программирования"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2
	MnemoServiceTable.LineAdd={Mnemo="FUConsNew" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=97 FUTypeDef=97 Hint="Консоль для новой среды ОА-программирования"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2
	MnemoServiceTable.LineAdd={Mnemo="FUStrGenNew" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=98 FUTypeDef=98 Hint="Генератор строк для новой среды ОА-программирования"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2
	MnemoServiceTable.LineAdd={Mnemo="FULexNew" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=99 FUTypeDef=99 Hint="ФУ лексического разбора для новой среды ОА-программирования"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2
	MnemoServiceTable.LineAdd={Mnemo="FUFindNew" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=100 FUTypeDef=100 Hint="Менеджер списка для новой среды ОА-программирования"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2
	MnemoServiceTable.LineAdd={Mnemo="FUListNew" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=101 FUTypeDef=101 Hint="Менеджер списка для новой среды ОА-программирования"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2
	MnemoServiceTable.LineAdd={Mnemo="FUGraphTransf" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=102 FUTypeDef=102 Hint="ФУ трансформации ОА-графа"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2
	MnemoServiceTable.LineAdd={Mnemo="FUALUG" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=103 FUTypeDef=103 Hint="ФУ Универсальное АЛУ и Реализатор вычислительной нити"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2
	MnemoServiceTable.LineAdd={Mnemo="FUInOutNew" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=104 FUTypeDef=104 Hint="ФУ Каналы ввода-вывода из внешней среды (для систем автоматизации)"}

	FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2
	MnemoServiceTable.LineAdd={Mnemo="FUFSM" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
		FUType=105 FUTypeDef=105 Hint="ФУ Менеджер автомата (для систем управления)"}

     FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2
 	MnemoServiceTable.LineAdd={Mnemo="FUNeuron" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
 	FUType=106 FUTypeDef=106 Hint="ФУ технический нейрон"}

     FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2
 	MnemoServiceTable.LineAdd={Mnemo="FUNetManager" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
 	FUType=107 FUTypeDef=107 Hint="ФУ менеджер сетевый расчетов"}

     FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2
 	MnemoServiceTable.LineAdd={Mnemo="FUSchedulerNew" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
 	FUType=108 FUTypeDef=108 Hint="ФУ планировщик вычислений"}

     FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2
 	MnemoServiceTable.LineAdd={Mnemo="FUEventserNew" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
 	FUType=109 FUTypeDef=109 Hint="ФУ контроллер событий"}

     FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2
 	MnemoServiceTable.LineAdd={Mnemo="FUMeanShiftMahager" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
 	FUType=110 FUTypeDef=110 Hint="ФУ контроллер событий"}

     FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2
 	MnemoServiceTable.LineAdd={Mnemo="FUBag" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
 	FUType=111 FUTypeDef=111 Hint="ФУ Решения задачи о рюкзаке методом динамического программирования"}

     FuTypeMkList.CellPop=temp FuTypeMkTrees.CellPop=temp2
 	MnemoServiceTable.LineAdd={Mnemo="FUGauss" TreeParentLevelAtr=1 MkList=temp(nil)! MkTree=temp2(nil)!
 	FUType=112 FUTypeDef=112 Hint="ФУ Решения уравнени методом Гаусса"}
}
FuTypeMkList.IndexModeSet=1
FuTypeMkTrees.IndexModeSet=1
\\ ---------- \\

MnemoServiceTable.PartialResetSet

StrSource.PreStartProgSet={MkBack.IndexReset Lexica.ReceiverMkSet=SyntaxRoot.FindIp Lexica.MnemoReceiverMkSet=MnemoServiceTable.FindIp MkBack.IndexReset}

Lexica.IniProgSet={
		Lexica.StopStrSourceMkSet=StrSource.Stop Lexica.MessageMkSet=LogCon.VarOut
		Lexica.ReceiverMkSet=SyntaxRoot.FindIp Lexica.MnemoReceiverMkSet=MnemoServiceTable.FindIp
	}
FuTypeIndexes.IndexModeSet=0 FuTypeMkTrees.IndexModeSet=0 FuTypeMkList.IndexModeSet=0

NewMkList.Set=
>{FUType NewMkList.InObjDataPopMk=FuTypeIndexes.SearchInCol}
>{MkTree 
	FuTypeIndexes.RowPopMk=FuTypeMkTrees.RowSet FuTypeIndexes.RowPopMk=FuTypeMkList.RowSet
	FuTypeMkTrees.CellPopMk=ObjManager.CapsSet
	NewMkList.InObjPointPopMk=ObjManager.CapsAdd
	FuTypeMkTrees.CellPopMk=MkMaker.Set
	MkMaker.MatrOutMk=FuTypeMkList.CellSet
	}
NewMkList.BusModeSet=2

StrSource.FileNameMkSet=ProgPanel.PageNameSet
StrSource.StringsOutMkSet=ProgPanel.PageStringsOut
StrSource.StringsOutMkSet=ProgPanel.PageStringsOut

